// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module systolic_array_systolic_array_Pipeline_top_outer_loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pe_array_pe_val_3_3_3_reload,
        pe_array_pe_val_3_2_3_reload,
        pe_array_pe_val_3_1_3_reload,
        pe_array_pe_val_3_0_3_reload,
        pe_array_pe_val_2_3_3_reload,
        pe_array_pe_val_2_2_3_reload,
        pe_array_pe_val_2_1_3_reload,
        pe_array_pe_val_2_0_3_reload,
        pe_array_pe_val_1_3_3_reload,
        pe_array_pe_val_1_2_3_reload,
        pe_array_pe_val_1_1_3_reload,
        pe_array_pe_val_1_0_3_reload,
        pe_array_pe_val_0_3_3_reload,
        pe_array_pe_val_0_2_3_reload,
        pe_array_pe_val_0_1_3_reload,
        pe_array_pe_val_0_0_3_reload,
        pe_array_pe_b_pass_2_3_3_reload,
        pe_array_pe_b_pass_2_2_3_reload,
        pe_array_pe_b_pass_2_1_3_reload,
        pe_array_pe_b_pass_2_0_3_reload,
        pe_array_pe_b_pass_1_3_3_reload,
        pe_array_pe_b_pass_1_2_3_reload,
        pe_array_pe_b_pass_1_1_3_reload,
        pe_array_pe_b_pass_1_0_3_reload,
        pe_array_pe_b_pass_0_3_3_reload,
        pe_array_pe_b_pass_0_2_3_reload,
        pe_array_pe_b_pass_0_1_3_reload,
        pe_array_pe_b_pass_0_0_3_reload,
        pe_array_pe_a_pass_3_2_3_reload,
        pe_array_pe_a_pass_3_1_3_reload,
        pe_array_pe_a_pass_3_0_3_reload,
        pe_array_pe_a_pass_2_2_3_reload,
        pe_array_pe_a_pass_2_1_3_reload,
        pe_array_pe_a_pass_2_0_3_reload,
        pe_array_pe_a_pass_1_2_3_reload,
        pe_array_pe_a_pass_1_1_3_reload,
        pe_array_pe_a_pass_1_0_3_reload,
        pe_array_pe_a_pass_0_2_3_reload,
        pe_array_pe_a_pass_0_1_3_reload,
        pe_array_pe_a_pass_0_0_3_reload,
        M1_1_1_reload,
        M1_9_1_reload,
        M1_2_1_reload,
        M1_3_1_reload,
        M1_4_1_reload,
        M1_5_1_reload,
        M1_6_1_reload,
        M1_7_1_reload,
        M1_8_1_reload,
        M1_0_1_reload,
        M2_12_1_reload,
        M2_8_1_reload,
        M2_4_1_reload,
        M2_0_1_reload,
        M1_12_1_reload,
        M1_10_1_reload,
        M1_11_1_reload,
        M2_13_1_reload,
        M2_9_1_reload,
        M2_5_1_reload,
        M2_1_1_reload,
        M1_15_1_reload,
        M1_13_1_reload,
        M1_14_1_reload,
        M2_14_1_reload,
        M2_10_1_reload,
        M2_6_1_reload,
        M2_2_1_reload,
        M2_15_1_reload,
        M2_11_1_reload,
        M2_7_1_reload,
        M2_3_1_reload,
        pe_array_pe_val_3_3_5_out,
        pe_array_pe_val_3_3_5_out_ap_vld,
        pe_array_pe_val_3_2_5_out,
        pe_array_pe_val_3_2_5_out_ap_vld,
        pe_array_pe_val_3_1_5_out,
        pe_array_pe_val_3_1_5_out_ap_vld,
        pe_array_pe_val_3_0_5_out,
        pe_array_pe_val_3_0_5_out_ap_vld,
        pe_array_pe_val_2_3_5_out,
        pe_array_pe_val_2_3_5_out_ap_vld,
        pe_array_pe_val_2_2_5_out,
        pe_array_pe_val_2_2_5_out_ap_vld,
        pe_array_pe_val_2_1_5_out,
        pe_array_pe_val_2_1_5_out_ap_vld,
        pe_array_pe_val_2_0_5_out,
        pe_array_pe_val_2_0_5_out_ap_vld,
        pe_array_pe_val_1_3_5_out,
        pe_array_pe_val_1_3_5_out_ap_vld,
        pe_array_pe_val_1_2_5_out,
        pe_array_pe_val_1_2_5_out_ap_vld,
        pe_array_pe_val_1_1_5_out,
        pe_array_pe_val_1_1_5_out_ap_vld,
        pe_array_pe_val_1_0_5_out,
        pe_array_pe_val_1_0_5_out_ap_vld,
        pe_array_pe_val_0_3_5_out,
        pe_array_pe_val_0_3_5_out_ap_vld,
        pe_array_pe_val_0_2_5_out,
        pe_array_pe_val_0_2_5_out_ap_vld,
        pe_array_pe_val_0_1_5_out,
        pe_array_pe_val_0_1_5_out_ap_vld,
        pe_array_pe_val_0_0_5_out,
        pe_array_pe_val_0_0_5_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] pe_array_pe_val_3_3_3_reload;
input  [31:0] pe_array_pe_val_3_2_3_reload;
input  [31:0] pe_array_pe_val_3_1_3_reload;
input  [31:0] pe_array_pe_val_3_0_3_reload;
input  [31:0] pe_array_pe_val_2_3_3_reload;
input  [31:0] pe_array_pe_val_2_2_3_reload;
input  [31:0] pe_array_pe_val_2_1_3_reload;
input  [31:0] pe_array_pe_val_2_0_3_reload;
input  [31:0] pe_array_pe_val_1_3_3_reload;
input  [31:0] pe_array_pe_val_1_2_3_reload;
input  [31:0] pe_array_pe_val_1_1_3_reload;
input  [31:0] pe_array_pe_val_1_0_3_reload;
input  [31:0] pe_array_pe_val_0_3_3_reload;
input  [31:0] pe_array_pe_val_0_2_3_reload;
input  [31:0] pe_array_pe_val_0_1_3_reload;
input  [31:0] pe_array_pe_val_0_0_3_reload;
input  [31:0] pe_array_pe_b_pass_2_3_3_reload;
input  [31:0] pe_array_pe_b_pass_2_2_3_reload;
input  [31:0] pe_array_pe_b_pass_2_1_3_reload;
input  [31:0] pe_array_pe_b_pass_2_0_3_reload;
input  [31:0] pe_array_pe_b_pass_1_3_3_reload;
input  [31:0] pe_array_pe_b_pass_1_2_3_reload;
input  [31:0] pe_array_pe_b_pass_1_1_3_reload;
input  [31:0] pe_array_pe_b_pass_1_0_3_reload;
input  [31:0] pe_array_pe_b_pass_0_3_3_reload;
input  [31:0] pe_array_pe_b_pass_0_2_3_reload;
input  [31:0] pe_array_pe_b_pass_0_1_3_reload;
input  [31:0] pe_array_pe_b_pass_0_0_3_reload;
input  [31:0] pe_array_pe_a_pass_3_2_3_reload;
input  [31:0] pe_array_pe_a_pass_3_1_3_reload;
input  [31:0] pe_array_pe_a_pass_3_0_3_reload;
input  [31:0] pe_array_pe_a_pass_2_2_3_reload;
input  [31:0] pe_array_pe_a_pass_2_1_3_reload;
input  [31:0] pe_array_pe_a_pass_2_0_3_reload;
input  [31:0] pe_array_pe_a_pass_1_2_3_reload;
input  [31:0] pe_array_pe_a_pass_1_1_3_reload;
input  [31:0] pe_array_pe_a_pass_1_0_3_reload;
input  [31:0] pe_array_pe_a_pass_0_2_3_reload;
input  [31:0] pe_array_pe_a_pass_0_1_3_reload;
input  [31:0] pe_array_pe_a_pass_0_0_3_reload;
input  [31:0] M1_1_1_reload;
input  [31:0] M1_9_1_reload;
input  [31:0] M1_2_1_reload;
input  [31:0] M1_3_1_reload;
input  [31:0] M1_4_1_reload;
input  [31:0] M1_5_1_reload;
input  [31:0] M1_6_1_reload;
input  [31:0] M1_7_1_reload;
input  [31:0] M1_8_1_reload;
input  [31:0] M1_0_1_reload;
input  [31:0] M2_12_1_reload;
input  [31:0] M2_8_1_reload;
input  [31:0] M2_4_1_reload;
input  [31:0] M2_0_1_reload;
input  [31:0] M1_12_1_reload;
input  [31:0] M1_10_1_reload;
input  [31:0] M1_11_1_reload;
input  [31:0] M2_13_1_reload;
input  [31:0] M2_9_1_reload;
input  [31:0] M2_5_1_reload;
input  [31:0] M2_1_1_reload;
input  [31:0] M1_15_1_reload;
input  [31:0] M1_13_1_reload;
input  [31:0] M1_14_1_reload;
input  [31:0] M2_14_1_reload;
input  [31:0] M2_10_1_reload;
input  [31:0] M2_6_1_reload;
input  [31:0] M2_2_1_reload;
input  [31:0] M2_15_1_reload;
input  [31:0] M2_11_1_reload;
input  [31:0] M2_7_1_reload;
input  [31:0] M2_3_1_reload;
output  [31:0] pe_array_pe_val_3_3_5_out;
output   pe_array_pe_val_3_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_3_2_5_out;
output   pe_array_pe_val_3_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_3_1_5_out;
output   pe_array_pe_val_3_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_3_0_5_out;
output   pe_array_pe_val_3_0_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_3_5_out;
output   pe_array_pe_val_2_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_2_5_out;
output   pe_array_pe_val_2_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_1_5_out;
output   pe_array_pe_val_2_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_0_5_out;
output   pe_array_pe_val_2_0_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_3_5_out;
output   pe_array_pe_val_1_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_2_5_out;
output   pe_array_pe_val_1_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_1_5_out;
output   pe_array_pe_val_1_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_0_5_out;
output   pe_array_pe_val_1_0_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_3_5_out;
output   pe_array_pe_val_0_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_2_5_out;
output   pe_array_pe_val_0_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_1_5_out;
output   pe_array_pe_val_0_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_0_5_out;
output   pe_array_pe_val_0_0_5_out_ap_vld;

reg ap_idle;
reg pe_array_pe_val_3_3_5_out_ap_vld;
reg pe_array_pe_val_3_2_5_out_ap_vld;
reg pe_array_pe_val_3_1_5_out_ap_vld;
reg pe_array_pe_val_3_0_5_out_ap_vld;
reg pe_array_pe_val_2_3_5_out_ap_vld;
reg pe_array_pe_val_2_2_5_out_ap_vld;
reg pe_array_pe_val_2_1_5_out_ap_vld;
reg pe_array_pe_val_2_0_5_out_ap_vld;
reg pe_array_pe_val_1_3_5_out_ap_vld;
reg pe_array_pe_val_1_2_5_out_ap_vld;
reg pe_array_pe_val_1_1_5_out_ap_vld;
reg pe_array_pe_val_1_0_5_out_ap_vld;
reg pe_array_pe_val_0_3_5_out_ap_vld;
reg pe_array_pe_val_0_2_5_out_ap_vld;
reg pe_array_pe_val_0_1_5_out_ap_vld;
reg pe_array_pe_val_0_0_5_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln123_fu_1186_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_3039;
reg   [0:0] icmp_ln123_reg_3049;
reg   [0:0] icmp_ln123_reg_3049_pp0_iter1_reg;
reg   [0:0] icmp_ln123_reg_3049_pp0_iter2_reg;
reg   [0:0] icmp_ln123_reg_3049_pp0_iter3_reg;
wire   [0:0] icmp_ln134_1_fu_1214_p2;
reg   [0:0] icmp_ln134_1_reg_3053;
wire   [0:0] icmp_ln134_2_fu_1220_p2;
reg   [0:0] icmp_ln134_2_reg_3061;
wire   [0:0] icmp_ln134_3_fu_1226_p2;
reg   [0:0] icmp_ln134_3_reg_3069;
wire   [0:0] icmp_ln134_4_fu_1232_p2;
reg   [0:0] icmp_ln134_4_reg_3077;
wire   [0:0] icmp_ln135_fu_1248_p2;
reg   [0:0] icmp_ln135_reg_3085;
wire   [0:0] icmp_ln135_1_fu_1254_p2;
reg   [0:0] icmp_ln135_1_reg_3090;
wire   [0:0] icmp_ln135_2_fu_1260_p2;
reg   [0:0] icmp_ln135_2_reg_3095;
wire   [0:0] and_ln134_fu_1306_p2;
reg   [0:0] and_ln134_reg_3100;
wire   [0:0] and_ln135_3_fu_1324_p2;
reg   [0:0] and_ln135_3_reg_3105;
wire   [0:0] and_ln135_4_fu_1336_p2;
reg   [0:0] and_ln135_4_reg_3110;
wire   [0:0] and_ln135_5_fu_1348_p2;
reg   [0:0] and_ln135_5_reg_3115;
wire  signed [31:0] b_vec_1_fu_1378_p3;
reg  signed [31:0] b_vec_1_reg_3120;
wire   [0:0] and_ln134_1_fu_1436_p2;
reg   [0:0] and_ln134_1_reg_3126;
wire   [0:0] and_ln135_6_fu_1448_p2;
reg   [0:0] and_ln135_6_reg_3131;
wire   [0:0] and_ln135_7_fu_1460_p2;
reg   [0:0] and_ln135_7_reg_3136;
wire   [0:0] and_ln135_8_fu_1472_p2;
reg   [0:0] and_ln135_8_reg_3141;
wire  signed [31:0] b_vec_2_fu_1502_p3;
reg  signed [31:0] b_vec_2_reg_3146;
wire   [0:0] and_ln134_2_fu_1586_p2;
reg   [0:0] and_ln134_2_reg_3152;
wire   [0:0] and_ln135_9_fu_1604_p2;
reg   [0:0] and_ln135_9_reg_3157;
wire   [0:0] and_ln135_10_fu_1610_p2;
reg   [0:0] and_ln135_10_reg_3162;
wire   [0:0] and_ln135_11_fu_1622_p2;
reg   [0:0] and_ln135_11_reg_3167;
wire  signed [31:0] b_vec_3_fu_1652_p3;
reg  signed [31:0] b_vec_3_reg_3172;
wire  signed [31:0] pe_array_pe_a_pass_0_0_fu_1865_p3;
reg  signed [31:0] pe_array_pe_a_pass_0_0_reg_3283;
wire  signed [31:0] b_vec_0_fu_1894_p3;
reg  signed [31:0] b_vec_0_reg_3288;
wire  signed [31:0] pe_array_pe_a_pass_1_0_fu_1973_p3;
reg  signed [31:0] pe_array_pe_a_pass_1_0_reg_3294;
wire  signed [31:0] pe_array_pe_a_pass_2_0_fu_2059_p3;
reg  signed [31:0] pe_array_pe_a_pass_2_0_reg_3299;
wire  signed [31:0] pe_array_pe_a_pass_3_0_fu_2124_p3;
reg  signed [31:0] pe_array_pe_a_pass_3_0_reg_3304;
wire   [31:0] grp_fu_2131_p2;
reg   [31:0] mul_ln22_1_reg_3324;
wire   [31:0] grp_fu_2136_p2;
reg   [31:0] mul_ln22_2_reg_3329;
wire   [31:0] grp_fu_2141_p2;
reg   [31:0] mul_ln22_3_reg_3334;
wire   [31:0] grp_fu_2146_p2;
reg   [31:0] mul_ln22_5_reg_3339;
wire   [31:0] grp_fu_2152_p2;
reg   [31:0] mul_ln22_6_reg_3344;
wire   [31:0] grp_fu_2158_p2;
reg   [31:0] mul_ln22_7_reg_3349;
wire   [31:0] grp_fu_2164_p2;
reg   [31:0] mul_ln22_9_reg_3354;
wire   [31:0] grp_fu_2170_p2;
reg   [31:0] mul_ln22_10_reg_3359;
wire   [31:0] grp_fu_2176_p2;
reg   [31:0] mul_ln22_11_reg_3364;
wire   [31:0] grp_fu_2182_p2;
reg   [31:0] mul_ln22_13_reg_3369;
wire   [31:0] grp_fu_2188_p2;
reg   [31:0] mul_ln22_14_reg_3374;
wire   [31:0] grp_fu_2194_p2;
reg   [31:0] mul_ln22_15_reg_3379;
wire   [31:0] grp_fu_2311_p2;
reg   [31:0] mul_ln22_reg_3384;
wire   [31:0] grp_fu_2315_p2;
reg   [31:0] mul_ln22_4_reg_3389;
wire   [31:0] grp_fu_2320_p2;
reg   [31:0] mul_ln22_8_reg_3394;
wire   [31:0] grp_fu_2325_p2;
reg   [31:0] mul_ln22_12_reg_3399;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [3:0] i_fu_270;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0;
wire   [3:0] add_ln123_fu_1192_p2;
reg  signed [31:0] pe_array_pe_a_pass_0_1_fu_274;
reg  signed [31:0] pe_array_pe_a_pass_0_2_1_fu_278;
reg  signed [31:0] pe_array_pe_a_pass_1_1_fu_282;
reg  signed [31:0] pe_array_pe_a_pass_1_2_1_fu_286;
reg  signed [31:0] pe_array_pe_a_pass_2_1_fu_290;
reg  signed [31:0] pe_array_pe_a_pass_2_2_1_fu_294;
reg  signed [31:0] pe_array_pe_a_pass_3_1_fu_298;
reg  signed [31:0] pe_array_pe_a_pass_3_2_1_fu_302;
reg  signed [31:0] pe_array_pe_b_pass_1_0_fu_306;
reg  signed [31:0] pe_array_pe_b_pass_1_1_fu_310;
reg  signed [31:0] pe_array_pe_b_pass_1_2_fu_314;
reg  signed [31:0] pe_array_pe_b_pass_1_3_fu_318;
reg  signed [31:0] pe_array_pe_b_pass_2_0_1_fu_322;
reg  signed [31:0] pe_array_pe_b_pass_2_1_1_fu_326;
reg  signed [31:0] pe_array_pe_b_pass_2_2_1_fu_330;
reg  signed [31:0] pe_array_pe_b_pass_2_3_1_fu_334;
reg   [31:0] pe_array_pe_val_0_0_1_fu_338;
wire   [31:0] pe_array_pe_val_0_0_fu_2512_p2;
reg   [31:0] pe_array_pe_val_0_1_1_fu_342;
wire   [31:0] pe_array_pe_val_0_1_fu_2380_p2;
reg   [31:0] pe_array_pe_val_0_2_1_fu_346;
wire   [31:0] pe_array_pe_val_0_2_fu_2385_p2;
reg   [31:0] pe_array_pe_val_0_3_1_fu_350;
wire   [31:0] pe_array_pe_val_0_3_fu_2390_p2;
reg   [31:0] pe_array_pe_val_1_0_1_fu_354;
wire   [31:0] pe_array_pe_val_1_0_fu_2517_p2;
reg   [31:0] pe_array_pe_val_1_1_1_fu_358;
wire   [31:0] pe_array_pe_val_1_1_fu_2395_p2;
reg   [31:0] pe_array_pe_val_1_2_1_fu_362;
wire   [31:0] pe_array_pe_val_1_2_fu_2400_p2;
reg   [31:0] pe_array_pe_val_1_3_1_fu_366;
wire   [31:0] pe_array_pe_val_1_3_fu_2405_p2;
reg   [31:0] pe_array_pe_val_2_0_1_fu_370;
wire   [31:0] pe_array_pe_val_2_0_fu_2522_p2;
reg   [31:0] pe_array_pe_val_2_1_1_fu_374;
wire   [31:0] pe_array_pe_val_2_1_fu_2410_p2;
reg   [31:0] pe_array_pe_val_2_2_1_fu_378;
wire   [31:0] pe_array_pe_val_2_2_fu_2415_p2;
reg   [31:0] pe_array_pe_val_2_3_1_fu_382;
wire   [31:0] pe_array_pe_val_2_3_fu_2420_p2;
reg   [31:0] pe_array_pe_val_3_0_1_fu_386;
wire   [31:0] pe_array_pe_val_3_0_fu_2527_p2;
reg   [31:0] pe_array_pe_val_3_1_1_fu_390;
wire   [31:0] pe_array_pe_val_3_1_fu_2425_p2;
reg   [31:0] pe_array_pe_val_3_2_1_fu_394;
wire   [31:0] pe_array_pe_val_3_2_fu_2430_p2;
reg   [31:0] pe_array_pe_val_3_3_1_fu_398;
wire   [31:0] pe_array_pe_val_3_3_fu_2435_p2;
reg  signed [31:0] pe_array_pe_a_pass_0_2_fu_402;
reg  signed [31:0] pe_array_pe_a_pass_1_2_fu_406;
reg  signed [31:0] pe_array_pe_a_pass_2_2_fu_410;
reg  signed [31:0] pe_array_pe_a_pass_3_2_fu_414;
reg  signed [31:0] pe_array_pe_b_pass_2_0_fu_418;
reg  signed [31:0] pe_array_pe_b_pass_2_1_fu_422;
reg  signed [31:0] pe_array_pe_b_pass_2_2_fu_426;
reg  signed [31:0] pe_array_pe_b_pass_2_3_fu_430;
wire    ap_block_pp0_stage0_01001;
wire   [5:0] shl_ln_fu_1202_p3;
wire   [3:0] shl_ln135_fu_1242_p2;
wire   [6:0] zext_ln133_fu_1210_p1;
wire   [6:0] add_ln130_fu_1266_p2;
wire   [6:0] or_ln130_fu_1278_p2;
wire   [2:0] tmp_1_fu_1284_p4;
wire   [0:0] icmp_ln133_1_fu_1294_p2;
wire   [0:0] icmp_ln134_fu_1300_p2;
wire   [3:0] add_ln130_1_fu_1272_p2;
wire   [3:0] or_ln135_fu_1312_p2;
wire   [0:0] icmp_ln135_3_fu_1318_p2;
wire   [0:0] icmp_ln135_4_fu_1330_p2;
wire   [0:0] icmp_ln135_5_fu_1342_p2;
wire   [31:0] select_ln134_1_fu_1354_p3;
wire   [31:0] select_ln135_9_fu_1362_p3;
wire   [31:0] select_ln135_10_fu_1370_p3;
wire   [3:0] add_ln129_fu_1386_p2;
wire   [5:0] shl_ln130_1_fu_1392_p3;
wire   [5:0] or_ln130_1_fu_1400_p2;
wire   [1:0] tmp_2_fu_1406_p4;
wire   [0:0] tmp_3_fu_1422_p3;
wire   [0:0] icmp_ln133_2_fu_1416_p2;
wire   [0:0] xor_ln134_fu_1430_p2;
wire   [1:0] trunc_ln135_fu_1238_p1;
wire   [0:0] icmp_ln135_6_fu_1442_p2;
wire   [0:0] icmp_ln135_7_fu_1454_p2;
wire   [0:0] icmp_ln135_8_fu_1466_p2;
wire   [31:0] select_ln134_12_fu_1478_p3;
wire   [31:0] select_ln135_15_fu_1486_p3;
wire   [31:0] select_ln135_16_fu_1494_p3;
wire   [4:0] zext_ln123_fu_1198_p1;
wire   [3:0] add_ln129_1_fu_1510_p2;
wire   [5:0] shl_ln130_2_fu_1522_p3;
wire   [4:0] add_ln129_2_fu_1516_p2;
wire   [0:0] tmp_4_fu_1536_p3;
wire   [5:0] or_ln130_2_fu_1530_p2;
wire   [1:0] tmp_5_fu_1550_p4;
wire   [0:0] tmp_6_fu_1566_p3;
wire   [0:0] icmp_ln133_3_fu_1560_p2;
wire   [0:0] xor_ln134_1_fu_1574_p2;
wire   [0:0] and_ln134_3_fu_1580_p2;
wire   [0:0] xor_ln133_fu_1544_p2;
wire   [1:0] add_ln135_fu_1592_p2;
wire   [0:0] icmp_ln135_9_fu_1598_p2;
wire   [0:0] icmp_ln135_10_fu_1616_p2;
wire   [31:0] select_ln134_20_fu_1628_p3;
wire   [31:0] select_ln135_21_fu_1636_p3;
wire   [31:0] select_ln135_22_fu_1644_p3;
wire   [1:0] tmp_fu_1728_p4;
wire   [31:0] M1_15_fu_1743_p3;
wire   [31:0] M1_15_1_fu_1748_p3;
wire   [31:0] M1_15_2_fu_1754_p3;
wire   [0:0] icmp_ln134_5_fu_1766_p2;
wire   [31:0] M1_15_3_fu_1760_p3;
wire   [0:0] icmp_ln134_6_fu_1778_p2;
wire   [31:0] M1_15_4_fu_1771_p3;
wire   [0:0] icmp_ln134_7_fu_1790_p2;
wire   [31:0] M1_15_5_fu_1783_p3;
wire   [0:0] icmp_ln134_8_fu_1802_p2;
wire   [31:0] M1_15_6_fu_1795_p3;
wire   [0:0] icmp_ln134_9_fu_1814_p2;
wire   [31:0] M1_15_7_fu_1807_p3;
wire   [0:0] icmp_ln133_fu_1737_p2;
wire   [31:0] M1_15_32_fu_1819_p3;
wire   [0:0] and_ln135_fu_1834_p2;
wire   [31:0] select_ln133_fu_1826_p3;
wire   [0:0] and_ln135_1_fu_1847_p2;
wire   [31:0] select_ln135_fu_1839_p3;
wire   [0:0] and_ln135_2_fu_1860_p2;
wire   [31:0] select_ln135_1_fu_1852_p3;
wire   [31:0] select_ln133_1_fu_1873_p3;
wire   [31:0] select_ln135_3_fu_1880_p3;
wire   [31:0] select_ln135_4_fu_1887_p3;
wire   [31:0] M1_15_9_fu_1901_p3;
wire   [31:0] M1_15_10_fu_1906_p3;
wire   [31:0] M1_15_11_fu_1912_p3;
wire   [31:0] M1_15_12_fu_1918_p3;
wire   [31:0] M1_15_13_fu_1925_p3;
wire   [31:0] M1_15_14_fu_1932_p3;
wire   [31:0] M1_15_15_fu_1939_p3;
wire   [31:0] M1_15_33_fu_1946_p3;
wire   [31:0] select_ln134_fu_1952_p3;
wire   [31:0] select_ln135_6_fu_1959_p3;
wire   [31:0] select_ln135_7_fu_1966_p3;
wire   [31:0] M1_15_17_fu_1980_p3;
wire   [31:0] M1_15_18_fu_1985_p3;
wire   [31:0] M1_15_19_fu_1991_p3;
wire   [31:0] M1_15_20_fu_1997_p3;
wire   [31:0] M1_15_21_fu_2003_p3;
wire   [31:0] M1_15_22_fu_2010_p3;
wire   [31:0] M1_15_23_fu_2017_p3;
wire   [31:0] M1_15_24_fu_2024_p3;
wire   [31:0] M1_15_34_fu_2031_p3;
wire   [31:0] select_ln134_11_fu_2038_p3;
wire   [31:0] select_ln135_12_fu_2045_p3;
wire   [31:0] select_ln135_13_fu_2052_p3;
wire   [31:0] M1_15_26_fu_2066_p3;
wire   [31:0] M1_15_27_fu_2071_p3;
wire   [31:0] M1_15_28_fu_2077_p3;
wire   [31:0] M1_15_29_fu_2083_p3;
wire   [31:0] M1_15_30_fu_2089_p3;
wire   [31:0] M1_15_35_fu_2096_p3;
wire   [31:0] select_ln134_19_fu_2103_p3;
wire   [31:0] select_ln135_18_fu_2110_p3;
wire   [31:0] select_ln135_19_fu_2117_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U182(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_vec_1_reg_3120),
    .din1(pe_array_pe_a_pass_0_1_fu_274),
    .ce(1'b1),
    .dout(grp_fu_2131_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U183(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_vec_2_reg_3146),
    .din1(pe_array_pe_a_pass_0_2_fu_402),
    .ce(1'b1),
    .dout(grp_fu_2136_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U184(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_vec_3_reg_3172),
    .din1(pe_array_pe_a_pass_0_2_1_fu_278),
    .ce(1'b1),
    .dout(grp_fu_2141_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U185(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_1_fu_310),
    .din1(pe_array_pe_a_pass_1_1_fu_282),
    .ce(1'b1),
    .dout(grp_fu_2146_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_2_fu_314),
    .din1(pe_array_pe_a_pass_1_2_fu_406),
    .ce(1'b1),
    .dout(grp_fu_2152_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_3_fu_318),
    .din1(pe_array_pe_a_pass_1_2_1_fu_286),
    .ce(1'b1),
    .dout(grp_fu_2158_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_1_fu_422),
    .din1(pe_array_pe_a_pass_2_1_fu_290),
    .ce(1'b1),
    .dout(grp_fu_2164_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_2_fu_426),
    .din1(pe_array_pe_a_pass_2_2_fu_410),
    .ce(1'b1),
    .dout(grp_fu_2170_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_3_fu_430),
    .din1(pe_array_pe_a_pass_2_2_1_fu_294),
    .ce(1'b1),
    .dout(grp_fu_2176_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_1_1_fu_326),
    .din1(pe_array_pe_a_pass_3_1_fu_298),
    .ce(1'b1),
    .dout(grp_fu_2182_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_2_1_fu_330),
    .din1(pe_array_pe_a_pass_3_2_fu_414),
    .ce(1'b1),
    .dout(grp_fu_2188_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_3_1_fu_334),
    .din1(pe_array_pe_a_pass_3_2_1_fu_302),
    .ce(1'b1),
    .dout(grp_fu_2194_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_vec_0_reg_3288),
    .din1(pe_array_pe_a_pass_0_0_reg_3283),
    .ce(1'b1),
    .dout(grp_fu_2311_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_0_fu_306),
    .din1(pe_array_pe_a_pass_1_0_reg_3294),
    .ce(1'b1),
    .dout(grp_fu_2315_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U196(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_0_fu_418),
    .din1(pe_array_pe_a_pass_2_0_reg_3299),
    .ce(1'b1),
    .dout(grp_fu_2320_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U197(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_0_1_fu_322),
    .din1(pe_array_pe_a_pass_3_0_reg_3304),
    .ce(1'b1),
    .dout(grp_fu_2325_p2)
);

systolic_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln123_fu_1186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_270 <= add_ln123_fu_1192_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_270 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_1_fu_274 <= pe_array_pe_a_pass_0_0_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_1_fu_274 <= pe_array_pe_a_pass_0_0_fu_1865_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_2_1_fu_278 <= pe_array_pe_a_pass_0_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_2_1_fu_278 <= pe_array_pe_a_pass_0_2_fu_402;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_2_fu_402 <= pe_array_pe_a_pass_0_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_2_fu_402 <= pe_array_pe_a_pass_0_1_fu_274;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_1_fu_282 <= pe_array_pe_a_pass_1_0_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_1_fu_282 <= pe_array_pe_a_pass_1_0_fu_1973_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_2_1_fu_286 <= pe_array_pe_a_pass_1_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_2_1_fu_286 <= pe_array_pe_a_pass_1_2_fu_406;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_2_fu_406 <= pe_array_pe_a_pass_1_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_2_fu_406 <= pe_array_pe_a_pass_1_1_fu_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_1_fu_290 <= pe_array_pe_a_pass_2_0_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_1_fu_290 <= pe_array_pe_a_pass_2_0_fu_2059_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_2_1_fu_294 <= pe_array_pe_a_pass_2_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_2_1_fu_294 <= pe_array_pe_a_pass_2_2_fu_410;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_2_fu_410 <= pe_array_pe_a_pass_2_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_2_fu_410 <= pe_array_pe_a_pass_2_1_fu_290;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_1_fu_298 <= pe_array_pe_a_pass_3_0_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_1_fu_298 <= pe_array_pe_a_pass_3_0_fu_2124_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_2_1_fu_302 <= pe_array_pe_a_pass_3_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_2_1_fu_302 <= pe_array_pe_a_pass_3_2_fu_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_2_fu_414 <= pe_array_pe_a_pass_3_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_2_fu_414 <= pe_array_pe_a_pass_3_1_fu_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_b_pass_1_0_fu_306 <= pe_array_pe_b_pass_0_0_3_reload;
        end else if (((icmp_ln123_reg_3049_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pe_array_pe_b_pass_1_0_fu_306 <= b_vec_0_reg_3288;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_1_fu_310 <= pe_array_pe_b_pass_0_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_1_fu_310 <= b_vec_1_reg_3120;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_2_fu_314 <= pe_array_pe_b_pass_0_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_2_fu_314 <= b_vec_2_reg_3146;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_3_fu_318 <= pe_array_pe_b_pass_0_3_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_3_fu_318 <= b_vec_3_reg_3172;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_b_pass_2_0_1_fu_322 <= pe_array_pe_b_pass_2_0_3_reload;
        end else if (((icmp_ln123_reg_3049_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pe_array_pe_b_pass_2_0_1_fu_322 <= pe_array_pe_b_pass_2_0_fu_418;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_b_pass_2_0_fu_418 <= pe_array_pe_b_pass_1_0_3_reload;
        end else if (((icmp_ln123_reg_3049_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pe_array_pe_b_pass_2_0_fu_418 <= pe_array_pe_b_pass_1_0_fu_306;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_1_1_fu_326 <= pe_array_pe_b_pass_2_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_1_1_fu_326 <= pe_array_pe_b_pass_2_1_fu_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_1_fu_422 <= pe_array_pe_b_pass_1_1_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_1_fu_422 <= pe_array_pe_b_pass_1_1_fu_310;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_2_1_fu_330 <= pe_array_pe_b_pass_2_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_2_1_fu_330 <= pe_array_pe_b_pass_2_2_fu_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_2_fu_426 <= pe_array_pe_b_pass_1_2_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_2_fu_426 <= pe_array_pe_b_pass_1_2_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_3_1_fu_334 <= pe_array_pe_b_pass_2_3_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_3_1_fu_334 <= pe_array_pe_b_pass_2_3_fu_430;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_3_fu_430 <= pe_array_pe_b_pass_1_3_3_reload;
        end else if (((icmp_ln123_reg_3049 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_3_fu_430 <= pe_array_pe_b_pass_1_3_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_0_0_1_fu_338 <= pe_array_pe_val_0_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            pe_array_pe_val_0_0_1_fu_338 <= pe_array_pe_val_0_0_fu_2512_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_0_1_1_fu_342 <= pe_array_pe_val_0_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_0_1_1_fu_342 <= pe_array_pe_val_0_1_fu_2380_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_0_2_1_fu_346 <= pe_array_pe_val_0_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_0_2_1_fu_346 <= pe_array_pe_val_0_2_fu_2385_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_0_3_1_fu_350 <= pe_array_pe_val_0_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_0_3_1_fu_350 <= pe_array_pe_val_0_3_fu_2390_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_1_0_1_fu_354 <= pe_array_pe_val_1_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            pe_array_pe_val_1_0_1_fu_354 <= pe_array_pe_val_1_0_fu_2517_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_1_1_1_fu_358 <= pe_array_pe_val_1_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_1_1_1_fu_358 <= pe_array_pe_val_1_1_fu_2395_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_1_2_1_fu_362 <= pe_array_pe_val_1_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_1_2_1_fu_362 <= pe_array_pe_val_1_2_fu_2400_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_1_3_1_fu_366 <= pe_array_pe_val_1_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_1_3_1_fu_366 <= pe_array_pe_val_1_3_fu_2405_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_2_0_1_fu_370 <= pe_array_pe_val_2_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            pe_array_pe_val_2_0_1_fu_370 <= pe_array_pe_val_2_0_fu_2522_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_2_1_1_fu_374 <= pe_array_pe_val_2_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_2_1_1_fu_374 <= pe_array_pe_val_2_1_fu_2410_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_2_2_1_fu_378 <= pe_array_pe_val_2_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_2_2_1_fu_378 <= pe_array_pe_val_2_2_fu_2415_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_2_3_1_fu_382 <= pe_array_pe_val_2_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_2_3_1_fu_382 <= pe_array_pe_val_2_3_fu_2420_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_3_0_1_fu_386 <= pe_array_pe_val_3_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            pe_array_pe_val_3_0_1_fu_386 <= pe_array_pe_val_3_0_fu_2527_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_3_1_1_fu_390 <= pe_array_pe_val_3_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_3_1_1_fu_390 <= pe_array_pe_val_3_1_fu_2425_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_3_2_1_fu_394 <= pe_array_pe_val_3_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_3_2_1_fu_394 <= pe_array_pe_val_3_2_fu_2430_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_val_3_3_1_fu_398 <= pe_array_pe_val_3_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pe_array_pe_val_3_3_1_fu_398 <= pe_array_pe_val_3_3_fu_2435_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_fu_1186_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln134_1_reg_3126 <= and_ln134_1_fu_1436_p2;
        and_ln134_2_reg_3152 <= and_ln134_2_fu_1586_p2;
        and_ln134_reg_3100 <= and_ln134_fu_1306_p2;
        and_ln135_10_reg_3162 <= and_ln135_10_fu_1610_p2;
        and_ln135_11_reg_3167 <= and_ln135_11_fu_1622_p2;
        and_ln135_3_reg_3105 <= and_ln135_3_fu_1324_p2;
        and_ln135_4_reg_3110 <= and_ln135_4_fu_1336_p2;
        and_ln135_5_reg_3115 <= and_ln135_5_fu_1348_p2;
        and_ln135_6_reg_3131 <= and_ln135_6_fu_1448_p2;
        and_ln135_7_reg_3136 <= and_ln135_7_fu_1460_p2;
        and_ln135_8_reg_3141 <= and_ln135_8_fu_1472_p2;
        and_ln135_9_reg_3157 <= and_ln135_9_fu_1604_p2;
        b_vec_1_reg_3120 <= b_vec_1_fu_1378_p3;
        b_vec_2_reg_3146 <= b_vec_2_fu_1502_p3;
        b_vec_3_reg_3172 <= b_vec_3_fu_1652_p3;
        icmp_ln134_1_reg_3053 <= icmp_ln134_1_fu_1214_p2;
        icmp_ln134_2_reg_3061 <= icmp_ln134_2_fu_1220_p2;
        icmp_ln134_3_reg_3069 <= icmp_ln134_3_fu_1226_p2;
        icmp_ln134_4_reg_3077 <= icmp_ln134_4_fu_1232_p2;
        icmp_ln135_1_reg_3090 <= icmp_ln135_1_fu_1254_p2;
        icmp_ln135_2_reg_3095 <= icmp_ln135_2_fu_1260_p2;
        icmp_ln135_reg_3085 <= icmp_ln135_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_3039 <= ap_sig_allocacmp_i_1;
        icmp_ln123_reg_3049 <= icmp_ln123_fu_1186_p2;
        icmp_ln123_reg_3049_pp0_iter1_reg <= icmp_ln123_reg_3049;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln123_reg_3049_pp0_iter2_reg <= icmp_ln123_reg_3049_pp0_iter1_reg;
        icmp_ln123_reg_3049_pp0_iter3_reg <= icmp_ln123_reg_3049_pp0_iter2_reg;
        mul_ln22_10_reg_3359 <= grp_fu_2170_p2;
        mul_ln22_11_reg_3364 <= grp_fu_2176_p2;
        mul_ln22_12_reg_3399 <= grp_fu_2325_p2;
        mul_ln22_13_reg_3369 <= grp_fu_2182_p2;
        mul_ln22_14_reg_3374 <= grp_fu_2188_p2;
        mul_ln22_15_reg_3379 <= grp_fu_2194_p2;
        mul_ln22_1_reg_3324 <= grp_fu_2131_p2;
        mul_ln22_2_reg_3329 <= grp_fu_2136_p2;
        mul_ln22_3_reg_3334 <= grp_fu_2141_p2;
        mul_ln22_4_reg_3389 <= grp_fu_2315_p2;
        mul_ln22_5_reg_3339 <= grp_fu_2146_p2;
        mul_ln22_6_reg_3344 <= grp_fu_2152_p2;
        mul_ln22_7_reg_3349 <= grp_fu_2158_p2;
        mul_ln22_8_reg_3394 <= grp_fu_2320_p2;
        mul_ln22_9_reg_3354 <= grp_fu_2164_p2;
        mul_ln22_reg_3384 <= grp_fu_2311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_vec_0_reg_3288 <= b_vec_0_fu_1894_p3;
        pe_array_pe_a_pass_0_0_reg_3283 <= pe_array_pe_a_pass_0_0_fu_1865_p3;
        pe_array_pe_a_pass_1_0_reg_3294 <= pe_array_pe_a_pass_1_0_fu_1973_p3;
        pe_array_pe_a_pass_2_0_reg_3299 <= pe_array_pe_a_pass_2_0_fu_2059_p3;
        pe_array_pe_a_pass_3_0_reg_3304 <= pe_array_pe_a_pass_3_0_fu_2124_p3;
    end
end

always @ (*) begin
    if (((icmp_ln123_fu_1186_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln123_reg_3049_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_270;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_0_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_0_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_0_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_0_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_1_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_1_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_1_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_1_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_2_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_2_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_2_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_2_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_3_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_3_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_3_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_3049_pp0_iter3_reg == 1'd1))) begin
        pe_array_pe_val_3_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M1_15_10_fu_1906_p3 = ((icmp_ln134_3_reg_3069[0:0] == 1'b1) ? M1_6_1_reload : M1_15_9_fu_1901_p3);

assign M1_15_11_fu_1912_p3 = ((icmp_ln134_4_reg_3077[0:0] == 1'b1) ? M1_7_1_reload : M1_15_10_fu_1906_p3);

assign M1_15_12_fu_1918_p3 = ((icmp_ln134_5_fu_1766_p2[0:0] == 1'b1) ? M1_8_1_reload : M1_15_11_fu_1912_p3);

assign M1_15_13_fu_1925_p3 = ((icmp_ln134_6_fu_1778_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_12_fu_1918_p3);

assign M1_15_14_fu_1932_p3 = ((icmp_ln134_7_fu_1790_p2[0:0] == 1'b1) ? M1_10_1_reload : M1_15_13_fu_1925_p3);

assign M1_15_15_fu_1939_p3 = ((icmp_ln134_8_fu_1802_p2[0:0] == 1'b1) ? M1_11_1_reload : M1_15_14_fu_1932_p3);

assign M1_15_17_fu_1980_p3 = ((icmp_ln134_1_reg_3053[0:0] == 1'b1) ? M1_7_1_reload : M1_15_1_reload);

assign M1_15_18_fu_1985_p3 = ((icmp_ln134_2_reg_3061[0:0] == 1'b1) ? M1_8_1_reload : M1_15_17_fu_1980_p3);

assign M1_15_19_fu_1991_p3 = ((icmp_ln134_3_reg_3069[0:0] == 1'b1) ? M1_9_1_reload : M1_15_18_fu_1985_p3);

assign M1_15_1_fu_1748_p3 = ((icmp_ln134_2_reg_3061[0:0] == 1'b1) ? M1_2_1_reload : M1_15_fu_1743_p3);

assign M1_15_20_fu_1997_p3 = ((icmp_ln134_4_reg_3077[0:0] == 1'b1) ? M1_10_1_reload : M1_15_19_fu_1991_p3);

assign M1_15_21_fu_2003_p3 = ((icmp_ln134_5_fu_1766_p2[0:0] == 1'b1) ? M1_11_1_reload : M1_15_20_fu_1997_p3);

assign M1_15_22_fu_2010_p3 = ((icmp_ln134_6_fu_1778_p2[0:0] == 1'b1) ? M1_12_1_reload : M1_15_21_fu_2003_p3);

assign M1_15_23_fu_2017_p3 = ((icmp_ln134_7_fu_1790_p2[0:0] == 1'b1) ? M1_13_1_reload : M1_15_22_fu_2010_p3);

assign M1_15_24_fu_2024_p3 = ((icmp_ln134_8_fu_1802_p2[0:0] == 1'b1) ? M1_14_1_reload : M1_15_23_fu_2017_p3);

assign M1_15_26_fu_2066_p3 = ((icmp_ln134_1_reg_3053[0:0] == 1'b1) ? M1_10_1_reload : M1_15_1_reload);

assign M1_15_27_fu_2071_p3 = ((icmp_ln134_2_reg_3061[0:0] == 1'b1) ? M1_11_1_reload : M1_15_26_fu_2066_p3);

assign M1_15_28_fu_2077_p3 = ((icmp_ln134_3_reg_3069[0:0] == 1'b1) ? M1_12_1_reload : M1_15_27_fu_2071_p3);

assign M1_15_29_fu_2083_p3 = ((icmp_ln134_4_reg_3077[0:0] == 1'b1) ? M1_13_1_reload : M1_15_28_fu_2077_p3);

assign M1_15_2_fu_1754_p3 = ((icmp_ln134_3_reg_3069[0:0] == 1'b1) ? M1_3_1_reload : M1_15_1_fu_1748_p3);

assign M1_15_30_fu_2089_p3 = ((icmp_ln134_5_fu_1766_p2[0:0] == 1'b1) ? M1_14_1_reload : M1_15_29_fu_2083_p3);

assign M1_15_32_fu_1819_p3 = ((icmp_ln134_9_fu_1814_p2[0:0] == 1'b1) ? M1_0_1_reload : M1_15_7_fu_1807_p3);

assign M1_15_33_fu_1946_p3 = ((icmp_ln134_1_reg_3053[0:0] == 1'b1) ? M1_4_1_reload : M1_15_15_fu_1939_p3);

assign M1_15_34_fu_2031_p3 = ((icmp_ln134_9_fu_1814_p2[0:0] == 1'b1) ? M1_6_1_reload : M1_15_24_fu_2024_p3);

assign M1_15_35_fu_2096_p3 = ((icmp_ln134_9_fu_1814_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_30_fu_2089_p3);

assign M1_15_3_fu_1760_p3 = ((icmp_ln134_4_reg_3077[0:0] == 1'b1) ? M1_4_1_reload : M1_15_2_fu_1754_p3);

assign M1_15_4_fu_1771_p3 = ((icmp_ln134_5_fu_1766_p2[0:0] == 1'b1) ? M1_5_1_reload : M1_15_3_fu_1760_p3);

assign M1_15_5_fu_1783_p3 = ((icmp_ln134_6_fu_1778_p2[0:0] == 1'b1) ? M1_6_1_reload : M1_15_4_fu_1771_p3);

assign M1_15_6_fu_1795_p3 = ((icmp_ln134_7_fu_1790_p2[0:0] == 1'b1) ? M1_7_1_reload : M1_15_5_fu_1783_p3);

assign M1_15_7_fu_1807_p3 = ((icmp_ln134_8_fu_1802_p2[0:0] == 1'b1) ? M1_8_1_reload : M1_15_6_fu_1795_p3);

assign M1_15_9_fu_1901_p3 = ((icmp_ln134_2_reg_3061[0:0] == 1'b1) ? M1_5_1_reload : M1_12_1_reload);

assign M1_15_fu_1743_p3 = ((icmp_ln134_1_reg_3053[0:0] == 1'b1) ? M1_1_1_reload : M1_9_1_reload);

assign add_ln123_fu_1192_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln129_1_fu_1510_p2 = ($signed(ap_sig_allocacmp_i_1) + $signed(4'd13));

assign add_ln129_2_fu_1516_p2 = (zext_ln123_fu_1198_p1 + 5'd9);

assign add_ln129_fu_1386_p2 = ($signed(ap_sig_allocacmp_i_1) + $signed(4'd14));

assign add_ln130_1_fu_1272_p2 = ($signed(shl_ln135_fu_1242_p2) + $signed(4'd12));

assign add_ln130_fu_1266_p2 = ($signed(zext_ln133_fu_1210_p1) + $signed(7'd124));

assign add_ln135_fu_1592_p2 = (trunc_ln135_fu_1238_p1 + 2'd1);

assign and_ln134_1_fu_1436_p2 = (xor_ln134_fu_1430_p2 & icmp_ln133_2_fu_1416_p2);

assign and_ln134_2_fu_1586_p2 = (xor_ln133_fu_1544_p2 & and_ln134_3_fu_1580_p2);

assign and_ln134_3_fu_1580_p2 = (xor_ln134_1_fu_1574_p2 & icmp_ln133_3_fu_1560_p2);

assign and_ln134_fu_1306_p2 = (icmp_ln134_fu_1300_p2 & icmp_ln133_1_fu_1294_p2);

assign and_ln135_10_fu_1610_p2 = (icmp_ln135_6_fu_1442_p2 & and_ln134_2_fu_1586_p2);

assign and_ln135_11_fu_1622_p2 = (icmp_ln135_10_fu_1616_p2 & and_ln134_2_fu_1586_p2);

assign and_ln135_1_fu_1847_p2 = (icmp_ln135_1_reg_3090 & icmp_ln133_fu_1737_p2);

assign and_ln135_2_fu_1860_p2 = (icmp_ln135_2_reg_3095 & icmp_ln133_fu_1737_p2);

assign and_ln135_3_fu_1324_p2 = (icmp_ln135_3_fu_1318_p2 & and_ln134_fu_1306_p2);

assign and_ln135_4_fu_1336_p2 = (icmp_ln135_4_fu_1330_p2 & and_ln134_fu_1306_p2);

assign and_ln135_5_fu_1348_p2 = (icmp_ln135_5_fu_1342_p2 & and_ln134_fu_1306_p2);

assign and_ln135_6_fu_1448_p2 = (icmp_ln135_6_fu_1442_p2 & and_ln134_1_fu_1436_p2);

assign and_ln135_7_fu_1460_p2 = (icmp_ln135_7_fu_1454_p2 & and_ln134_1_fu_1436_p2);

assign and_ln135_8_fu_1472_p2 = (icmp_ln135_8_fu_1466_p2 & and_ln134_1_fu_1436_p2);

assign and_ln135_9_fu_1604_p2 = (icmp_ln135_9_fu_1598_p2 & and_ln134_2_fu_1586_p2);

assign and_ln135_fu_1834_p2 = (icmp_ln135_reg_3085 & icmp_ln133_fu_1737_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign b_vec_0_fu_1894_p3 = ((and_ln135_2_fu_1860_p2[0:0] == 1'b1) ? M2_0_1_reload : select_ln135_4_fu_1887_p3);

assign b_vec_1_fu_1378_p3 = ((and_ln135_5_fu_1348_p2[0:0] == 1'b1) ? M2_1_1_reload : select_ln135_10_fu_1370_p3);

assign b_vec_2_fu_1502_p3 = ((and_ln135_8_fu_1472_p2[0:0] == 1'b1) ? M2_2_1_reload : select_ln135_16_fu_1494_p3);

assign b_vec_3_fu_1652_p3 = ((and_ln135_11_fu_1622_p2[0:0] == 1'b1) ? M2_3_1_reload : select_ln135_22_fu_1644_p3);

assign icmp_ln123_fu_1186_p2 = ((ap_sig_allocacmp_i_1 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln133_1_fu_1294_p2 = (($signed(tmp_1_fu_1284_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln133_2_fu_1416_p2 = ((tmp_2_fu_1406_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln133_3_fu_1560_p2 = ((tmp_5_fu_1550_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_1737_p2 = ((tmp_fu_1728_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_1_fu_1214_p2 = ((ap_sig_allocacmp_i_1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln134_2_fu_1220_p2 = ((ap_sig_allocacmp_i_1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln134_3_fu_1226_p2 = ((ap_sig_allocacmp_i_1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln134_4_fu_1232_p2 = ((ap_sig_allocacmp_i_1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln134_5_fu_1766_p2 = ((i_1_reg_3039 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln134_6_fu_1778_p2 = ((i_1_reg_3039 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln134_7_fu_1790_p2 = ((i_1_reg_3039 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln134_8_fu_1802_p2 = ((i_1_reg_3039 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln134_9_fu_1814_p2 = ((i_1_reg_3039 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_1300_p2 = ((ap_sig_allocacmp_i_1 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_10_fu_1616_p2 = ((add_ln135_fu_1592_p2 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_1_fu_1254_p2 = ((shl_ln135_fu_1242_p2 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln135_2_fu_1260_p2 = ((shl_ln135_fu_1242_p2 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_3_fu_1318_p2 = ((or_ln135_fu_1312_p2 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln135_4_fu_1330_p2 = ((or_ln135_fu_1312_p2 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln135_5_fu_1342_p2 = ((or_ln135_fu_1312_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln135_6_fu_1442_p2 = ((trunc_ln135_fu_1238_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_7_fu_1454_p2 = ((trunc_ln135_fu_1238_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln135_8_fu_1466_p2 = ((trunc_ln135_fu_1238_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln135_9_fu_1598_p2 = ((add_ln135_fu_1592_p2 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_1248_p2 = ((shl_ln135_fu_1242_p2 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln130_1_fu_1400_p2 = (shl_ln130_1_fu_1392_p3 | 6'd2);

assign or_ln130_2_fu_1530_p2 = (shl_ln130_2_fu_1522_p3 | 6'd3);

assign or_ln130_fu_1278_p2 = (7'd1 | add_ln130_fu_1266_p2);

assign or_ln135_fu_1312_p2 = (4'd1 | add_ln130_1_fu_1272_p2);

assign pe_array_pe_a_pass_0_0_fu_1865_p3 = ((and_ln135_2_fu_1860_p2[0:0] == 1'b1) ? M1_15_32_fu_1819_p3 : select_ln135_1_fu_1852_p3);

assign pe_array_pe_a_pass_1_0_fu_1973_p3 = ((and_ln135_5_reg_3115[0:0] == 1'b1) ? M1_15_33_fu_1946_p3 : select_ln135_7_fu_1966_p3);

assign pe_array_pe_a_pass_2_0_fu_2059_p3 = ((and_ln135_8_reg_3141[0:0] == 1'b1) ? M1_15_34_fu_2031_p3 : select_ln135_13_fu_2052_p3);

assign pe_array_pe_a_pass_3_0_fu_2124_p3 = ((and_ln135_11_reg_3167[0:0] == 1'b1) ? M1_15_35_fu_2096_p3 : select_ln135_19_fu_2117_p3);

assign pe_array_pe_val_0_0_5_out = pe_array_pe_val_0_0_1_fu_338;

assign pe_array_pe_val_0_0_fu_2512_p2 = (mul_ln22_reg_3384 + pe_array_pe_val_0_0_1_fu_338);

assign pe_array_pe_val_0_1_5_out = pe_array_pe_val_0_1_1_fu_342;

assign pe_array_pe_val_0_1_fu_2380_p2 = (mul_ln22_1_reg_3324 + pe_array_pe_val_0_1_1_fu_342);

assign pe_array_pe_val_0_2_5_out = pe_array_pe_val_0_2_1_fu_346;

assign pe_array_pe_val_0_2_fu_2385_p2 = (mul_ln22_2_reg_3329 + pe_array_pe_val_0_2_1_fu_346);

assign pe_array_pe_val_0_3_5_out = pe_array_pe_val_0_3_1_fu_350;

assign pe_array_pe_val_0_3_fu_2390_p2 = (mul_ln22_3_reg_3334 + pe_array_pe_val_0_3_1_fu_350);

assign pe_array_pe_val_1_0_5_out = pe_array_pe_val_1_0_1_fu_354;

assign pe_array_pe_val_1_0_fu_2517_p2 = (mul_ln22_4_reg_3389 + pe_array_pe_val_1_0_1_fu_354);

assign pe_array_pe_val_1_1_5_out = pe_array_pe_val_1_1_1_fu_358;

assign pe_array_pe_val_1_1_fu_2395_p2 = (mul_ln22_5_reg_3339 + pe_array_pe_val_1_1_1_fu_358);

assign pe_array_pe_val_1_2_5_out = pe_array_pe_val_1_2_1_fu_362;

assign pe_array_pe_val_1_2_fu_2400_p2 = (mul_ln22_6_reg_3344 + pe_array_pe_val_1_2_1_fu_362);

assign pe_array_pe_val_1_3_5_out = pe_array_pe_val_1_3_1_fu_366;

assign pe_array_pe_val_1_3_fu_2405_p2 = (mul_ln22_7_reg_3349 + pe_array_pe_val_1_3_1_fu_366);

assign pe_array_pe_val_2_0_5_out = pe_array_pe_val_2_0_1_fu_370;

assign pe_array_pe_val_2_0_fu_2522_p2 = (mul_ln22_8_reg_3394 + pe_array_pe_val_2_0_1_fu_370);

assign pe_array_pe_val_2_1_5_out = pe_array_pe_val_2_1_1_fu_374;

assign pe_array_pe_val_2_1_fu_2410_p2 = (mul_ln22_9_reg_3354 + pe_array_pe_val_2_1_1_fu_374);

assign pe_array_pe_val_2_2_5_out = pe_array_pe_val_2_2_1_fu_378;

assign pe_array_pe_val_2_2_fu_2415_p2 = (mul_ln22_10_reg_3359 + pe_array_pe_val_2_2_1_fu_378);

assign pe_array_pe_val_2_3_5_out = pe_array_pe_val_2_3_1_fu_382;

assign pe_array_pe_val_2_3_fu_2420_p2 = (mul_ln22_11_reg_3364 + pe_array_pe_val_2_3_1_fu_382);

assign pe_array_pe_val_3_0_5_out = pe_array_pe_val_3_0_1_fu_386;

assign pe_array_pe_val_3_0_fu_2527_p2 = (mul_ln22_12_reg_3399 + pe_array_pe_val_3_0_1_fu_386);

assign pe_array_pe_val_3_1_5_out = pe_array_pe_val_3_1_1_fu_390;

assign pe_array_pe_val_3_1_fu_2425_p2 = (mul_ln22_13_reg_3369 + pe_array_pe_val_3_1_1_fu_390);

assign pe_array_pe_val_3_2_5_out = pe_array_pe_val_3_2_1_fu_394;

assign pe_array_pe_val_3_2_fu_2430_p2 = (mul_ln22_14_reg_3374 + pe_array_pe_val_3_2_1_fu_394);

assign pe_array_pe_val_3_3_5_out = pe_array_pe_val_3_3_1_fu_398;

assign pe_array_pe_val_3_3_fu_2435_p2 = (mul_ln22_15_reg_3379 + pe_array_pe_val_3_3_1_fu_398);

assign select_ln133_1_fu_1873_p3 = ((icmp_ln133_fu_1737_p2[0:0] == 1'b1) ? M2_12_1_reload : 32'd0);

assign select_ln133_fu_1826_p3 = ((icmp_ln133_fu_1737_p2[0:0] == 1'b1) ? M1_15_32_fu_1819_p3 : 32'd0);

assign select_ln134_11_fu_2038_p3 = ((and_ln134_1_reg_3126[0:0] == 1'b1) ? M1_15_34_fu_2031_p3 : 32'd0);

assign select_ln134_12_fu_1478_p3 = ((and_ln134_1_fu_1436_p2[0:0] == 1'b1) ? M2_14_1_reload : 32'd0);

assign select_ln134_19_fu_2103_p3 = ((and_ln134_2_reg_3152[0:0] == 1'b1) ? M1_15_35_fu_2096_p3 : 32'd0);

assign select_ln134_1_fu_1354_p3 = ((and_ln134_fu_1306_p2[0:0] == 1'b1) ? M2_13_1_reload : 32'd0);

assign select_ln134_20_fu_1628_p3 = ((and_ln134_2_fu_1586_p2[0:0] == 1'b1) ? M2_15_1_reload : 32'd0);

assign select_ln134_fu_1952_p3 = ((and_ln134_reg_3100[0:0] == 1'b1) ? M1_15_33_fu_1946_p3 : 32'd0);

assign select_ln135_10_fu_1370_p3 = ((and_ln135_4_fu_1336_p2[0:0] == 1'b1) ? M2_5_1_reload : select_ln135_9_fu_1362_p3);

assign select_ln135_12_fu_2045_p3 = ((and_ln135_6_reg_3131[0:0] == 1'b1) ? M1_15_34_fu_2031_p3 : select_ln134_11_fu_2038_p3);

assign select_ln135_13_fu_2052_p3 = ((and_ln135_7_reg_3136[0:0] == 1'b1) ? M1_15_34_fu_2031_p3 : select_ln135_12_fu_2045_p3);

assign select_ln135_15_fu_1486_p3 = ((and_ln135_6_fu_1448_p2[0:0] == 1'b1) ? M2_10_1_reload : select_ln134_12_fu_1478_p3);

assign select_ln135_16_fu_1494_p3 = ((and_ln135_7_fu_1460_p2[0:0] == 1'b1) ? M2_6_1_reload : select_ln135_15_fu_1486_p3);

assign select_ln135_18_fu_2110_p3 = ((and_ln135_9_reg_3157[0:0] == 1'b1) ? M1_15_35_fu_2096_p3 : select_ln134_19_fu_2103_p3);

assign select_ln135_19_fu_2117_p3 = ((and_ln135_10_reg_3162[0:0] == 1'b1) ? M1_15_35_fu_2096_p3 : select_ln135_18_fu_2110_p3);

assign select_ln135_1_fu_1852_p3 = ((and_ln135_1_fu_1847_p2[0:0] == 1'b1) ? M1_15_32_fu_1819_p3 : select_ln135_fu_1839_p3);

assign select_ln135_21_fu_1636_p3 = ((and_ln135_9_fu_1604_p2[0:0] == 1'b1) ? M2_11_1_reload : select_ln134_20_fu_1628_p3);

assign select_ln135_22_fu_1644_p3 = ((and_ln135_10_fu_1610_p2[0:0] == 1'b1) ? M2_7_1_reload : select_ln135_21_fu_1636_p3);

assign select_ln135_3_fu_1880_p3 = ((and_ln135_fu_1834_p2[0:0] == 1'b1) ? M2_8_1_reload : select_ln133_1_fu_1873_p3);

assign select_ln135_4_fu_1887_p3 = ((and_ln135_1_fu_1847_p2[0:0] == 1'b1) ? M2_4_1_reload : select_ln135_3_fu_1880_p3);

assign select_ln135_6_fu_1959_p3 = ((and_ln135_3_reg_3105[0:0] == 1'b1) ? M1_15_33_fu_1946_p3 : select_ln134_fu_1952_p3);

assign select_ln135_7_fu_1966_p3 = ((and_ln135_4_reg_3110[0:0] == 1'b1) ? M1_15_33_fu_1946_p3 : select_ln135_6_fu_1959_p3);

assign select_ln135_9_fu_1362_p3 = ((and_ln135_3_fu_1324_p2[0:0] == 1'b1) ? M2_9_1_reload : select_ln134_1_fu_1354_p3);

assign select_ln135_fu_1839_p3 = ((and_ln135_fu_1834_p2[0:0] == 1'b1) ? M1_15_32_fu_1819_p3 : select_ln133_fu_1826_p3);

assign shl_ln130_1_fu_1392_p3 = {{add_ln129_fu_1386_p2}, {2'd0}};

assign shl_ln130_2_fu_1522_p3 = {{add_ln129_1_fu_1510_p2}, {2'd0}};

assign shl_ln135_fu_1242_p2 = ap_sig_allocacmp_i_1 << 4'd2;

assign shl_ln_fu_1202_p3 = {{ap_sig_allocacmp_i_1}, {2'd0}};

assign tmp_1_fu_1284_p4 = {{or_ln130_fu_1278_p2[6:4]}};

assign tmp_2_fu_1406_p4 = {{or_ln130_1_fu_1400_p2[5:4]}};

assign tmp_3_fu_1422_p3 = add_ln129_fu_1386_p2[32'd3];

assign tmp_4_fu_1536_p3 = add_ln129_2_fu_1516_p2[32'd4];

assign tmp_5_fu_1550_p4 = {{or_ln130_2_fu_1530_p2[5:4]}};

assign tmp_6_fu_1566_p3 = add_ln129_1_fu_1510_p2[32'd3];

assign tmp_fu_1728_p4 = {{i_1_reg_3039[3:2]}};

assign trunc_ln135_fu_1238_p1 = ap_sig_allocacmp_i_1[1:0];

assign xor_ln133_fu_1544_p2 = (tmp_4_fu_1536_p3 ^ 1'd1);

assign xor_ln134_1_fu_1574_p2 = (tmp_6_fu_1566_p3 ^ 1'd1);

assign xor_ln134_fu_1430_p2 = (tmp_3_fu_1422_p3 ^ 1'd1);

assign zext_ln123_fu_1198_p1 = ap_sig_allocacmp_i_1;

assign zext_ln133_fu_1210_p1 = shl_ln_fu_1202_p3;

endmodule //systolic_array_systolic_array_Pipeline_top_outer_loop1
