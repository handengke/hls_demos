// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module systolic_array_systolic_array_Pipeline_VITIS_LOOP_107_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        pe_array_pe_a_pass_address0,
        pe_array_pe_a_pass_ce0,
        pe_array_pe_a_pass_we0,
        pe_array_pe_a_pass_d0,
        pe_array_pe_a_pass_q0,
        pe_array_pe_a_pass_address1,
        pe_array_pe_a_pass_ce1,
        pe_array_pe_a_pass_we1,
        pe_array_pe_a_pass_d1,
        pe_array_pe_a_pass_q1,
        pe_array_pe_b_pass_address0,
        pe_array_pe_b_pass_ce0,
        pe_array_pe_b_pass_we0,
        pe_array_pe_b_pass_d0,
        pe_array_pe_b_pass_q0,
        pe_array_pe_b_pass_address1,
        pe_array_pe_b_pass_ce1,
        pe_array_pe_b_pass_we1,
        pe_array_pe_b_pass_d1,
        pe_array_pe_b_pass_q1,
        pe_array_pe_a_tmp_address0,
        pe_array_pe_a_tmp_ce0,
        pe_array_pe_a_tmp_we0,
        pe_array_pe_a_tmp_d0,
        pe_array_pe_a_tmp_address1,
        pe_array_pe_a_tmp_ce1,
        pe_array_pe_a_tmp_we1,
        pe_array_pe_a_tmp_d1,
        pe_array_pe_b_tmp_address0,
        pe_array_pe_b_tmp_ce0,
        pe_array_pe_b_tmp_we0,
        pe_array_pe_b_tmp_d0,
        pe_array_pe_b_tmp_address1,
        pe_array_pe_b_tmp_ce1,
        pe_array_pe_b_tmp_we1,
        pe_array_pe_b_tmp_d1,
        pe_array_pe_val_address0,
        pe_array_pe_val_ce0,
        pe_array_pe_val_we0,
        pe_array_pe_val_d0,
        pe_array_pe_val_q0,
        pe_array_pe_val_address1,
        pe_array_pe_val_ce1,
        pe_array_pe_val_we1,
        pe_array_pe_val_d1,
        pe_array_pe_val_q1,
        din_a,
        din_b
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [3:0] pe_array_pe_a_pass_address0;
output   pe_array_pe_a_pass_ce0;
output   pe_array_pe_a_pass_we0;
output  [31:0] pe_array_pe_a_pass_d0;
input  [31:0] pe_array_pe_a_pass_q0;
output  [3:0] pe_array_pe_a_pass_address1;
output   pe_array_pe_a_pass_ce1;
output   pe_array_pe_a_pass_we1;
output  [31:0] pe_array_pe_a_pass_d1;
input  [31:0] pe_array_pe_a_pass_q1;
output  [3:0] pe_array_pe_b_pass_address0;
output   pe_array_pe_b_pass_ce0;
output   pe_array_pe_b_pass_we0;
output  [31:0] pe_array_pe_b_pass_d0;
input  [31:0] pe_array_pe_b_pass_q0;
output  [3:0] pe_array_pe_b_pass_address1;
output   pe_array_pe_b_pass_ce1;
output   pe_array_pe_b_pass_we1;
output  [31:0] pe_array_pe_b_pass_d1;
input  [31:0] pe_array_pe_b_pass_q1;
output  [3:0] pe_array_pe_a_tmp_address0;
output   pe_array_pe_a_tmp_ce0;
output   pe_array_pe_a_tmp_we0;
output  [31:0] pe_array_pe_a_tmp_d0;
output  [3:0] pe_array_pe_a_tmp_address1;
output   pe_array_pe_a_tmp_ce1;
output   pe_array_pe_a_tmp_we1;
output  [31:0] pe_array_pe_a_tmp_d1;
output  [3:0] pe_array_pe_b_tmp_address0;
output   pe_array_pe_b_tmp_ce0;
output   pe_array_pe_b_tmp_we0;
output  [31:0] pe_array_pe_b_tmp_d0;
output  [3:0] pe_array_pe_b_tmp_address1;
output   pe_array_pe_b_tmp_ce1;
output   pe_array_pe_b_tmp_we1;
output  [31:0] pe_array_pe_b_tmp_d1;
output  [3:0] pe_array_pe_val_address0;
output   pe_array_pe_val_ce0;
output   pe_array_pe_val_we0;
output  [31:0] pe_array_pe_val_d0;
input  [31:0] pe_array_pe_val_q0;
output  [3:0] pe_array_pe_val_address1;
output   pe_array_pe_val_ce1;
output   pe_array_pe_val_we1;
output  [31:0] pe_array_pe_val_d1;
input  [31:0] pe_array_pe_val_q1;
input  [63:0] din_a;
input  [63:0] din_b;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
reg   [0:0] icmp_ln107_reg_946;
reg   [0:0] and_ln118_2_reg_1012;
reg    ap_predicate_op210_read_state16;
reg    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state32_pp0_stage15_iter1;
reg    ap_block_pp0_stage15_subdone;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] and_ln118_1_reg_997;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] and_ln118_reg_976;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln117_reg_955;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [31:0] a_vec_0_0_reg_234;
reg    ap_predicate_op190_read_state12;
reg    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
reg    ap_block_pp0_stage11_11001;
reg   [31:0] b_vec_0_reg_246;
reg   [31:0] a_vec_1_0_reg_258;
reg    ap_predicate_op202_read_state14;
reg    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
reg    ap_block_pp0_stage13_11001;
reg   [31:0] b_vec_1_reg_270;
reg   [31:0] a_vec_2_0_reg_282;
reg   [31:0] b_vec_2_reg_294;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_937;
wire   [0:0] icmp_ln107_fu_368_p2;
wire   [5:0] shl_ln_fu_380_p3;
reg   [5:0] shl_ln_reg_950;
wire   [0:0] icmp_ln117_fu_402_p2;
reg   [63:0] gmem_addr_reg_959;
reg   [63:0] gmem_addr_1_reg_965;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_predicate_op57_readreq_state2;
reg    ap_block_state2_io;
wire    ap_block_state18_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [6:0] or_ln114_fu_484_p2;
reg   [6:0] or_ln114_reg_971;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_predicate_op66_readreq_state3;
reg    ap_block_state3_io;
wire    ap_block_state19_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] and_ln118_fu_511_p2;
reg   [63:0] gmem_addr_2_reg_980;
reg   [63:0] gmem_addr_3_reg_986;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_predicate_op83_readreq_state4;
reg    ap_block_state4_io;
wire    ap_block_state20_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
wire   [6:0] or_ln114_1_fu_618_p2;
reg   [6:0] or_ln114_1_reg_992;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_predicate_op95_readreq_state5;
reg    ap_block_state5_io;
wire    ap_block_state21_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire   [0:0] and_ln118_1_fu_674_p2;
reg   [63:0] gmem_addr_4_reg_1001;
wire   [5:0] or_ln114_2_fu_740_p2;
reg   [5:0] or_ln114_2_reg_1007;
wire   [0:0] and_ln118_2_fu_796_p2;
reg   [63:0] gmem_addr_6_reg_1016;
reg   [63:0] gmem_addr_5_reg_1022;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_predicate_op140_readreq_state6;
reg    ap_block_state6_io;
wire    ap_block_state22_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg   [63:0] gmem_addr_7_reg_1028;
reg   [31:0] a_vec_0_reg_1034;
reg    ap_predicate_op166_read_state9;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_predicate_op173_readreq_state9;
reg    ap_block_state9_io;
wire    ap_block_state25_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] gmem_addr_1_read_reg_1039;
reg    ap_predicate_op174_read_state10;
reg    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
reg   [31:0] a_vec_1_reg_1044;
reg    ap_predicate_op182_read_state11;
reg    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
reg    ap_block_pp0_stage10_11001;
reg   [31:0] gmem_addr_3_read_reg_1049;
reg   [31:0] a_vec_2_reg_1054;
reg    ap_predicate_op196_read_state13;
reg    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
reg    ap_block_pp0_stage12_11001;
reg   [31:0] gmem_addr_5_read_reg_1059;
reg   [31:0] a_vec_3_reg_1064;
reg    ap_predicate_op206_read_state15;
reg    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state31_pp0_stage14_iter1;
reg    ap_block_pp0_stage14_11001;
reg   [31:0] gmem_addr_7_read_reg_1069;
reg    ap_block_pp0_stage15_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_pulse_fu_330_ap_start;
wire    grp_pulse_fu_330_ap_done;
wire    grp_pulse_fu_330_ap_idle;
wire    grp_pulse_fu_330_ap_ready;
wire   [3:0] grp_pulse_fu_330_this_a_pass_address0;
wire    grp_pulse_fu_330_this_a_pass_ce0;
wire    grp_pulse_fu_330_this_a_pass_we0;
wire   [31:0] grp_pulse_fu_330_this_a_pass_d0;
wire   [3:0] grp_pulse_fu_330_this_a_pass_address1;
wire    grp_pulse_fu_330_this_a_pass_ce1;
wire    grp_pulse_fu_330_this_a_pass_we1;
wire   [31:0] grp_pulse_fu_330_this_a_pass_d1;
wire   [3:0] grp_pulse_fu_330_this_b_pass_address0;
wire    grp_pulse_fu_330_this_b_pass_ce0;
wire    grp_pulse_fu_330_this_b_pass_we0;
wire   [31:0] grp_pulse_fu_330_this_b_pass_d0;
wire   [3:0] grp_pulse_fu_330_this_b_pass_address1;
wire    grp_pulse_fu_330_this_b_pass_ce1;
wire    grp_pulse_fu_330_this_b_pass_we1;
wire   [31:0] grp_pulse_fu_330_this_b_pass_d1;
wire   [3:0] grp_pulse_fu_330_this_a_tmp_address0;
wire    grp_pulse_fu_330_this_a_tmp_ce0;
wire    grp_pulse_fu_330_this_a_tmp_we0;
wire   [31:0] grp_pulse_fu_330_this_a_tmp_d0;
wire   [3:0] grp_pulse_fu_330_this_a_tmp_address1;
wire    grp_pulse_fu_330_this_a_tmp_ce1;
wire    grp_pulse_fu_330_this_a_tmp_we1;
wire   [31:0] grp_pulse_fu_330_this_a_tmp_d1;
wire   [3:0] grp_pulse_fu_330_this_b_tmp_address0;
wire    grp_pulse_fu_330_this_b_tmp_ce0;
wire    grp_pulse_fu_330_this_b_tmp_we0;
wire   [31:0] grp_pulse_fu_330_this_b_tmp_d0;
wire   [3:0] grp_pulse_fu_330_this_b_tmp_address1;
wire    grp_pulse_fu_330_this_b_tmp_ce1;
wire    grp_pulse_fu_330_this_b_tmp_we1;
wire   [31:0] grp_pulse_fu_330_this_b_tmp_d1;
wire   [3:0] grp_pulse_fu_330_this_val_address0;
wire    grp_pulse_fu_330_this_val_ce0;
wire    grp_pulse_fu_330_this_val_we0;
wire   [31:0] grp_pulse_fu_330_this_val_d0;
wire   [3:0] grp_pulse_fu_330_this_val_address1;
wire    grp_pulse_fu_330_this_val_ce1;
wire    grp_pulse_fu_330_this_val_we1;
wire   [31:0] grp_pulse_fu_330_this_val_d1;
reg    grp_pulse_fu_330_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call2;
wire    ap_block_state17_pp0_stage0_iter1_ignore_call2;
wire    ap_block_pp0_stage0_11001_ignoreCallOp214;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call2;
wire    ap_block_state18_pp0_stage1_iter1_ignore_call2;
reg    ap_block_pp0_stage1_11001_ignoreCallOp215;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call2;
wire    ap_block_state19_pp0_stage2_iter1_ignore_call2;
reg    ap_block_pp0_stage2_11001_ignoreCallOp216;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call2;
wire    ap_block_state20_pp0_stage3_iter1_ignore_call2;
reg    ap_block_pp0_stage3_11001_ignoreCallOp217;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call2;
wire    ap_block_state21_pp0_stage4_iter1_ignore_call2;
reg    ap_block_pp0_stage4_11001_ignoreCallOp218;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call2;
wire    ap_block_state22_pp0_stage5_iter1_ignore_call2;
reg    ap_block_pp0_stage5_11001_ignoreCallOp219;
wire    ap_block_state7_pp0_stage6_iter0_ignore_call2;
reg    ap_predicate_op158_readreq_state7;
reg    ap_block_state7_io;
wire    ap_block_state23_pp0_stage6_iter1_ignore_call2;
reg    ap_block_pp0_stage6_11001_ignoreCallOp220;
wire    ap_block_state8_pp0_stage7_iter0_ignore_call2;
reg    ap_predicate_op165_readreq_state8;
reg    ap_block_state8_io;
wire    ap_block_state24_pp0_stage7_iter1_ignore_call2;
reg    ap_block_pp0_stage7_11001_ignoreCallOp221;
reg    ap_block_state9_pp0_stage8_iter0_ignore_call2;
wire    ap_block_state25_pp0_stage8_iter1_ignore_call2;
reg    ap_block_pp0_stage8_11001_ignoreCallOp222;
reg    ap_block_state10_pp0_stage9_iter0_ignore_call2;
wire    ap_block_state26_pp0_stage9_iter1_ignore_call2;
reg    ap_block_pp0_stage9_11001_ignoreCallOp223;
reg    ap_block_state11_pp0_stage10_iter0_ignore_call2;
wire    ap_block_state27_pp0_stage10_iter1_ignore_call2;
reg    ap_block_pp0_stage10_11001_ignoreCallOp224;
reg    ap_block_state12_pp0_stage11_iter0_ignore_call2;
wire    ap_block_state28_pp0_stage11_iter1_ignore_call2;
reg    ap_block_pp0_stage11_11001_ignoreCallOp225;
reg    ap_block_state13_pp0_stage12_iter0_ignore_call2;
wire    ap_block_state29_pp0_stage12_iter1_ignore_call2;
reg    ap_block_pp0_stage12_11001_ignoreCallOp226;
reg    ap_block_state14_pp0_stage13_iter0_ignore_call2;
wire    ap_block_state30_pp0_stage13_iter1_ignore_call2;
reg    ap_block_pp0_stage13_11001_ignoreCallOp227;
reg    ap_block_state15_pp0_stage14_iter0_ignore_call2;
wire    ap_block_state31_pp0_stage14_iter1_ignore_call2;
reg    ap_block_pp0_stage14_11001_ignoreCallOp228;
reg    ap_block_state16_pp0_stage15_iter0_ignore_call2;
wire    ap_block_state32_pp0_stage15_iter1_ignore_call2;
reg    ap_block_pp0_stage15_11001_ignoreCallOp229;
reg   [31:0] ap_phi_reg_pp0_iter0_a_vec_0_0_reg_234;
reg   [31:0] ap_phi_reg_pp0_iter0_b_vec_0_reg_246;
reg   [31:0] ap_phi_reg_pp0_iter0_a_vec_1_0_reg_258;
reg   [31:0] ap_phi_reg_pp0_iter0_b_vec_1_reg_270;
reg   [31:0] ap_phi_reg_pp0_iter0_a_vec_2_0_reg_282;
reg   [31:0] ap_phi_reg_pp0_iter0_b_vec_2_reg_294;
reg   [31:0] ap_phi_mux_a_vec_3_0_phi_fu_310_p4;
reg   [31:0] ap_phi_mux_b_vec_3_phi_fu_322_p4;
reg    grp_pulse_fu_330_ap_start_reg;
wire    ap_block_pp0_stage0;
wire  signed [63:0] sext_ln118_fu_424_p1;
wire  signed [63:0] sext_ln119_fu_465_p1;
wire  signed [63:0] sext_ln118_1_fu_549_p1;
wire  signed [63:0] sext_ln119_1_fu_585_p1;
wire  signed [63:0] sext_ln118_2_fu_711_p1;
wire  signed [63:0] sext_ln118_3_fu_833_p1;
wire  signed [63:0] sext_ln119_2_fu_869_p1;
wire  signed [63:0] sext_ln119_3_fu_905_p1;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg   [3:0] i_fu_122;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
wire   [3:0] add_ln107_fu_374_p2;
wire   [1:0] tmp_fu_392_p4;
wire   [63:0] zext_ln117_fu_388_p1;
wire   [63:0] add_ln118_fu_408_p2;
wire   [61:0] trunc_ln1_fu_414_p4;
wire   [7:0] shl_ln1_fu_439_p3;
wire   [63:0] zext_ln119_fu_446_p1;
wire   [63:0] add_ln119_fu_450_p2;
wire   [61:0] trunc_ln2_fu_455_p4;
wire   [6:0] zext_ln117_1_fu_475_p1;
wire   [6:0] add_ln114_fu_478_p2;
wire   [2:0] tmp_1_fu_490_p4;
wire   [0:0] icmp_ln117_1_fu_500_p2;
wire   [0:0] icmp_ln118_fu_506_p2;
wire   [3:0] add_ln118_4_fu_517_p2;
wire   [5:0] shl_ln2_fu_522_p3;
wire   [63:0] zext_ln118_fu_530_p1;
wire   [63:0] add_ln118_1_fu_534_p2;
wire   [61:0] trunc_ln118_1_fu_539_p4;
wire   [8:0] shl_ln119_1_fu_559_p3;
wire  signed [63:0] sext_ln119_4_fu_566_p1;
wire   [63:0] add_ln119_1_fu_570_p2;
wire   [61:0] trunc_ln119_1_fu_575_p4;
wire   [4:0] trunc_ln113_cast_fu_595_p1;
wire   [4:0] add_ln113_fu_598_p2;
wire   [6:0] shl_ln114_1_fu_610_p3;
wire   [4:0] add_ln113_1_fu_604_p2;
wire   [0:0] tmp_2_fu_624_p3;
wire   [2:0] tmp_3_fu_638_p4;
wire   [0:0] tmp_4_fu_654_p3;
wire   [0:0] xor_ln117_fu_632_p2;
wire   [0:0] xor_ln118_fu_662_p2;
wire   [0:0] and_ln118_3_fu_668_p2;
wire   [0:0] icmp_ln117_2_fu_648_p2;
wire   [3:0] trunc_ln118_fu_680_p1;
wire   [5:0] shl_ln118_1_fu_684_p3;
wire   [63:0] zext_ln118_1_fu_692_p1;
wire   [63:0] add_ln118_2_fu_696_p2;
wire   [61:0] trunc_ln118_2_fu_701_p4;
wire   [3:0] add_ln113_2_fu_721_p2;
wire   [5:0] shl_ln114_2_fu_732_p3;
wire   [4:0] add_ln113_3_fu_726_p2;
wire   [0:0] tmp_5_fu_746_p3;
wire   [1:0] tmp_6_fu_760_p4;
wire   [0:0] tmp_7_fu_776_p3;
wire   [0:0] xor_ln117_1_fu_754_p2;
wire   [0:0] xor_ln118_1_fu_784_p2;
wire   [0:0] and_ln118_4_fu_790_p2;
wire   [0:0] icmp_ln117_3_fu_770_p2;
wire   [3:0] trunc_ln118_4_fu_802_p1;
wire   [5:0] shl_ln118_2_fu_806_p3;
wire   [63:0] zext_ln118_2_fu_814_p1;
wire   [63:0] add_ln118_3_fu_818_p2;
wire   [61:0] trunc_ln118_3_fu_823_p4;
wire   [8:0] shl_ln119_2_fu_843_p3;
wire  signed [63:0] sext_ln119_5_fu_850_p1;
wire   [63:0] add_ln119_2_fu_854_p2;
wire   [61:0] trunc_ln119_2_fu_859_p4;
wire   [7:0] shl_ln119_3_fu_879_p3;
wire  signed [63:0] sext_ln119_6_fu_886_p1;
wire   [63:0] add_ln119_3_fu_890_p2;
wire   [61:0] trunc_ln119_3_fu_895_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1393;
reg    ap_condition_1397;
reg    ap_condition_1401;
reg    ap_condition_1404;
reg    ap_condition_1407;
reg    ap_condition_1410;
reg    ap_condition_1415;
reg    ap_condition_1419;
reg    ap_condition_1423;
reg    ap_condition_1427;
reg    ap_condition_1431;
reg    ap_condition_1435;
reg    ap_condition_1439;
reg    ap_condition_1443;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_pulse_fu_330_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

systolic_array_pulse grp_pulse_fu_330(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pulse_fu_330_ap_start),
    .ap_done(grp_pulse_fu_330_ap_done),
    .ap_idle(grp_pulse_fu_330_ap_idle),
    .ap_ready(grp_pulse_fu_330_ap_ready),
    .this_a_pass_address0(grp_pulse_fu_330_this_a_pass_address0),
    .this_a_pass_ce0(grp_pulse_fu_330_this_a_pass_ce0),
    .this_a_pass_we0(grp_pulse_fu_330_this_a_pass_we0),
    .this_a_pass_d0(grp_pulse_fu_330_this_a_pass_d0),
    .this_a_pass_q0(pe_array_pe_a_pass_q0),
    .this_a_pass_address1(grp_pulse_fu_330_this_a_pass_address1),
    .this_a_pass_ce1(grp_pulse_fu_330_this_a_pass_ce1),
    .this_a_pass_we1(grp_pulse_fu_330_this_a_pass_we1),
    .this_a_pass_d1(grp_pulse_fu_330_this_a_pass_d1),
    .this_a_pass_q1(pe_array_pe_a_pass_q1),
    .this_b_pass_address0(grp_pulse_fu_330_this_b_pass_address0),
    .this_b_pass_ce0(grp_pulse_fu_330_this_b_pass_ce0),
    .this_b_pass_we0(grp_pulse_fu_330_this_b_pass_we0),
    .this_b_pass_d0(grp_pulse_fu_330_this_b_pass_d0),
    .this_b_pass_q0(pe_array_pe_b_pass_q0),
    .this_b_pass_address1(grp_pulse_fu_330_this_b_pass_address1),
    .this_b_pass_ce1(grp_pulse_fu_330_this_b_pass_ce1),
    .this_b_pass_we1(grp_pulse_fu_330_this_b_pass_we1),
    .this_b_pass_d1(grp_pulse_fu_330_this_b_pass_d1),
    .this_b_pass_q1(pe_array_pe_b_pass_q1),
    .this_a_tmp_address0(grp_pulse_fu_330_this_a_tmp_address0),
    .this_a_tmp_ce0(grp_pulse_fu_330_this_a_tmp_ce0),
    .this_a_tmp_we0(grp_pulse_fu_330_this_a_tmp_we0),
    .this_a_tmp_d0(grp_pulse_fu_330_this_a_tmp_d0),
    .this_a_tmp_address1(grp_pulse_fu_330_this_a_tmp_address1),
    .this_a_tmp_ce1(grp_pulse_fu_330_this_a_tmp_ce1),
    .this_a_tmp_we1(grp_pulse_fu_330_this_a_tmp_we1),
    .this_a_tmp_d1(grp_pulse_fu_330_this_a_tmp_d1),
    .this_b_tmp_address0(grp_pulse_fu_330_this_b_tmp_address0),
    .this_b_tmp_ce0(grp_pulse_fu_330_this_b_tmp_ce0),
    .this_b_tmp_we0(grp_pulse_fu_330_this_b_tmp_we0),
    .this_b_tmp_d0(grp_pulse_fu_330_this_b_tmp_d0),
    .this_b_tmp_address1(grp_pulse_fu_330_this_b_tmp_address1),
    .this_b_tmp_ce1(grp_pulse_fu_330_this_b_tmp_ce1),
    .this_b_tmp_we1(grp_pulse_fu_330_this_b_tmp_we1),
    .this_b_tmp_d1(grp_pulse_fu_330_this_b_tmp_d1),
    .this_val_address0(grp_pulse_fu_330_this_val_address0),
    .this_val_ce0(grp_pulse_fu_330_this_val_ce0),
    .this_val_we0(grp_pulse_fu_330_this_val_we0),
    .this_val_d0(grp_pulse_fu_330_this_val_d0),
    .this_val_q0(pe_array_pe_val_q0),
    .this_val_address1(grp_pulse_fu_330_this_val_address1),
    .this_val_ce1(grp_pulse_fu_330_this_val_ce1),
    .this_val_we1(grp_pulse_fu_330_this_val_we1),
    .this_val_d1(grp_pulse_fu_330_this_val_d1),
    .this_val_q1(pe_array_pe_val_q1),
    .p_read(a_vec_0_0_reg_234),
    .p_read1(a_vec_1_0_reg_258),
    .p_read2(a_vec_2_0_reg_282),
    .p_read3(ap_phi_mux_a_vec_3_0_phi_fu_310_p4),
    .p_read4(b_vec_0_reg_246),
    .p_read5(b_vec_1_reg_270),
    .p_read6(b_vec_2_reg_294),
    .p_read7(ap_phi_mux_b_vec_3_phi_fu_322_p4),
    .ap_ce(grp_pulse_fu_330_ap_ce)
);

systolic_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pulse_fu_330_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
            grp_pulse_fu_330_ap_start_reg <= 1'b1;
        end else if ((grp_pulse_fu_330_ap_ready == 1'b1)) begin
            grp_pulse_fu_330_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1397)) begin
            ap_phi_reg_pp0_iter0_a_vec_0_0_reg_234 <= 32'd0;
        end else if ((1'b1 == ap_condition_1393)) begin
            ap_phi_reg_pp0_iter0_a_vec_0_0_reg_234 <= a_vec_0_reg_1034;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_reg_946 == 1'd0))) begin
        if ((1'b1 == ap_condition_1404)) begin
            ap_phi_reg_pp0_iter0_a_vec_1_0_reg_258 <= 32'd0;
        end else if ((1'b1 == ap_condition_1401)) begin
            ap_phi_reg_pp0_iter0_a_vec_1_0_reg_258 <= a_vec_1_reg_1044;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_reg_946 == 1'd0))) begin
        if ((1'b1 == ap_condition_1410)) begin
            ap_phi_reg_pp0_iter0_a_vec_2_0_reg_282 <= 32'd0;
        end else if ((1'b1 == ap_condition_1407)) begin
            ap_phi_reg_pp0_iter0_a_vec_2_0_reg_282 <= a_vec_2_reg_1054;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1397)) begin
            ap_phi_reg_pp0_iter0_b_vec_0_reg_246 <= 32'd0;
        end else if ((1'b1 == ap_condition_1393)) begin
            ap_phi_reg_pp0_iter0_b_vec_0_reg_246 <= gmem_addr_1_read_reg_1039;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_reg_946 == 1'd0))) begin
        if ((1'b1 == ap_condition_1404)) begin
            ap_phi_reg_pp0_iter0_b_vec_1_reg_270 <= 32'd0;
        end else if ((1'b1 == ap_condition_1401)) begin
            ap_phi_reg_pp0_iter0_b_vec_1_reg_270 <= gmem_addr_3_read_reg_1049;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_reg_946 == 1'd0))) begin
        if ((1'b1 == ap_condition_1410)) begin
            ap_phi_reg_pp0_iter0_b_vec_2_reg_294 <= 32'd0;
        end else if ((1'b1 == ap_condition_1407)) begin
            ap_phi_reg_pp0_iter0_b_vec_2_reg_294 <= gmem_addr_5_read_reg_1059;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln107_fu_368_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_122 <= add_ln107_fu_374_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_122 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        a_vec_0_0_reg_234 <= ap_phi_reg_pp0_iter0_a_vec_0_0_reg_234;
        b_vec_0_reg_246 <= ap_phi_reg_pp0_iter0_b_vec_0_reg_246;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op166_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        a_vec_0_reg_1034 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        a_vec_1_0_reg_258 <= ap_phi_reg_pp0_iter0_a_vec_1_0_reg_258;
        b_vec_1_reg_270 <= ap_phi_reg_pp0_iter0_b_vec_1_reg_270;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op182_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        a_vec_1_reg_1044 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        a_vec_2_0_reg_282 <= ap_phi_reg_pp0_iter0_a_vec_2_0_reg_282;
        b_vec_2_reg_294 <= ap_phi_reg_pp0_iter0_b_vec_2_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op196_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        a_vec_2_reg_1054 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op206_read_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        a_vec_3_reg_1064 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln107_reg_946 == 1'd0))) begin
        and_ln118_1_reg_997 <= and_ln118_1_fu_674_p2;
        and_ln118_2_reg_1012 <= and_ln118_2_fu_796_p2;
        or_ln114_1_reg_992[6 : 2] <= or_ln114_1_fu_618_p2[6 : 2];
        or_ln114_2_reg_1007[5 : 2] <= or_ln114_2_fu_740_p2[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln107_reg_946 == 1'd0))) begin
        and_ln118_reg_976 <= and_ln118_fu_511_p2;
        or_ln114_reg_971[6 : 2] <= or_ln114_fu_484_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op174_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem_addr_1_read_reg_1039 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_reg_955 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_1_reg_965 <= sext_ln119_fu_465_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln118_fu_511_p2) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_2_reg_980 <= sext_ln118_1_fu_549_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op190_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_addr_3_read_reg_1049 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_3_reg_986 <= sext_ln119_1_fu_585_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln118_1_fu_674_p2) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_4_reg_1001 <= sext_ln118_2_fu_711_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op202_read_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        gmem_addr_5_read_reg_1059 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_5_reg_1022 <= sext_ln119_2_fu_869_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln118_2_fu_796_p2) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_6_reg_1016 <= sext_ln118_3_fu_833_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_predicate_op210_read_state16 == 1'b1))) begin
        gmem_addr_7_read_reg_1069 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0))) begin
        gmem_addr_7_reg_1028 <= sext_ln119_3_fu_905_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_402_p2 == 1'd1) & (icmp_ln107_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_reg_959 <= sext_ln118_fu_424_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_reg_937 <= ap_sig_allocacmp_i_1;
        icmp_ln107_reg_946 <= icmp_ln107_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln117_reg_955 <= icmp_ln117_fu_402_p2;
        shl_ln_reg_950[5 : 2] <= shl_ln_fu_380_p3[5 : 2];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone) & (icmp_ln107_reg_946 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0))) begin
        ap_phi_mux_a_vec_3_0_phi_fu_310_p4 = a_vec_3_reg_1064;
    end else begin
        ap_phi_mux_a_vec_3_0_phi_fu_310_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0))) begin
        ap_phi_mux_b_vec_3_phi_fu_322_p4 = gmem_addr_7_read_reg_1069;
    end else begin
        ap_phi_mux_b_vec_3_phi_fu_322_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_122;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_reg_955 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_reg_955 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_predicate_op210_read_state16 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_reg_955 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_reg_955 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp229)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp223)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp216)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp215)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp225)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp218)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp224)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp214)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp217)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp227)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp220)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp226)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp219)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp222)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp228)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp221)))) begin
        grp_pulse_fu_330_ap_ce = 1'b1;
    end else begin
        grp_pulse_fu_330_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1443)) begin
            m_axi_gmem_ARADDR = gmem_addr_7_reg_1028;
        end else if ((1'b1 == ap_condition_1439)) begin
            m_axi_gmem_ARADDR = gmem_addr_6_reg_1016;
        end else if ((1'b1 == ap_condition_1435)) begin
            m_axi_gmem_ARADDR = gmem_addr_5_reg_1022;
        end else if ((1'b1 == ap_condition_1431)) begin
            m_axi_gmem_ARADDR = gmem_addr_4_reg_1001;
        end else if ((1'b1 == ap_condition_1427)) begin
            m_axi_gmem_ARADDR = gmem_addr_3_reg_986;
        end else if ((1'b1 == ap_condition_1423)) begin
            m_axi_gmem_ARADDR = gmem_addr_2_reg_980;
        end else if ((1'b1 == ap_condition_1419)) begin
            m_axi_gmem_ARADDR = gmem_addr_1_reg_965;
        end else if ((1'b1 == ap_condition_1415)) begin
            m_axi_gmem_ARADDR = gmem_addr_reg_959;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op165_readreq_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_predicate_op158_readreq_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_predicate_op173_readreq_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_predicate_op140_readreq_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op95_readreq_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_predicate_op83_readreq_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op66_readreq_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op57_readreq_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op206_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_predicate_op196_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_predicate_op182_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_predicate_op174_read_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_predicate_op166_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_predicate_op202_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_predicate_op190_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_predicate_op210_read_state16 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_fu_374_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln113_1_fu_604_p2 = (trunc_ln113_cast_fu_595_p1 + 5'd6);

assign add_ln113_2_fu_721_p2 = ($signed(i_1_reg_937) + $signed(4'd13));

assign add_ln113_3_fu_726_p2 = (trunc_ln113_cast_fu_595_p1 + 5'd9);

assign add_ln113_fu_598_p2 = ($signed(trunc_ln113_cast_fu_595_p1) + $signed(5'd30));

assign add_ln114_fu_478_p2 = ($signed(zext_ln117_1_fu_475_p1) + $signed(7'd124));

assign add_ln118_1_fu_534_p2 = (zext_ln118_fu_530_p1 + din_a);

assign add_ln118_2_fu_696_p2 = (zext_ln118_1_fu_692_p1 + din_a);

assign add_ln118_3_fu_818_p2 = (zext_ln118_2_fu_814_p1 + din_a);

assign add_ln118_4_fu_517_p2 = (i_1_reg_937 + 4'd3);

assign add_ln118_fu_408_p2 = (zext_ln117_fu_388_p1 + din_a);

assign add_ln119_1_fu_570_p2 = ($signed(sext_ln119_4_fu_566_p1) + $signed(din_b));

assign add_ln119_2_fu_854_p2 = ($signed(sext_ln119_5_fu_850_p1) + $signed(din_b));

assign add_ln119_3_fu_890_p2 = ($signed(sext_ln119_6_fu_886_p1) + $signed(din_b));

assign add_ln119_fu_450_p2 = (zext_ln119_fu_446_p1 + din_b);

assign and_ln118_1_fu_674_p2 = (icmp_ln117_2_fu_648_p2 & and_ln118_3_fu_668_p2);

assign and_ln118_2_fu_796_p2 = (icmp_ln117_3_fu_770_p2 & and_ln118_4_fu_790_p2);

assign and_ln118_3_fu_668_p2 = (xor_ln118_fu_662_p2 & xor_ln117_fu_632_p2);

assign and_ln118_4_fu_790_p2 = (xor_ln118_1_fu_784_p2 & xor_ln117_1_fu_754_p2);

assign and_ln118_fu_511_p2 = (icmp_ln118_fu_506_p2 & icmp_ln117_1_fu_500_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp214 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op182_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_ignoreCallOp224 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op182_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op182_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op190_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_ignoreCallOp225 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op190_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op190_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op196_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_11001_ignoreCallOp226 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op196_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op196_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op202_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_ignoreCallOp227 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op202_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op202_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op206_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_11001_ignoreCallOp228 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op206_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op206_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op210_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_ignoreCallOp229 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op210_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op210_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp215 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_ignoreCallOp216 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_ignoreCallOp217 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp218 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp219 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

always @ (*) begin
    ap_block_pp0_stage6_11001_ignoreCallOp220 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

always @ (*) begin
    ap_block_pp0_stage7_11001_ignoreCallOp221 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op166_read_state9 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage8_11001_ignoreCallOp222 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op166_read_state9 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op166_read_state9 == 1'b1))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op174_read_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_11001_ignoreCallOp223 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op174_read_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op174_read_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op174_read_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op174_read_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op182_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op182_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op190_read_state12 == 1'b1));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op190_read_state12 == 1'b1));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op196_read_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op196_read_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op202_read_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op202_read_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op206_read_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op206_read_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op210_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op210_read_state16 == 1'b1));
end

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op57_readreq_state2 == 1'b1));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage15_iter1_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op66_readreq_state3 == 1'b1));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op83_readreq_state4 == 1'b1));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op95_readreq_state5 == 1'b1));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op140_readreq_state6 == 1'b1));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op158_readreq_state7 == 1'b1));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op165_readreq_state8 == 1'b1));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op173_readreq_state9 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op166_read_state9 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0_ignore_call2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op166_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_1393 = ((icmp_ln117_reg_955 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_condition_1397 = ((icmp_ln117_fu_402_p2 == 1'd0) & (icmp_ln107_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1401 = ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (1'd1 == and_ln118_reg_976));
end

always @ (*) begin
    ap_condition_1404 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln118_fu_511_p2));
end

always @ (*) begin
    ap_condition_1407 = ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (1'd1 == and_ln118_1_reg_997));
end

always @ (*) begin
    ap_condition_1410 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln118_1_fu_674_p2));
end

always @ (*) begin
    ap_condition_1415 = ((ap_predicate_op57_readreq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_1419 = ((ap_predicate_op66_readreq_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001));
end

always @ (*) begin
    ap_condition_1423 = ((ap_predicate_op83_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001));
end

always @ (*) begin
    ap_condition_1427 = ((ap_predicate_op95_readreq_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001));
end

always @ (*) begin
    ap_condition_1431 = ((ap_predicate_op140_readreq_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001));
end

always @ (*) begin
    ap_condition_1435 = ((ap_predicate_op158_readreq_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001));
end

always @ (*) begin
    ap_condition_1439 = ((ap_predicate_op165_readreq_state8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001));
end

always @ (*) begin
    ap_condition_1443 = ((ap_predicate_op173_readreq_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

always @ (*) begin
    ap_predicate_op140_readreq_state6 = ((1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_readreq_state7 = ((1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op165_readreq_state8 = ((1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_read_state9 = ((icmp_ln117_reg_955 == 1'd1) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op173_readreq_state9 = ((1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_read_state10 = ((icmp_ln117_reg_955 == 1'd1) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_read_state11 = ((1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op190_read_state12 = ((1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op196_read_state13 = ((1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op202_read_state14 = ((1'd1 == and_ln118_1_reg_997) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op206_read_state15 = ((1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op210_read_state16 = ((1'd1 == and_ln118_2_reg_1012) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op57_readreq_state2 = ((icmp_ln117_reg_955 == 1'd1) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op66_readreq_state3 = ((icmp_ln117_reg_955 == 1'd1) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op83_readreq_state4 = ((1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_readreq_state5 = ((1'd1 == and_ln118_reg_976) & (icmp_ln107_reg_946 == 1'd0));
end

assign grp_pulse_fu_330_ap_start = grp_pulse_fu_330_ap_start_reg;

assign icmp_ln107_fu_368_p2 = ((ap_sig_allocacmp_i_1 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln117_1_fu_500_p2 = (($signed(tmp_1_fu_490_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln117_2_fu_648_p2 = (($signed(tmp_3_fu_638_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln117_3_fu_770_p2 = ((tmp_6_fu_760_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_402_p2 = ((tmp_fu_392_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_506_p2 = ((i_1_reg_937 != 4'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln114_1_fu_618_p2 = (shl_ln114_1_fu_610_p3 | 7'd2);

assign or_ln114_2_fu_740_p2 = (shl_ln114_2_fu_732_p3 | 6'd3);

assign or_ln114_fu_484_p2 = (7'd1 | add_ln114_fu_478_p2);

assign pe_array_pe_a_pass_address0 = grp_pulse_fu_330_this_a_pass_address0;

assign pe_array_pe_a_pass_address1 = grp_pulse_fu_330_this_a_pass_address1;

assign pe_array_pe_a_pass_ce0 = grp_pulse_fu_330_this_a_pass_ce0;

assign pe_array_pe_a_pass_ce1 = grp_pulse_fu_330_this_a_pass_ce1;

assign pe_array_pe_a_pass_d0 = grp_pulse_fu_330_this_a_pass_d0;

assign pe_array_pe_a_pass_d1 = grp_pulse_fu_330_this_a_pass_d1;

assign pe_array_pe_a_pass_we0 = grp_pulse_fu_330_this_a_pass_we0;

assign pe_array_pe_a_pass_we1 = grp_pulse_fu_330_this_a_pass_we1;

assign pe_array_pe_a_tmp_address0 = grp_pulse_fu_330_this_a_tmp_address0;

assign pe_array_pe_a_tmp_address1 = grp_pulse_fu_330_this_a_tmp_address1;

assign pe_array_pe_a_tmp_ce0 = grp_pulse_fu_330_this_a_tmp_ce0;

assign pe_array_pe_a_tmp_ce1 = grp_pulse_fu_330_this_a_tmp_ce1;

assign pe_array_pe_a_tmp_d0 = grp_pulse_fu_330_this_a_tmp_d0;

assign pe_array_pe_a_tmp_d1 = grp_pulse_fu_330_this_a_tmp_d1;

assign pe_array_pe_a_tmp_we0 = grp_pulse_fu_330_this_a_tmp_we0;

assign pe_array_pe_a_tmp_we1 = grp_pulse_fu_330_this_a_tmp_we1;

assign pe_array_pe_b_pass_address0 = grp_pulse_fu_330_this_b_pass_address0;

assign pe_array_pe_b_pass_address1 = grp_pulse_fu_330_this_b_pass_address1;

assign pe_array_pe_b_pass_ce0 = grp_pulse_fu_330_this_b_pass_ce0;

assign pe_array_pe_b_pass_ce1 = grp_pulse_fu_330_this_b_pass_ce1;

assign pe_array_pe_b_pass_d0 = grp_pulse_fu_330_this_b_pass_d0;

assign pe_array_pe_b_pass_d1 = grp_pulse_fu_330_this_b_pass_d1;

assign pe_array_pe_b_pass_we0 = grp_pulse_fu_330_this_b_pass_we0;

assign pe_array_pe_b_pass_we1 = grp_pulse_fu_330_this_b_pass_we1;

assign pe_array_pe_b_tmp_address0 = grp_pulse_fu_330_this_b_tmp_address0;

assign pe_array_pe_b_tmp_address1 = grp_pulse_fu_330_this_b_tmp_address1;

assign pe_array_pe_b_tmp_ce0 = grp_pulse_fu_330_this_b_tmp_ce0;

assign pe_array_pe_b_tmp_ce1 = grp_pulse_fu_330_this_b_tmp_ce1;

assign pe_array_pe_b_tmp_d0 = grp_pulse_fu_330_this_b_tmp_d0;

assign pe_array_pe_b_tmp_d1 = grp_pulse_fu_330_this_b_tmp_d1;

assign pe_array_pe_b_tmp_we0 = grp_pulse_fu_330_this_b_tmp_we0;

assign pe_array_pe_b_tmp_we1 = grp_pulse_fu_330_this_b_tmp_we1;

assign pe_array_pe_val_address0 = grp_pulse_fu_330_this_val_address0;

assign pe_array_pe_val_address1 = grp_pulse_fu_330_this_val_address1;

assign pe_array_pe_val_ce0 = grp_pulse_fu_330_this_val_ce0;

assign pe_array_pe_val_ce1 = grp_pulse_fu_330_this_val_ce1;

assign pe_array_pe_val_d0 = grp_pulse_fu_330_this_val_d0;

assign pe_array_pe_val_d1 = grp_pulse_fu_330_this_val_d1;

assign pe_array_pe_val_we0 = grp_pulse_fu_330_this_val_we0;

assign pe_array_pe_val_we1 = grp_pulse_fu_330_this_val_we1;

assign sext_ln118_1_fu_549_p1 = $signed(trunc_ln118_1_fu_539_p4);

assign sext_ln118_2_fu_711_p1 = $signed(trunc_ln118_2_fu_701_p4);

assign sext_ln118_3_fu_833_p1 = $signed(trunc_ln118_3_fu_823_p4);

assign sext_ln118_fu_424_p1 = $signed(trunc_ln1_fu_414_p4);

assign sext_ln119_1_fu_585_p1 = $signed(trunc_ln119_1_fu_575_p4);

assign sext_ln119_2_fu_869_p1 = $signed(trunc_ln119_2_fu_859_p4);

assign sext_ln119_3_fu_905_p1 = $signed(trunc_ln119_3_fu_895_p4);

assign sext_ln119_4_fu_566_p1 = $signed(shl_ln119_1_fu_559_p3);

assign sext_ln119_5_fu_850_p1 = $signed(shl_ln119_2_fu_843_p3);

assign sext_ln119_6_fu_886_p1 = $signed(shl_ln119_3_fu_879_p3);

assign sext_ln119_fu_465_p1 = $signed(trunc_ln2_fu_455_p4);

assign shl_ln114_1_fu_610_p3 = {{add_ln113_fu_598_p2}, {2'd0}};

assign shl_ln114_2_fu_732_p3 = {{add_ln113_2_fu_721_p2}, {2'd0}};

assign shl_ln118_1_fu_684_p3 = {{trunc_ln118_fu_680_p1}, {2'd0}};

assign shl_ln118_2_fu_806_p3 = {{trunc_ln118_4_fu_802_p1}, {2'd0}};

assign shl_ln119_1_fu_559_p3 = {{or_ln114_reg_971}, {2'd0}};

assign shl_ln119_2_fu_843_p3 = {{or_ln114_1_reg_992}, {2'd0}};

assign shl_ln119_3_fu_879_p3 = {{or_ln114_2_reg_1007}, {2'd0}};

assign shl_ln1_fu_439_p3 = {{i_1_reg_937}, {4'd0}};

assign shl_ln2_fu_522_p3 = {{add_ln118_4_fu_517_p2}, {2'd0}};

assign shl_ln_fu_380_p3 = {{ap_sig_allocacmp_i_1}, {2'd0}};

assign tmp_1_fu_490_p4 = {{or_ln114_fu_484_p2[6:4]}};

assign tmp_2_fu_624_p3 = add_ln113_1_fu_604_p2[32'd4];

assign tmp_3_fu_638_p4 = {{or_ln114_1_fu_618_p2[6:4]}};

assign tmp_4_fu_654_p3 = add_ln113_fu_598_p2[32'd4];

assign tmp_5_fu_746_p3 = add_ln113_3_fu_726_p2[32'd4];

assign tmp_6_fu_760_p4 = {{or_ln114_2_fu_740_p2[5:4]}};

assign tmp_7_fu_776_p3 = add_ln113_2_fu_721_p2[32'd3];

assign tmp_fu_392_p4 = {{ap_sig_allocacmp_i_1[3:2]}};

assign trunc_ln113_cast_fu_595_p1 = i_1_reg_937;

assign trunc_ln118_1_fu_539_p4 = {{add_ln118_1_fu_534_p2[63:2]}};

assign trunc_ln118_2_fu_701_p4 = {{add_ln118_2_fu_696_p2[63:2]}};

assign trunc_ln118_3_fu_823_p4 = {{add_ln118_3_fu_818_p2[63:2]}};

assign trunc_ln118_4_fu_802_p1 = add_ln113_3_fu_726_p2[3:0];

assign trunc_ln118_fu_680_p1 = add_ln113_1_fu_604_p2[3:0];

assign trunc_ln119_1_fu_575_p4 = {{add_ln119_1_fu_570_p2[63:2]}};

assign trunc_ln119_2_fu_859_p4 = {{add_ln119_2_fu_854_p2[63:2]}};

assign trunc_ln119_3_fu_895_p4 = {{add_ln119_3_fu_890_p2[63:2]}};

assign trunc_ln1_fu_414_p4 = {{add_ln118_fu_408_p2[63:2]}};

assign trunc_ln2_fu_455_p4 = {{add_ln119_fu_450_p2[63:2]}};

assign xor_ln117_1_fu_754_p2 = (tmp_5_fu_746_p3 ^ 1'd1);

assign xor_ln117_fu_632_p2 = (tmp_2_fu_624_p3 ^ 1'd1);

assign xor_ln118_1_fu_784_p2 = (tmp_7_fu_776_p3 ^ 1'd1);

assign xor_ln118_fu_662_p2 = (tmp_4_fu_654_p3 ^ 1'd1);

assign zext_ln117_1_fu_475_p1 = shl_ln_reg_950;

assign zext_ln117_fu_388_p1 = shl_ln_fu_380_p3;

assign zext_ln118_1_fu_692_p1 = shl_ln118_1_fu_684_p3;

assign zext_ln118_2_fu_814_p1 = shl_ln118_2_fu_806_p3;

assign zext_ln118_fu_530_p1 = shl_ln2_fu_522_p3;

assign zext_ln119_fu_446_p1 = shl_ln1_fu_439_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_950[1:0] <= 2'b00;
    or_ln114_reg_971[1:0] <= 2'b01;
    or_ln114_1_reg_992[1:0] <= 2'b10;
    or_ln114_2_reg_1007[1:0] <= 2'b11;
end

endmodule //systolic_array_systolic_array_Pipeline_VITIS_LOOP_107_1
