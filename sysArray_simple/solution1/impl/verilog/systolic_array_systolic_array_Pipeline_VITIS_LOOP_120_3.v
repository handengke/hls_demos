// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module systolic_array_systolic_array_Pipeline_VITIS_LOOP_120_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pe_array_pe_val_3_3_3_reload,
        pe_array_pe_val_3_2_3_reload,
        pe_array_pe_val_3_1_3_reload,
        pe_array_pe_val_3_0_3_reload,
        pe_array_pe_val_2_3_3_reload,
        pe_array_pe_val_2_2_3_reload,
        pe_array_pe_val_2_1_3_reload,
        pe_array_pe_val_2_0_3_reload,
        pe_array_pe_val_1_3_3_reload,
        pe_array_pe_val_1_2_3_reload,
        pe_array_pe_val_1_1_3_reload,
        pe_array_pe_val_1_0_3_reload,
        pe_array_pe_val_0_3_3_reload,
        pe_array_pe_val_0_2_3_reload,
        pe_array_pe_val_0_1_3_reload,
        pe_array_pe_val_0_0_3_reload,
        pe_array_pe_b_pass_2_3_3_reload,
        pe_array_pe_b_pass_2_2_3_reload,
        pe_array_pe_b_pass_2_1_3_reload,
        pe_array_pe_b_pass_2_0_3_reload,
        pe_array_pe_b_pass_1_3_3_reload,
        pe_array_pe_b_pass_1_2_3_reload,
        pe_array_pe_b_pass_1_1_3_reload,
        pe_array_pe_b_pass_1_0_3_reload,
        pe_array_pe_b_pass_0_3_3_reload,
        pe_array_pe_b_pass_0_2_3_reload,
        pe_array_pe_b_pass_0_1_3_reload,
        pe_array_pe_b_pass_0_0_3_reload,
        pe_array_pe_a_pass_3_2_3_reload,
        pe_array_pe_a_pass_3_1_3_reload,
        pe_array_pe_a_pass_3_0_3_reload,
        pe_array_pe_a_pass_2_2_3_reload,
        pe_array_pe_a_pass_2_1_3_reload,
        pe_array_pe_a_pass_2_0_3_reload,
        pe_array_pe_a_pass_1_2_3_reload,
        pe_array_pe_a_pass_1_1_3_reload,
        pe_array_pe_a_pass_1_0_3_reload,
        pe_array_pe_a_pass_0_2_3_reload,
        pe_array_pe_a_pass_0_1_3_reload,
        pe_array_pe_a_pass_0_0_3_reload,
        M2_12_1_reload,
        M2_8_1_reload,
        M2_4_1_reload,
        M2_0_1_reload,
        M1_5_1_reload,
        M1_13_1_reload,
        M1_6_1_reload,
        M1_7_1_reload,
        M1_8_1_reload,
        M1_9_1_reload,
        M1_10_1_reload,
        M1_11_1_reload,
        M1_12_1_reload,
        M1_4_1_reload,
        M2_13_1_reload,
        M2_9_1_reload,
        M2_5_1_reload,
        M2_1_1_reload,
        M1_15_1_reload,
        M1_14_1_reload,
        M2_14_1_reload,
        M2_10_1_reload,
        M2_6_1_reload,
        M2_2_1_reload,
        M2_15_1_reload,
        M2_11_1_reload,
        M2_7_1_reload,
        M2_3_1_reload,
        M1_1_1_reload,
        M1_2_1_reload,
        M1_3_1_reload,
        M1_0_1_reload,
        this_pe_val_3_3_read_assign_out,
        this_pe_val_3_3_read_assign_out_ap_vld,
        this_pe_val_3_2_read_assign_out,
        this_pe_val_3_2_read_assign_out_ap_vld,
        this_pe_val_3_1_read_assign_out,
        this_pe_val_3_1_read_assign_out_ap_vld,
        this_pe_val_3_0_read_assign_out,
        this_pe_val_3_0_read_assign_out_ap_vld,
        this_pe_val_2_3_read_assign_out,
        this_pe_val_2_3_read_assign_out_ap_vld,
        this_pe_val_2_2_read_assign_out,
        this_pe_val_2_2_read_assign_out_ap_vld,
        this_pe_val_2_1_read_assign_out,
        this_pe_val_2_1_read_assign_out_ap_vld,
        this_pe_val_2_0_read_assign_out,
        this_pe_val_2_0_read_assign_out_ap_vld,
        this_pe_val_1_3_read_assign_out,
        this_pe_val_1_3_read_assign_out_ap_vld,
        this_pe_val_1_2_read_assign_out,
        this_pe_val_1_2_read_assign_out_ap_vld,
        this_pe_val_1_1_read_assign_out,
        this_pe_val_1_1_read_assign_out_ap_vld,
        this_pe_val_1_0_read_assign_out,
        this_pe_val_1_0_read_assign_out_ap_vld,
        this_pe_val_0_3_read_assign_out,
        this_pe_val_0_3_read_assign_out_ap_vld,
        this_pe_val_0_2_read_assign_out,
        this_pe_val_0_2_read_assign_out_ap_vld,
        this_pe_val_0_1_read_assign_out,
        this_pe_val_0_1_read_assign_out_ap_vld,
        this_pe_val_0_0_read_assign_out,
        this_pe_val_0_0_read_assign_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] pe_array_pe_val_3_3_3_reload;
input  [31:0] pe_array_pe_val_3_2_3_reload;
input  [31:0] pe_array_pe_val_3_1_3_reload;
input  [31:0] pe_array_pe_val_3_0_3_reload;
input  [31:0] pe_array_pe_val_2_3_3_reload;
input  [31:0] pe_array_pe_val_2_2_3_reload;
input  [31:0] pe_array_pe_val_2_1_3_reload;
input  [31:0] pe_array_pe_val_2_0_3_reload;
input  [31:0] pe_array_pe_val_1_3_3_reload;
input  [31:0] pe_array_pe_val_1_2_3_reload;
input  [31:0] pe_array_pe_val_1_1_3_reload;
input  [31:0] pe_array_pe_val_1_0_3_reload;
input  [31:0] pe_array_pe_val_0_3_3_reload;
input  [31:0] pe_array_pe_val_0_2_3_reload;
input  [31:0] pe_array_pe_val_0_1_3_reload;
input  [31:0] pe_array_pe_val_0_0_3_reload;
input  [31:0] pe_array_pe_b_pass_2_3_3_reload;
input  [31:0] pe_array_pe_b_pass_2_2_3_reload;
input  [31:0] pe_array_pe_b_pass_2_1_3_reload;
input  [31:0] pe_array_pe_b_pass_2_0_3_reload;
input  [31:0] pe_array_pe_b_pass_1_3_3_reload;
input  [31:0] pe_array_pe_b_pass_1_2_3_reload;
input  [31:0] pe_array_pe_b_pass_1_1_3_reload;
input  [31:0] pe_array_pe_b_pass_1_0_3_reload;
input  [31:0] pe_array_pe_b_pass_0_3_3_reload;
input  [31:0] pe_array_pe_b_pass_0_2_3_reload;
input  [31:0] pe_array_pe_b_pass_0_1_3_reload;
input  [31:0] pe_array_pe_b_pass_0_0_3_reload;
input  [31:0] pe_array_pe_a_pass_3_2_3_reload;
input  [31:0] pe_array_pe_a_pass_3_1_3_reload;
input  [31:0] pe_array_pe_a_pass_3_0_3_reload;
input  [31:0] pe_array_pe_a_pass_2_2_3_reload;
input  [31:0] pe_array_pe_a_pass_2_1_3_reload;
input  [31:0] pe_array_pe_a_pass_2_0_3_reload;
input  [31:0] pe_array_pe_a_pass_1_2_3_reload;
input  [31:0] pe_array_pe_a_pass_1_1_3_reload;
input  [31:0] pe_array_pe_a_pass_1_0_3_reload;
input  [31:0] pe_array_pe_a_pass_0_2_3_reload;
input  [31:0] pe_array_pe_a_pass_0_1_3_reload;
input  [31:0] pe_array_pe_a_pass_0_0_3_reload;
input  [31:0] M2_12_1_reload;
input  [31:0] M2_8_1_reload;
input  [31:0] M2_4_1_reload;
input  [31:0] M2_0_1_reload;
input  [31:0] M1_5_1_reload;
input  [31:0] M1_13_1_reload;
input  [31:0] M1_6_1_reload;
input  [31:0] M1_7_1_reload;
input  [31:0] M1_8_1_reload;
input  [31:0] M1_9_1_reload;
input  [31:0] M1_10_1_reload;
input  [31:0] M1_11_1_reload;
input  [31:0] M1_12_1_reload;
input  [31:0] M1_4_1_reload;
input  [31:0] M2_13_1_reload;
input  [31:0] M2_9_1_reload;
input  [31:0] M2_5_1_reload;
input  [31:0] M2_1_1_reload;
input  [31:0] M1_15_1_reload;
input  [31:0] M1_14_1_reload;
input  [31:0] M2_14_1_reload;
input  [31:0] M2_10_1_reload;
input  [31:0] M2_6_1_reload;
input  [31:0] M2_2_1_reload;
input  [31:0] M2_15_1_reload;
input  [31:0] M2_11_1_reload;
input  [31:0] M2_7_1_reload;
input  [31:0] M2_3_1_reload;
input  [31:0] M1_1_1_reload;
input  [31:0] M1_2_1_reload;
input  [31:0] M1_3_1_reload;
input  [31:0] M1_0_1_reload;
output  [31:0] this_pe_val_3_3_read_assign_out;
output   this_pe_val_3_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_3_2_read_assign_out;
output   this_pe_val_3_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_3_1_read_assign_out;
output   this_pe_val_3_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_3_0_read_assign_out;
output   this_pe_val_3_0_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_3_read_assign_out;
output   this_pe_val_2_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_2_read_assign_out;
output   this_pe_val_2_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_1_read_assign_out;
output   this_pe_val_2_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_0_read_assign_out;
output   this_pe_val_2_0_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_3_read_assign_out;
output   this_pe_val_1_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_2_read_assign_out;
output   this_pe_val_1_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_1_read_assign_out;
output   this_pe_val_1_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_0_read_assign_out;
output   this_pe_val_1_0_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_3_read_assign_out;
output   this_pe_val_0_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_2_read_assign_out;
output   this_pe_val_0_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_1_read_assign_out;
output   this_pe_val_0_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_0_read_assign_out;
output   this_pe_val_0_0_read_assign_out_ap_vld;

reg ap_idle;
reg this_pe_val_3_3_read_assign_out_ap_vld;
reg this_pe_val_3_2_read_assign_out_ap_vld;
reg this_pe_val_3_1_read_assign_out_ap_vld;
reg this_pe_val_3_0_read_assign_out_ap_vld;
reg this_pe_val_2_3_read_assign_out_ap_vld;
reg this_pe_val_2_2_read_assign_out_ap_vld;
reg this_pe_val_2_1_read_assign_out_ap_vld;
reg this_pe_val_2_0_read_assign_out_ap_vld;
reg this_pe_val_1_3_read_assign_out_ap_vld;
reg this_pe_val_1_2_read_assign_out_ap_vld;
reg this_pe_val_1_1_read_assign_out_ap_vld;
reg this_pe_val_1_0_read_assign_out_ap_vld;
reg this_pe_val_0_3_read_assign_out_ap_vld;
reg this_pe_val_0_2_read_assign_out_ap_vld;
reg this_pe_val_0_1_read_assign_out_ap_vld;
reg this_pe_val_0_0_read_assign_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln120_fu_1250_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] ap_phi_mux_opa_phi_fu_989_p10;
wire   [31:0] a_vec_0_fu_1298_p18;
wire  signed [31:0] ap_phi_reg_pp0_iter1_opa_reg_986;
wire   [0:0] icmp_ln130_fu_1292_p2;
wire   [1:0] trunc_ln132_fu_1324_p1;
reg  signed [31:0] ap_phi_mux_b_vec_0_phi_fu_1005_p10;
wire  signed [31:0] ap_phi_reg_pp0_iter1_b_vec_0_reg_1002;
reg   [3:0] i_fu_278;
wire   [3:0] add_ln120_fu_1256_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg  signed [31:0] pe_array_pe_a_pass_0_1_fu_282;
reg  signed [31:0] this_pe_a_pass_0_2_read_assign_fu_286;
reg  signed [31:0] pe_array_pe_a_pass_1_1_fu_290;
wire  signed [31:0] pe_array_pe_a_pass_1_0_fu_1660_p3;
reg  signed [31:0] this_pe_a_pass_1_2_read_assign_fu_294;
reg  signed [31:0] pe_array_pe_a_pass_2_1_fu_298;
wire  signed [31:0] pe_array_pe_a_pass_2_0_fu_1906_p3;
reg  signed [31:0] this_pe_a_pass_2_2_read_assign_fu_302;
reg  signed [31:0] pe_array_pe_a_pass_3_1_fu_306;
wire  signed [31:0] pe_array_pe_a_pass_3_0_fu_2125_p3;
reg  signed [31:0] this_pe_a_pass_3_2_read_assign_fu_310;
reg  signed [31:0] pe_array_pe_b_pass_1_0_fu_314;
reg  signed [31:0] pe_array_pe_b_pass_1_1_fu_318;
wire  signed [31:0] b_vec_1_fu_1689_p3;
reg  signed [31:0] pe_array_pe_b_pass_1_2_fu_322;
wire  signed [31:0] b_vec_2_fu_1935_p3;
reg  signed [31:0] pe_array_pe_b_pass_1_3_fu_326;
wire  signed [31:0] b_vec_3_fu_2154_p3;
reg  signed [31:0] this_pe_b_pass_2_0_read_assign_fu_330;
reg  signed [31:0] this_pe_b_pass_2_1_read_assign_fu_334;
reg  signed [31:0] this_pe_b_pass_2_2_read_assign_fu_338;
reg  signed [31:0] this_pe_b_pass_2_3_read_assign_fu_342;
reg   [31:0] this_pe_val_0_0_read_assign_fu_346;
wire   [31:0] pe_array_pe_val_0_0_fu_2167_p2;
reg   [31:0] this_pe_val_0_1_read_assign_fu_350;
wire   [31:0] pe_array_pe_val_0_1_fu_2179_p2;
reg   [31:0] this_pe_val_0_2_read_assign_fu_354;
wire   [31:0] pe_array_pe_val_0_2_fu_2191_p2;
reg   [31:0] this_pe_val_0_3_read_assign_fu_358;
wire   [31:0] pe_array_pe_val_0_3_fu_2203_p2;
reg   [31:0] this_pe_val_1_0_read_assign_fu_362;
wire   [31:0] pe_array_pe_val_1_0_fu_2215_p2;
reg   [31:0] this_pe_val_1_1_read_assign_fu_366;
wire   [31:0] pe_array_pe_val_1_1_fu_2227_p2;
reg   [31:0] this_pe_val_1_2_read_assign_fu_370;
wire   [31:0] pe_array_pe_val_1_2_fu_2239_p2;
reg   [31:0] this_pe_val_1_3_read_assign_fu_374;
wire   [31:0] pe_array_pe_val_1_3_fu_2251_p2;
reg   [31:0] this_pe_val_2_0_read_assign_fu_378;
wire   [31:0] pe_array_pe_val_2_0_fu_2263_p2;
reg   [31:0] this_pe_val_2_1_read_assign_fu_382;
wire   [31:0] pe_array_pe_val_2_1_fu_2275_p2;
reg   [31:0] this_pe_val_2_2_read_assign_fu_386;
wire   [31:0] pe_array_pe_val_2_2_fu_2287_p2;
reg   [31:0] this_pe_val_2_3_read_assign_fu_390;
wire   [31:0] pe_array_pe_val_2_3_fu_2299_p2;
reg   [31:0] this_pe_val_3_0_read_assign_fu_394;
wire   [31:0] pe_array_pe_val_3_0_fu_2311_p2;
reg   [31:0] this_pe_val_3_1_read_assign_fu_398;
wire   [31:0] pe_array_pe_val_3_1_fu_2323_p2;
reg   [31:0] this_pe_val_3_2_read_assign_fu_402;
wire   [31:0] pe_array_pe_val_3_2_fu_2335_p2;
reg   [31:0] this_pe_val_3_3_read_assign_fu_406;
wire   [31:0] pe_array_pe_val_3_3_fu_2347_p2;
reg  signed [31:0] pe_array_pe_a_pass_0_2_fu_410;
reg  signed [31:0] pe_array_pe_a_pass_1_2_fu_414;
reg  signed [31:0] pe_array_pe_a_pass_2_2_fu_418;
reg  signed [31:0] pe_array_pe_a_pass_3_2_fu_422;
reg  signed [31:0] pe_array_pe_b_pass_2_0_fu_426;
reg  signed [31:0] pe_array_pe_b_pass_2_1_fu_430;
reg  signed [31:0] pe_array_pe_b_pass_2_2_fu_434;
reg  signed [31:0] pe_array_pe_b_pass_2_3_fu_438;
wire    ap_block_pp0_stage0_01001;
wire   [5:0] shl_ln_fu_1270_p3;
wire   [1:0] tmp_fu_1282_p4;
wire   [1:0] trunc_ln127_fu_1266_p1;
wire   [6:0] zext_ln130_fu_1278_p1;
wire   [3:0] trunc_ln127_1_fu_1424_p3;
wire   [6:0] add_ln127_fu_1432_p2;
wire   [6:0] or_ln127_fu_1444_p2;
wire   [2:0] tmp_1_fu_1450_p4;
wire   [0:0] icmp_ln130_1_fu_1460_p2;
wire   [0:0] icmp_ln131_fu_1466_p2;
wire   [0:0] icmp_ln131_1_fu_1478_p2;
wire   [0:0] icmp_ln131_2_fu_1490_p2;
wire   [31:0] M1_15_fu_1484_p3;
wire   [0:0] icmp_ln131_3_fu_1503_p2;
wire   [31:0] M1_15_1_fu_1496_p3;
wire   [0:0] icmp_ln131_4_fu_1516_p2;
wire   [31:0] M1_15_2_fu_1509_p3;
wire   [0:0] icmp_ln131_5_fu_1529_p2;
wire   [31:0] M1_15_3_fu_1522_p3;
wire   [0:0] icmp_ln131_6_fu_1542_p2;
wire   [31:0] M1_15_4_fu_1535_p3;
wire   [0:0] icmp_ln131_7_fu_1555_p2;
wire   [31:0] M1_15_5_fu_1548_p3;
wire   [0:0] icmp_ln131_8_fu_1568_p2;
wire   [31:0] M1_15_6_fu_1561_p3;
wire   [0:0] icmp_ln131_9_fu_1581_p2;
wire   [31:0] M1_15_7_fu_1574_p3;
wire   [3:0] add_ln127_1_fu_1438_p2;
wire   [0:0] and_ln131_fu_1472_p2;
wire   [31:0] M1_15_24_fu_1587_p3;
wire   [3:0] or_ln132_fu_1594_p2;
wire   [0:0] icmp_ln132_fu_1608_p2;
wire   [0:0] and_ln132_fu_1614_p2;
wire   [31:0] select_ln131_fu_1600_p3;
wire   [0:0] icmp_ln132_1_fu_1628_p2;
wire   [0:0] and_ln132_1_fu_1634_p2;
wire   [31:0] select_ln132_fu_1620_p3;
wire   [0:0] icmp_ln132_2_fu_1648_p2;
wire   [0:0] and_ln132_2_fu_1654_p2;
wire   [31:0] select_ln132_1_fu_1640_p3;
wire   [31:0] select_ln131_1_fu_1668_p3;
wire   [31:0] select_ln132_3_fu_1675_p3;
wire   [31:0] select_ln132_4_fu_1682_p3;
wire   [4:0] trunc_ln126_cast_fu_1262_p1;
wire   [4:0] add_ln126_fu_1696_p2;
wire   [6:0] shl_ln127_1_fu_1708_p3;
wire   [4:0] add_ln126_1_fu_1702_p2;
wire   [0:0] tmp_2_fu_1722_p3;
wire   [6:0] or_ln127_1_fu_1716_p2;
wire   [2:0] tmp_3_fu_1736_p4;
wire   [0:0] tmp_4_fu_1752_p3;
wire   [0:0] icmp_ln130_2_fu_1746_p2;
wire   [0:0] xor_ln131_fu_1760_p2;
wire   [0:0] and_ln131_3_fu_1766_p2;
wire   [0:0] xor_ln130_fu_1730_p2;
wire   [31:0] M1_15_9_fu_1778_p3;
wire   [31:0] M1_15_10_fu_1784_p3;
wire   [31:0] M1_15_11_fu_1791_p3;
wire   [31:0] M1_15_12_fu_1798_p3;
wire   [31:0] M1_15_13_fu_1805_p3;
wire   [31:0] M1_15_14_fu_1812_p3;
wire   [31:0] M1_15_15_fu_1819_p3;
wire   [0:0] icmp_ln131_10_fu_1833_p2;
wire   [31:0] M1_15_16_fu_1826_p3;
wire   [0:0] and_ln131_1_fu_1772_p2;
wire   [31:0] M1_15_25_fu_1839_p3;
wire   [0:0] icmp_ln132_3_fu_1854_p2;
wire   [0:0] and_ln132_3_fu_1860_p2;
wire   [31:0] select_ln131_11_fu_1846_p3;
wire   [0:0] icmp_ln132_4_fu_1874_p2;
wire   [0:0] and_ln132_4_fu_1880_p2;
wire   [31:0] select_ln132_6_fu_1866_p3;
wire   [0:0] icmp_ln132_5_fu_1894_p2;
wire   [0:0] and_ln132_5_fu_1900_p2;
wire   [31:0] select_ln132_7_fu_1886_p3;
wire   [31:0] select_ln131_12_fu_1914_p3;
wire   [31:0] select_ln132_9_fu_1921_p3;
wire   [31:0] select_ln132_10_fu_1928_p3;
wire   [3:0] add_ln126_2_fu_1942_p2;
wire   [5:0] shl_ln127_2_fu_1954_p3;
wire   [4:0] add_ln126_3_fu_1948_p2;
wire   [0:0] tmp_5_fu_1968_p3;
wire   [5:0] or_ln127_2_fu_1962_p2;
wire   [1:0] tmp_6_fu_1982_p4;
wire   [0:0] tmp_7_fu_1998_p3;
wire   [0:0] icmp_ln130_3_fu_1992_p2;
wire   [0:0] xor_ln131_1_fu_2006_p2;
wire   [0:0] and_ln131_4_fu_2012_p2;
wire   [0:0] xor_ln130_1_fu_1976_p2;
wire   [31:0] M1_15_18_fu_2024_p3;
wire   [31:0] M1_15_19_fu_2030_p3;
wire   [31:0] M1_15_20_fu_2037_p3;
wire   [31:0] M1_15_21_fu_2044_p3;
wire   [31:0] M1_15_22_fu_2051_p3;
wire   [0:0] and_ln131_2_fu_2018_p2;
wire   [31:0] M1_15_26_fu_2058_p3;
wire   [1:0] add_ln132_fu_2065_p2;
wire   [0:0] icmp_ln132_6_fu_2079_p2;
wire   [0:0] and_ln132_6_fu_2085_p2;
wire   [31:0] select_ln131_19_fu_2071_p3;
wire   [0:0] and_ln132_7_fu_2099_p2;
wire   [31:0] select_ln132_12_fu_2091_p3;
wire   [0:0] icmp_ln132_7_fu_2113_p2;
wire   [0:0] and_ln132_8_fu_2119_p2;
wire   [31:0] select_ln132_13_fu_2105_p3;
wire   [31:0] select_ln131_20_fu_2133_p3;
wire   [31:0] select_ln132_15_fu_2140_p3;
wire   [31:0] select_ln132_16_fu_2147_p3;
wire   [31:0] mul_ln21_fu_2161_p2;
wire  signed [31:0] mul_ln21_1_fu_2173_p1;
wire   [31:0] mul_ln21_1_fu_2173_p2;
wire  signed [31:0] mul_ln21_2_fu_2185_p1;
wire   [31:0] mul_ln21_2_fu_2185_p2;
wire  signed [31:0] mul_ln21_3_fu_2197_p1;
wire   [31:0] mul_ln21_3_fu_2197_p2;
wire  signed [31:0] mul_ln21_4_fu_2209_p1;
wire   [31:0] mul_ln21_4_fu_2209_p2;
wire   [31:0] mul_ln21_5_fu_2221_p2;
wire   [31:0] mul_ln21_6_fu_2233_p2;
wire   [31:0] mul_ln21_7_fu_2245_p2;
wire  signed [31:0] mul_ln21_8_fu_2257_p1;
wire   [31:0] mul_ln21_8_fu_2257_p2;
wire   [31:0] mul_ln21_9_fu_2269_p2;
wire   [31:0] mul_ln21_10_fu_2281_p2;
wire   [31:0] mul_ln21_11_fu_2293_p2;
wire  signed [31:0] mul_ln21_12_fu_2305_p1;
wire   [31:0] mul_ln21_12_fu_2305_p2;
wire   [31:0] mul_ln21_13_fu_2317_p2;
wire   [31:0] mul_ln21_14_fu_2329_p2;
wire   [31:0] mul_ln21_15_fu_2341_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

systolic_array_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U221(
    .din0(M1_0_1_reload),
    .din1(M1_1_1_reload),
    .din2(M1_2_1_reload),
    .din3(M1_3_1_reload),
    .din4(M1_4_1_reload),
    .din5(M1_5_1_reload),
    .din6(M1_6_1_reload),
    .din7(M1_7_1_reload),
    .din8(M1_8_1_reload),
    .din9(M1_9_1_reload),
    .din10(M1_10_1_reload),
    .din11(M1_10_1_reload),
    .din12(M1_10_1_reload),
    .din13(M1_10_1_reload),
    .din14(M1_10_1_reload),
    .din15(M1_10_1_reload),
    .din16(i_fu_278),
    .dout(a_vec_0_fu_1298_p18)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U222(
    .din0(ap_phi_mux_b_vec_0_phi_fu_1005_p10),
    .din1(ap_phi_mux_opa_phi_fu_989_p10),
    .dout(mul_ln21_fu_2161_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U223(
    .din0(pe_array_pe_a_pass_0_1_fu_282),
    .din1(mul_ln21_1_fu_2173_p1),
    .dout(mul_ln21_1_fu_2173_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U224(
    .din0(pe_array_pe_a_pass_0_2_fu_410),
    .din1(mul_ln21_2_fu_2185_p1),
    .dout(mul_ln21_2_fu_2185_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U225(
    .din0(this_pe_a_pass_0_2_read_assign_fu_286),
    .din1(mul_ln21_3_fu_2197_p1),
    .dout(mul_ln21_3_fu_2197_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U226(
    .din0(pe_array_pe_b_pass_1_0_fu_314),
    .din1(mul_ln21_4_fu_2209_p1),
    .dout(mul_ln21_4_fu_2209_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U227(
    .din0(pe_array_pe_b_pass_1_1_fu_318),
    .din1(pe_array_pe_a_pass_1_1_fu_290),
    .dout(mul_ln21_5_fu_2221_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U228(
    .din0(pe_array_pe_b_pass_1_2_fu_322),
    .din1(pe_array_pe_a_pass_1_2_fu_414),
    .dout(mul_ln21_6_fu_2233_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U229(
    .din0(pe_array_pe_b_pass_1_3_fu_326),
    .din1(this_pe_a_pass_1_2_read_assign_fu_294),
    .dout(mul_ln21_7_fu_2245_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U230(
    .din0(pe_array_pe_b_pass_2_0_fu_426),
    .din1(mul_ln21_8_fu_2257_p1),
    .dout(mul_ln21_8_fu_2257_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U231(
    .din0(pe_array_pe_b_pass_2_1_fu_430),
    .din1(pe_array_pe_a_pass_2_1_fu_298),
    .dout(mul_ln21_9_fu_2269_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U232(
    .din0(pe_array_pe_b_pass_2_2_fu_434),
    .din1(pe_array_pe_a_pass_2_2_fu_418),
    .dout(mul_ln21_10_fu_2281_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U233(
    .din0(pe_array_pe_b_pass_2_3_fu_438),
    .din1(this_pe_a_pass_2_2_read_assign_fu_302),
    .dout(mul_ln21_11_fu_2293_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U234(
    .din0(this_pe_b_pass_2_0_read_assign_fu_330),
    .din1(mul_ln21_12_fu_2305_p1),
    .dout(mul_ln21_12_fu_2305_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U235(
    .din0(this_pe_b_pass_2_1_read_assign_fu_334),
    .din1(pe_array_pe_a_pass_3_1_fu_306),
    .dout(mul_ln21_13_fu_2317_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U236(
    .din0(this_pe_b_pass_2_2_read_assign_fu_338),
    .din1(pe_array_pe_a_pass_3_2_fu_422),
    .dout(mul_ln21_14_fu_2329_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U237(
    .din0(this_pe_b_pass_2_3_read_assign_fu_342),
    .din1(this_pe_a_pass_3_2_read_assign_fu_310),
    .dout(mul_ln21_15_fu_2341_p2)
);

systolic_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_278 <= 4'd0;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_278 <= add_ln120_fu_1256_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_1_fu_282 <= pe_array_pe_a_pass_0_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_1_fu_282 <= ap_phi_mux_opa_phi_fu_989_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_2_fu_410 <= pe_array_pe_a_pass_0_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_2_fu_410 <= pe_array_pe_a_pass_0_1_fu_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_1_fu_290 <= pe_array_pe_a_pass_1_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_1_fu_290 <= pe_array_pe_a_pass_1_0_fu_1660_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_2_fu_414 <= pe_array_pe_a_pass_1_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_2_fu_414 <= pe_array_pe_a_pass_1_1_fu_290;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_1_fu_298 <= pe_array_pe_a_pass_2_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_1_fu_298 <= pe_array_pe_a_pass_2_0_fu_1906_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_2_fu_418 <= pe_array_pe_a_pass_2_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_2_fu_418 <= pe_array_pe_a_pass_2_1_fu_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_1_fu_306 <= pe_array_pe_a_pass_3_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_1_fu_306 <= pe_array_pe_a_pass_3_0_fu_2125_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_2_fu_422 <= pe_array_pe_a_pass_3_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_2_fu_422 <= pe_array_pe_a_pass_3_1_fu_306;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_0_fu_314 <= pe_array_pe_b_pass_0_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_0_fu_314 <= ap_phi_mux_b_vec_0_phi_fu_1005_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_1_fu_318 <= pe_array_pe_b_pass_0_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_1_fu_318 <= b_vec_1_fu_1689_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_2_fu_322 <= pe_array_pe_b_pass_0_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_2_fu_322 <= b_vec_2_fu_1935_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_3_fu_326 <= pe_array_pe_b_pass_0_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_3_fu_326 <= b_vec_3_fu_2154_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_0_fu_426 <= pe_array_pe_b_pass_1_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_0_fu_426 <= pe_array_pe_b_pass_1_0_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_1_fu_430 <= pe_array_pe_b_pass_1_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_1_fu_430 <= pe_array_pe_b_pass_1_1_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_2_fu_434 <= pe_array_pe_b_pass_1_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_2_fu_434 <= pe_array_pe_b_pass_1_2_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_3_fu_438 <= pe_array_pe_b_pass_1_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_3_fu_438 <= pe_array_pe_b_pass_1_3_fu_326;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_0_2_read_assign_fu_286 <= pe_array_pe_a_pass_0_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_0_2_read_assign_fu_286 <= pe_array_pe_a_pass_0_2_fu_410;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_1_2_read_assign_fu_294 <= pe_array_pe_a_pass_1_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_1_2_read_assign_fu_294 <= pe_array_pe_a_pass_1_2_fu_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_2_2_read_assign_fu_302 <= pe_array_pe_a_pass_2_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_2_2_read_assign_fu_302 <= pe_array_pe_a_pass_2_2_fu_418;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_3_2_read_assign_fu_310 <= pe_array_pe_a_pass_3_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_3_2_read_assign_fu_310 <= pe_array_pe_a_pass_3_2_fu_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_0_read_assign_fu_330 <= pe_array_pe_b_pass_2_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_0_read_assign_fu_330 <= pe_array_pe_b_pass_2_0_fu_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_1_read_assign_fu_334 <= pe_array_pe_b_pass_2_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_1_read_assign_fu_334 <= pe_array_pe_b_pass_2_1_fu_430;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_2_read_assign_fu_338 <= pe_array_pe_b_pass_2_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_2_read_assign_fu_338 <= pe_array_pe_b_pass_2_2_fu_434;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_3_read_assign_fu_342 <= pe_array_pe_b_pass_2_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_3_read_assign_fu_342 <= pe_array_pe_b_pass_2_3_fu_438;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_0_0_read_assign_fu_346 <= pe_array_pe_val_0_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_0_0_read_assign_fu_346 <= pe_array_pe_val_0_0_fu_2167_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_0_1_read_assign_fu_350 <= pe_array_pe_val_0_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_0_1_read_assign_fu_350 <= pe_array_pe_val_0_1_fu_2179_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_0_2_read_assign_fu_354 <= pe_array_pe_val_0_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_0_2_read_assign_fu_354 <= pe_array_pe_val_0_2_fu_2191_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_0_3_read_assign_fu_358 <= pe_array_pe_val_0_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_0_3_read_assign_fu_358 <= pe_array_pe_val_0_3_fu_2203_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_1_0_read_assign_fu_362 <= pe_array_pe_val_1_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_1_0_read_assign_fu_362 <= pe_array_pe_val_1_0_fu_2215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_1_1_read_assign_fu_366 <= pe_array_pe_val_1_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_1_1_read_assign_fu_366 <= pe_array_pe_val_1_1_fu_2227_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_1_2_read_assign_fu_370 <= pe_array_pe_val_1_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_1_2_read_assign_fu_370 <= pe_array_pe_val_1_2_fu_2239_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_1_3_read_assign_fu_374 <= pe_array_pe_val_1_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_1_3_read_assign_fu_374 <= pe_array_pe_val_1_3_fu_2251_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_2_0_read_assign_fu_378 <= pe_array_pe_val_2_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_2_0_read_assign_fu_378 <= pe_array_pe_val_2_0_fu_2263_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_2_1_read_assign_fu_382 <= pe_array_pe_val_2_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_2_1_read_assign_fu_382 <= pe_array_pe_val_2_1_fu_2275_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_2_2_read_assign_fu_386 <= pe_array_pe_val_2_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_2_2_read_assign_fu_386 <= pe_array_pe_val_2_2_fu_2287_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_2_3_read_assign_fu_390 <= pe_array_pe_val_2_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_2_3_read_assign_fu_390 <= pe_array_pe_val_2_3_fu_2299_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_3_0_read_assign_fu_394 <= pe_array_pe_val_3_0_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_3_0_read_assign_fu_394 <= pe_array_pe_val_3_0_fu_2311_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_3_1_read_assign_fu_398 <= pe_array_pe_val_3_1_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_3_1_read_assign_fu_398 <= pe_array_pe_val_3_1_fu_2323_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_3_2_read_assign_fu_402 <= pe_array_pe_val_3_2_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_3_2_read_assign_fu_402 <= pe_array_pe_val_3_2_fu_2335_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_val_3_3_read_assign_fu_406 <= pe_array_pe_val_3_3_3_reload;
        end else if (((icmp_ln120_fu_1250_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_val_3_3_read_assign_fu_406 <= pe_array_pe_val_3_3_fu_2347_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln120_fu_1250_p2 == 1'd0)) begin
        if ((icmp_ln130_fu_1292_p2 == 1'd0)) begin
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 = 32'd0;
        end else if (((trunc_ln132_fu_1324_p1 == 2'd1) & (icmp_ln130_fu_1292_p2 == 1'd1))) begin
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 = M2_4_1_reload;
        end else if (((trunc_ln132_fu_1324_p1 == 2'd0) & (icmp_ln130_fu_1292_p2 == 1'd1))) begin
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 = M2_0_1_reload;
        end else if (((trunc_ln132_fu_1324_p1 == 2'd2) & (icmp_ln130_fu_1292_p2 == 1'd1))) begin
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 = M2_8_1_reload;
        end else if (((trunc_ln132_fu_1324_p1 == 2'd3) & (icmp_ln130_fu_1292_p2 == 1'd1))) begin
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 = M2_12_1_reload;
        end else begin
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 = ap_phi_reg_pp0_iter1_b_vec_0_reg_1002;
        end
    end else begin
        ap_phi_mux_b_vec_0_phi_fu_1005_p10 = ap_phi_reg_pp0_iter1_b_vec_0_reg_1002;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd0) & (icmp_ln130_fu_1292_p2 == 1'd0))) begin
        ap_phi_mux_opa_phi_fu_989_p10 = 32'd0;
    end else if ((((icmp_ln120_fu_1250_p2 == 1'd0) & (trunc_ln132_fu_1324_p1 == 2'd1) & (icmp_ln130_fu_1292_p2 == 1'd1)) | ((icmp_ln120_fu_1250_p2 == 1'd0) & (trunc_ln132_fu_1324_p1 == 2'd0) & (icmp_ln130_fu_1292_p2 == 1'd1)) | ((icmp_ln120_fu_1250_p2 == 1'd0) & (trunc_ln132_fu_1324_p1 == 2'd2) & (icmp_ln130_fu_1292_p2 == 1'd1)) | ((icmp_ln120_fu_1250_p2 == 1'd0) & (trunc_ln132_fu_1324_p1 == 2'd3) & (icmp_ln130_fu_1292_p2 == 1'd1)))) begin
        ap_phi_mux_opa_phi_fu_989_p10 = a_vec_0_fu_1298_p18;
    end else begin
        ap_phi_mux_opa_phi_fu_989_p10 = ap_phi_reg_pp0_iter1_opa_reg_986;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_0_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_0_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_0_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_0_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_1_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_1_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_1_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_1_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_2_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_2_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_2_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_2_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_3_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_3_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_3_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pe_val_3_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M1_15_10_fu_1784_p3 = ((icmp_ln131_1_fu_1478_p2[0:0] == 1'b1) ? M1_8_1_reload : M1_15_9_fu_1778_p3);

assign M1_15_11_fu_1791_p3 = ((icmp_ln131_2_fu_1490_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_10_fu_1784_p3);

assign M1_15_12_fu_1798_p3 = ((icmp_ln131_3_fu_1503_p2[0:0] == 1'b1) ? M1_10_1_reload : M1_15_11_fu_1791_p3);

assign M1_15_13_fu_1805_p3 = ((icmp_ln131_4_fu_1516_p2[0:0] == 1'b1) ? M1_11_1_reload : M1_15_12_fu_1798_p3);

assign M1_15_14_fu_1812_p3 = ((icmp_ln131_5_fu_1529_p2[0:0] == 1'b1) ? M1_12_1_reload : M1_15_13_fu_1805_p3);

assign M1_15_15_fu_1819_p3 = ((icmp_ln131_6_fu_1542_p2[0:0] == 1'b1) ? M1_13_1_reload : M1_15_14_fu_1812_p3);

assign M1_15_16_fu_1826_p3 = ((icmp_ln131_7_fu_1555_p2[0:0] == 1'b1) ? M1_14_1_reload : M1_15_15_fu_1819_p3);

assign M1_15_18_fu_2024_p3 = ((icmp_ln131_9_fu_1581_p2[0:0] == 1'b1) ? M1_10_1_reload : M1_15_1_reload);

assign M1_15_19_fu_2030_p3 = ((icmp_ln131_1_fu_1478_p2[0:0] == 1'b1) ? M1_11_1_reload : M1_15_18_fu_2024_p3);

assign M1_15_1_fu_1496_p3 = ((icmp_ln131_2_fu_1490_p2[0:0] == 1'b1) ? M1_6_1_reload : M1_15_fu_1484_p3);

assign M1_15_20_fu_2037_p3 = ((icmp_ln131_2_fu_1490_p2[0:0] == 1'b1) ? M1_12_1_reload : M1_15_19_fu_2030_p3);

assign M1_15_21_fu_2044_p3 = ((icmp_ln131_3_fu_1503_p2[0:0] == 1'b1) ? M1_13_1_reload : M1_15_20_fu_2037_p3);

assign M1_15_22_fu_2051_p3 = ((icmp_ln131_4_fu_1516_p2[0:0] == 1'b1) ? M1_14_1_reload : M1_15_21_fu_2044_p3);

assign M1_15_24_fu_1587_p3 = ((icmp_ln131_9_fu_1581_p2[0:0] == 1'b1) ? M1_4_1_reload : M1_15_7_fu_1574_p3);

assign M1_15_25_fu_1839_p3 = ((icmp_ln131_10_fu_1833_p2[0:0] == 1'b1) ? M1_6_1_reload : M1_15_16_fu_1826_p3);

assign M1_15_26_fu_2058_p3 = ((icmp_ln131_10_fu_1833_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_22_fu_2051_p3);

assign M1_15_2_fu_1509_p3 = ((icmp_ln131_3_fu_1503_p2[0:0] == 1'b1) ? M1_7_1_reload : M1_15_1_fu_1496_p3);

assign M1_15_3_fu_1522_p3 = ((icmp_ln131_4_fu_1516_p2[0:0] == 1'b1) ? M1_8_1_reload : M1_15_2_fu_1509_p3);

assign M1_15_4_fu_1535_p3 = ((icmp_ln131_5_fu_1529_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_3_fu_1522_p3);

assign M1_15_5_fu_1548_p3 = ((icmp_ln131_6_fu_1542_p2[0:0] == 1'b1) ? M1_10_1_reload : M1_15_4_fu_1535_p3);

assign M1_15_6_fu_1561_p3 = ((icmp_ln131_7_fu_1555_p2[0:0] == 1'b1) ? M1_11_1_reload : M1_15_5_fu_1548_p3);

assign M1_15_7_fu_1574_p3 = ((icmp_ln131_8_fu_1568_p2[0:0] == 1'b1) ? M1_12_1_reload : M1_15_6_fu_1561_p3);

assign M1_15_9_fu_1778_p3 = ((icmp_ln131_9_fu_1581_p2[0:0] == 1'b1) ? M1_7_1_reload : M1_15_1_reload);

assign M1_15_fu_1484_p3 = ((icmp_ln131_1_fu_1478_p2[0:0] == 1'b1) ? M1_5_1_reload : M1_13_1_reload);

assign add_ln120_fu_1256_p2 = (i_fu_278 + 4'd1);

assign add_ln126_1_fu_1702_p2 = (trunc_ln126_cast_fu_1262_p1 + 5'd6);

assign add_ln126_2_fu_1942_p2 = ($signed(i_fu_278) + $signed(4'd13));

assign add_ln126_3_fu_1948_p2 = (trunc_ln126_cast_fu_1262_p1 + 5'd9);

assign add_ln126_fu_1696_p2 = ($signed(trunc_ln126_cast_fu_1262_p1) + $signed(5'd30));

assign add_ln127_1_fu_1438_p2 = ($signed(trunc_ln127_1_fu_1424_p3) + $signed(4'd12));

assign add_ln127_fu_1432_p2 = ($signed(zext_ln130_fu_1278_p1) + $signed(7'd124));

assign add_ln132_fu_2065_p2 = (trunc_ln127_fu_1266_p1 + 2'd1);

assign and_ln131_1_fu_1772_p2 = (xor_ln130_fu_1730_p2 & and_ln131_3_fu_1766_p2);

assign and_ln131_2_fu_2018_p2 = (xor_ln130_1_fu_1976_p2 & and_ln131_4_fu_2012_p2);

assign and_ln131_3_fu_1766_p2 = (xor_ln131_fu_1760_p2 & icmp_ln130_2_fu_1746_p2);

assign and_ln131_4_fu_2012_p2 = (xor_ln131_1_fu_2006_p2 & icmp_ln130_3_fu_1992_p2);

assign and_ln131_fu_1472_p2 = (icmp_ln131_fu_1466_p2 & icmp_ln130_1_fu_1460_p2);

assign and_ln132_1_fu_1634_p2 = (icmp_ln132_1_fu_1628_p2 & and_ln131_fu_1472_p2);

assign and_ln132_2_fu_1654_p2 = (icmp_ln132_2_fu_1648_p2 & and_ln131_fu_1472_p2);

assign and_ln132_3_fu_1860_p2 = (icmp_ln132_3_fu_1854_p2 & and_ln131_1_fu_1772_p2);

assign and_ln132_4_fu_1880_p2 = (icmp_ln132_4_fu_1874_p2 & and_ln131_1_fu_1772_p2);

assign and_ln132_5_fu_1900_p2 = (icmp_ln132_5_fu_1894_p2 & and_ln131_1_fu_1772_p2);

assign and_ln132_6_fu_2085_p2 = (icmp_ln132_6_fu_2079_p2 & and_ln131_2_fu_2018_p2);

assign and_ln132_7_fu_2099_p2 = (icmp_ln132_3_fu_1854_p2 & and_ln131_2_fu_2018_p2);

assign and_ln132_8_fu_2119_p2 = (icmp_ln132_7_fu_2113_p2 & and_ln131_2_fu_2018_p2);

assign and_ln132_fu_1614_p2 = (icmp_ln132_fu_1608_p2 & and_ln131_fu_1472_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter1_b_vec_0_reg_1002 = 'bx;

assign ap_phi_reg_pp0_iter1_opa_reg_986 = 'bx;

assign b_vec_1_fu_1689_p3 = ((and_ln132_2_fu_1654_p2[0:0] == 1'b1) ? M2_1_1_reload : select_ln132_4_fu_1682_p3);

assign b_vec_2_fu_1935_p3 = ((and_ln132_5_fu_1900_p2[0:0] == 1'b1) ? M2_2_1_reload : select_ln132_10_fu_1928_p3);

assign b_vec_3_fu_2154_p3 = ((and_ln132_8_fu_2119_p2[0:0] == 1'b1) ? M2_3_1_reload : select_ln132_16_fu_2147_p3);

assign icmp_ln120_fu_1250_p2 = ((i_fu_278 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_1460_p2 = (($signed(tmp_1_fu_1450_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_1746_p2 = (($signed(tmp_3_fu_1736_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_1992_p2 = ((tmp_6_fu_1982_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_1292_p2 = ((tmp_fu_1282_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln131_10_fu_1833_p2 = ((i_fu_278 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln131_1_fu_1478_p2 = ((i_fu_278 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln131_2_fu_1490_p2 = ((i_fu_278 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln131_3_fu_1503_p2 = ((i_fu_278 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln131_4_fu_1516_p2 = ((i_fu_278 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln131_5_fu_1529_p2 = ((i_fu_278 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln131_6_fu_1542_p2 = ((i_fu_278 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln131_7_fu_1555_p2 = ((i_fu_278 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln131_8_fu_1568_p2 = ((i_fu_278 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln131_9_fu_1581_p2 = ((i_fu_278 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_1466_p2 = ((i_fu_278 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_1_fu_1628_p2 = ((or_ln132_fu_1594_p2 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln132_2_fu_1648_p2 = ((or_ln132_fu_1594_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln132_3_fu_1854_p2 = ((trunc_ln127_fu_1266_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_4_fu_1874_p2 = ((trunc_ln127_fu_1266_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln132_5_fu_1894_p2 = ((trunc_ln127_fu_1266_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln132_6_fu_2079_p2 = ((add_ln132_fu_2065_p2 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln132_7_fu_2113_p2 = ((add_ln132_fu_2065_p2 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_1608_p2 = ((or_ln132_fu_1594_p2 == 4'd9) ? 1'b1 : 1'b0);

assign mul_ln21_12_fu_2305_p1 = ((and_ln132_8_fu_2119_p2[0:0] == 1'b1) ? M1_15_26_fu_2058_p3 : select_ln132_13_fu_2105_p3);

assign mul_ln21_1_fu_2173_p1 = ((and_ln132_2_fu_1654_p2[0:0] == 1'b1) ? M2_1_1_reload : select_ln132_4_fu_1682_p3);

assign mul_ln21_2_fu_2185_p1 = ((and_ln132_5_fu_1900_p2[0:0] == 1'b1) ? M2_2_1_reload : select_ln132_10_fu_1928_p3);

assign mul_ln21_3_fu_2197_p1 = ((and_ln132_8_fu_2119_p2[0:0] == 1'b1) ? M2_3_1_reload : select_ln132_16_fu_2147_p3);

assign mul_ln21_4_fu_2209_p1 = ((and_ln132_2_fu_1654_p2[0:0] == 1'b1) ? M1_15_24_fu_1587_p3 : select_ln132_1_fu_1640_p3);

assign mul_ln21_8_fu_2257_p1 = ((and_ln132_5_fu_1900_p2[0:0] == 1'b1) ? M1_15_25_fu_1839_p3 : select_ln132_7_fu_1886_p3);

assign or_ln127_1_fu_1716_p2 = (shl_ln127_1_fu_1708_p3 | 7'd2);

assign or_ln127_2_fu_1962_p2 = (shl_ln127_2_fu_1954_p3 | 6'd3);

assign or_ln127_fu_1444_p2 = (7'd1 | add_ln127_fu_1432_p2);

assign or_ln132_fu_1594_p2 = (4'd1 | add_ln127_1_fu_1438_p2);

assign pe_array_pe_a_pass_1_0_fu_1660_p3 = ((and_ln132_2_fu_1654_p2[0:0] == 1'b1) ? M1_15_24_fu_1587_p3 : select_ln132_1_fu_1640_p3);

assign pe_array_pe_a_pass_2_0_fu_1906_p3 = ((and_ln132_5_fu_1900_p2[0:0] == 1'b1) ? M1_15_25_fu_1839_p3 : select_ln132_7_fu_1886_p3);

assign pe_array_pe_a_pass_3_0_fu_2125_p3 = ((and_ln132_8_fu_2119_p2[0:0] == 1'b1) ? M1_15_26_fu_2058_p3 : select_ln132_13_fu_2105_p3);

assign pe_array_pe_val_0_0_fu_2167_p2 = (mul_ln21_fu_2161_p2 + this_pe_val_0_0_read_assign_fu_346);

assign pe_array_pe_val_0_1_fu_2179_p2 = (mul_ln21_1_fu_2173_p2 + this_pe_val_0_1_read_assign_fu_350);

assign pe_array_pe_val_0_2_fu_2191_p2 = (mul_ln21_2_fu_2185_p2 + this_pe_val_0_2_read_assign_fu_354);

assign pe_array_pe_val_0_3_fu_2203_p2 = (mul_ln21_3_fu_2197_p2 + this_pe_val_0_3_read_assign_fu_358);

assign pe_array_pe_val_1_0_fu_2215_p2 = (mul_ln21_4_fu_2209_p2 + this_pe_val_1_0_read_assign_fu_362);

assign pe_array_pe_val_1_1_fu_2227_p2 = (mul_ln21_5_fu_2221_p2 + this_pe_val_1_1_read_assign_fu_366);

assign pe_array_pe_val_1_2_fu_2239_p2 = (mul_ln21_6_fu_2233_p2 + this_pe_val_1_2_read_assign_fu_370);

assign pe_array_pe_val_1_3_fu_2251_p2 = (mul_ln21_7_fu_2245_p2 + this_pe_val_1_3_read_assign_fu_374);

assign pe_array_pe_val_2_0_fu_2263_p2 = (mul_ln21_8_fu_2257_p2 + this_pe_val_2_0_read_assign_fu_378);

assign pe_array_pe_val_2_1_fu_2275_p2 = (mul_ln21_9_fu_2269_p2 + this_pe_val_2_1_read_assign_fu_382);

assign pe_array_pe_val_2_2_fu_2287_p2 = (mul_ln21_10_fu_2281_p2 + this_pe_val_2_2_read_assign_fu_386);

assign pe_array_pe_val_2_3_fu_2299_p2 = (mul_ln21_11_fu_2293_p2 + this_pe_val_2_3_read_assign_fu_390);

assign pe_array_pe_val_3_0_fu_2311_p2 = (mul_ln21_12_fu_2305_p2 + this_pe_val_3_0_read_assign_fu_394);

assign pe_array_pe_val_3_1_fu_2323_p2 = (mul_ln21_13_fu_2317_p2 + this_pe_val_3_1_read_assign_fu_398);

assign pe_array_pe_val_3_2_fu_2335_p2 = (mul_ln21_14_fu_2329_p2 + this_pe_val_3_2_read_assign_fu_402);

assign pe_array_pe_val_3_3_fu_2347_p2 = (mul_ln21_15_fu_2341_p2 + this_pe_val_3_3_read_assign_fu_406);

assign select_ln131_11_fu_1846_p3 = ((and_ln131_1_fu_1772_p2[0:0] == 1'b1) ? M1_15_25_fu_1839_p3 : 32'd0);

assign select_ln131_12_fu_1914_p3 = ((and_ln131_1_fu_1772_p2[0:0] == 1'b1) ? M2_14_1_reload : 32'd0);

assign select_ln131_19_fu_2071_p3 = ((and_ln131_2_fu_2018_p2[0:0] == 1'b1) ? M1_15_26_fu_2058_p3 : 32'd0);

assign select_ln131_1_fu_1668_p3 = ((and_ln131_fu_1472_p2[0:0] == 1'b1) ? M2_13_1_reload : 32'd0);

assign select_ln131_20_fu_2133_p3 = ((and_ln131_2_fu_2018_p2[0:0] == 1'b1) ? M2_15_1_reload : 32'd0);

assign select_ln131_fu_1600_p3 = ((and_ln131_fu_1472_p2[0:0] == 1'b1) ? M1_15_24_fu_1587_p3 : 32'd0);

assign select_ln132_10_fu_1928_p3 = ((and_ln132_4_fu_1880_p2[0:0] == 1'b1) ? M2_6_1_reload : select_ln132_9_fu_1921_p3);

assign select_ln132_12_fu_2091_p3 = ((and_ln132_6_fu_2085_p2[0:0] == 1'b1) ? M1_15_26_fu_2058_p3 : select_ln131_19_fu_2071_p3);

assign select_ln132_13_fu_2105_p3 = ((and_ln132_7_fu_2099_p2[0:0] == 1'b1) ? M1_15_26_fu_2058_p3 : select_ln132_12_fu_2091_p3);

assign select_ln132_15_fu_2140_p3 = ((and_ln132_6_fu_2085_p2[0:0] == 1'b1) ? M2_11_1_reload : select_ln131_20_fu_2133_p3);

assign select_ln132_16_fu_2147_p3 = ((and_ln132_7_fu_2099_p2[0:0] == 1'b1) ? M2_7_1_reload : select_ln132_15_fu_2140_p3);

assign select_ln132_1_fu_1640_p3 = ((and_ln132_1_fu_1634_p2[0:0] == 1'b1) ? M1_15_24_fu_1587_p3 : select_ln132_fu_1620_p3);

assign select_ln132_3_fu_1675_p3 = ((and_ln132_fu_1614_p2[0:0] == 1'b1) ? M2_9_1_reload : select_ln131_1_fu_1668_p3);

assign select_ln132_4_fu_1682_p3 = ((and_ln132_1_fu_1634_p2[0:0] == 1'b1) ? M2_5_1_reload : select_ln132_3_fu_1675_p3);

assign select_ln132_6_fu_1866_p3 = ((and_ln132_3_fu_1860_p2[0:0] == 1'b1) ? M1_15_25_fu_1839_p3 : select_ln131_11_fu_1846_p3);

assign select_ln132_7_fu_1886_p3 = ((and_ln132_4_fu_1880_p2[0:0] == 1'b1) ? M1_15_25_fu_1839_p3 : select_ln132_6_fu_1866_p3);

assign select_ln132_9_fu_1921_p3 = ((and_ln132_3_fu_1860_p2[0:0] == 1'b1) ? M2_10_1_reload : select_ln131_12_fu_1914_p3);

assign select_ln132_fu_1620_p3 = ((and_ln132_fu_1614_p2[0:0] == 1'b1) ? M1_15_24_fu_1587_p3 : select_ln131_fu_1600_p3);

assign shl_ln127_1_fu_1708_p3 = {{add_ln126_fu_1696_p2}, {2'd0}};

assign shl_ln127_2_fu_1954_p3 = {{add_ln126_2_fu_1942_p2}, {2'd0}};

assign shl_ln_fu_1270_p3 = {{i_fu_278}, {2'd0}};

assign this_pe_val_0_0_read_assign_out = this_pe_val_0_0_read_assign_fu_346;

assign this_pe_val_0_1_read_assign_out = this_pe_val_0_1_read_assign_fu_350;

assign this_pe_val_0_2_read_assign_out = this_pe_val_0_2_read_assign_fu_354;

assign this_pe_val_0_3_read_assign_out = this_pe_val_0_3_read_assign_fu_358;

assign this_pe_val_1_0_read_assign_out = this_pe_val_1_0_read_assign_fu_362;

assign this_pe_val_1_1_read_assign_out = this_pe_val_1_1_read_assign_fu_366;

assign this_pe_val_1_2_read_assign_out = this_pe_val_1_2_read_assign_fu_370;

assign this_pe_val_1_3_read_assign_out = this_pe_val_1_3_read_assign_fu_374;

assign this_pe_val_2_0_read_assign_out = this_pe_val_2_0_read_assign_fu_378;

assign this_pe_val_2_1_read_assign_out = this_pe_val_2_1_read_assign_fu_382;

assign this_pe_val_2_2_read_assign_out = this_pe_val_2_2_read_assign_fu_386;

assign this_pe_val_2_3_read_assign_out = this_pe_val_2_3_read_assign_fu_390;

assign this_pe_val_3_0_read_assign_out = this_pe_val_3_0_read_assign_fu_394;

assign this_pe_val_3_1_read_assign_out = this_pe_val_3_1_read_assign_fu_398;

assign this_pe_val_3_2_read_assign_out = this_pe_val_3_2_read_assign_fu_402;

assign this_pe_val_3_3_read_assign_out = this_pe_val_3_3_read_assign_fu_406;

assign tmp_1_fu_1450_p4 = {{or_ln127_fu_1444_p2[6:4]}};

assign tmp_2_fu_1722_p3 = add_ln126_1_fu_1702_p2[32'd4];

assign tmp_3_fu_1736_p4 = {{or_ln127_1_fu_1716_p2[6:4]}};

assign tmp_4_fu_1752_p3 = add_ln126_fu_1696_p2[32'd4];

assign tmp_5_fu_1968_p3 = add_ln126_3_fu_1948_p2[32'd4];

assign tmp_6_fu_1982_p4 = {{or_ln127_2_fu_1962_p2[5:4]}};

assign tmp_7_fu_1998_p3 = add_ln126_2_fu_1942_p2[32'd3];

assign tmp_fu_1282_p4 = {{i_fu_278[3:2]}};

assign trunc_ln126_cast_fu_1262_p1 = i_fu_278;

assign trunc_ln127_1_fu_1424_p3 = {{trunc_ln127_fu_1266_p1}, {2'd0}};

assign trunc_ln127_fu_1266_p1 = i_fu_278[1:0];

assign trunc_ln132_fu_1324_p1 = i_fu_278[1:0];

assign xor_ln130_1_fu_1976_p2 = (tmp_5_fu_1968_p3 ^ 1'd1);

assign xor_ln130_fu_1730_p2 = (tmp_2_fu_1722_p3 ^ 1'd1);

assign xor_ln131_1_fu_2006_p2 = (tmp_7_fu_1998_p3 ^ 1'd1);

assign xor_ln131_fu_1760_p2 = (tmp_4_fu_1752_p3 ^ 1'd1);

assign zext_ln130_fu_1278_p1 = shl_ln_fu_1270_p3;

endmodule //systolic_array_systolic_array_Pipeline_VITIS_LOOP_120_3
