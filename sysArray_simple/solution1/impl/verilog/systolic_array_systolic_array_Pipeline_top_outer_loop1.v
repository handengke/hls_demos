// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module systolic_array_systolic_array_Pipeline_top_outer_loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        pe_array_pe_val_3_3_3_reload,
        pe_array_pe_val_3_2_3_reload,
        pe_array_pe_val_3_1_3_reload,
        pe_array_pe_val_3_0_3_reload,
        pe_array_pe_val_2_3_3_reload,
        pe_array_pe_val_2_2_3_reload,
        pe_array_pe_val_2_1_3_reload,
        pe_array_pe_val_2_0_3_reload,
        pe_array_pe_val_1_3_3_reload,
        pe_array_pe_val_1_2_3_reload,
        pe_array_pe_val_1_1_3_reload,
        pe_array_pe_val_1_0_3_reload,
        pe_array_pe_val_0_3_3_reload,
        pe_array_pe_val_0_2_3_reload,
        pe_array_pe_val_0_1_3_reload,
        pe_array_pe_val_0_0_3_reload,
        pe_array_pe_b_pass_2_3_3_reload,
        pe_array_pe_b_pass_2_2_3_reload,
        pe_array_pe_b_pass_2_1_3_reload,
        pe_array_pe_b_pass_2_0_3_reload,
        pe_array_pe_b_pass_1_3_3_reload,
        pe_array_pe_b_pass_1_2_3_reload,
        pe_array_pe_b_pass_1_1_3_reload,
        pe_array_pe_b_pass_1_0_3_reload,
        pe_array_pe_b_pass_0_3_3_reload,
        pe_array_pe_b_pass_0_2_3_reload,
        pe_array_pe_b_pass_0_1_3_reload,
        pe_array_pe_b_pass_0_0_3_reload,
        pe_array_pe_a_pass_3_2_3_reload,
        pe_array_pe_a_pass_3_1_3_reload,
        pe_array_pe_a_pass_3_0_3_reload,
        pe_array_pe_a_pass_2_2_3_reload,
        pe_array_pe_a_pass_2_1_3_reload,
        pe_array_pe_a_pass_2_0_3_reload,
        pe_array_pe_a_pass_1_2_3_reload,
        pe_array_pe_a_pass_1_1_3_reload,
        pe_array_pe_a_pass_1_0_3_reload,
        pe_array_pe_a_pass_0_2_3_reload,
        pe_array_pe_a_pass_0_1_3_reload,
        pe_array_pe_a_pass_0_0_3_reload,
        din_a,
        din_b,
        pe_array_pe_val_3_3_5_out,
        pe_array_pe_val_3_3_5_out_ap_vld,
        pe_array_pe_val_3_2_5_out,
        pe_array_pe_val_3_2_5_out_ap_vld,
        pe_array_pe_val_3_1_5_out,
        pe_array_pe_val_3_1_5_out_ap_vld,
        pe_array_pe_val_3_0_5_out,
        pe_array_pe_val_3_0_5_out_ap_vld,
        pe_array_pe_val_2_3_5_out,
        pe_array_pe_val_2_3_5_out_ap_vld,
        pe_array_pe_val_2_2_5_out,
        pe_array_pe_val_2_2_5_out_ap_vld,
        pe_array_pe_val_2_1_5_out,
        pe_array_pe_val_2_1_5_out_ap_vld,
        pe_array_pe_val_2_0_5_out,
        pe_array_pe_val_2_0_5_out_ap_vld,
        pe_array_pe_val_1_3_5_out,
        pe_array_pe_val_1_3_5_out_ap_vld,
        pe_array_pe_val_1_2_5_out,
        pe_array_pe_val_1_2_5_out_ap_vld,
        pe_array_pe_val_1_1_5_out,
        pe_array_pe_val_1_1_5_out_ap_vld,
        pe_array_pe_val_1_0_5_out,
        pe_array_pe_val_1_0_5_out_ap_vld,
        pe_array_pe_val_0_3_5_out,
        pe_array_pe_val_0_3_5_out_ap_vld,
        pe_array_pe_val_0_2_5_out,
        pe_array_pe_val_0_2_5_out_ap_vld,
        pe_array_pe_val_0_1_5_out,
        pe_array_pe_val_0_1_5_out_ap_vld,
        pe_array_pe_val_0_0_5_out,
        pe_array_pe_val_0_0_5_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [31:0] pe_array_pe_val_3_3_3_reload;
input  [31:0] pe_array_pe_val_3_2_3_reload;
input  [31:0] pe_array_pe_val_3_1_3_reload;
input  [31:0] pe_array_pe_val_3_0_3_reload;
input  [31:0] pe_array_pe_val_2_3_3_reload;
input  [31:0] pe_array_pe_val_2_2_3_reload;
input  [31:0] pe_array_pe_val_2_1_3_reload;
input  [31:0] pe_array_pe_val_2_0_3_reload;
input  [31:0] pe_array_pe_val_1_3_3_reload;
input  [31:0] pe_array_pe_val_1_2_3_reload;
input  [31:0] pe_array_pe_val_1_1_3_reload;
input  [31:0] pe_array_pe_val_1_0_3_reload;
input  [31:0] pe_array_pe_val_0_3_3_reload;
input  [31:0] pe_array_pe_val_0_2_3_reload;
input  [31:0] pe_array_pe_val_0_1_3_reload;
input  [31:0] pe_array_pe_val_0_0_3_reload;
input  [31:0] pe_array_pe_b_pass_2_3_3_reload;
input  [31:0] pe_array_pe_b_pass_2_2_3_reload;
input  [31:0] pe_array_pe_b_pass_2_1_3_reload;
input  [31:0] pe_array_pe_b_pass_2_0_3_reload;
input  [31:0] pe_array_pe_b_pass_1_3_3_reload;
input  [31:0] pe_array_pe_b_pass_1_2_3_reload;
input  [31:0] pe_array_pe_b_pass_1_1_3_reload;
input  [31:0] pe_array_pe_b_pass_1_0_3_reload;
input  [31:0] pe_array_pe_b_pass_0_3_3_reload;
input  [31:0] pe_array_pe_b_pass_0_2_3_reload;
input  [31:0] pe_array_pe_b_pass_0_1_3_reload;
input  [31:0] pe_array_pe_b_pass_0_0_3_reload;
input  [31:0] pe_array_pe_a_pass_3_2_3_reload;
input  [31:0] pe_array_pe_a_pass_3_1_3_reload;
input  [31:0] pe_array_pe_a_pass_3_0_3_reload;
input  [31:0] pe_array_pe_a_pass_2_2_3_reload;
input  [31:0] pe_array_pe_a_pass_2_1_3_reload;
input  [31:0] pe_array_pe_a_pass_2_0_3_reload;
input  [31:0] pe_array_pe_a_pass_1_2_3_reload;
input  [31:0] pe_array_pe_a_pass_1_1_3_reload;
input  [31:0] pe_array_pe_a_pass_1_0_3_reload;
input  [31:0] pe_array_pe_a_pass_0_2_3_reload;
input  [31:0] pe_array_pe_a_pass_0_1_3_reload;
input  [31:0] pe_array_pe_a_pass_0_0_3_reload;
input  [63:0] din_a;
input  [63:0] din_b;
output  [31:0] pe_array_pe_val_3_3_5_out;
output   pe_array_pe_val_3_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_3_2_5_out;
output   pe_array_pe_val_3_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_3_1_5_out;
output   pe_array_pe_val_3_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_3_0_5_out;
output   pe_array_pe_val_3_0_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_3_5_out;
output   pe_array_pe_val_2_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_2_5_out;
output   pe_array_pe_val_2_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_1_5_out;
output   pe_array_pe_val_2_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_2_0_5_out;
output   pe_array_pe_val_2_0_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_3_5_out;
output   pe_array_pe_val_1_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_2_5_out;
output   pe_array_pe_val_1_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_1_5_out;
output   pe_array_pe_val_1_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_1_0_5_out;
output   pe_array_pe_val_1_0_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_3_5_out;
output   pe_array_pe_val_0_3_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_2_5_out;
output   pe_array_pe_val_0_2_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_1_5_out;
output   pe_array_pe_val_0_1_5_out_ap_vld;
output  [31:0] pe_array_pe_val_0_0_5_out;
output   pe_array_pe_val_0_0_5_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg pe_array_pe_val_3_3_5_out_ap_vld;
reg pe_array_pe_val_3_2_5_out_ap_vld;
reg pe_array_pe_val_3_1_5_out_ap_vld;
reg pe_array_pe_val_3_0_5_out_ap_vld;
reg pe_array_pe_val_2_3_5_out_ap_vld;
reg pe_array_pe_val_2_2_5_out_ap_vld;
reg pe_array_pe_val_2_1_5_out_ap_vld;
reg pe_array_pe_val_2_0_5_out_ap_vld;
reg pe_array_pe_val_1_3_5_out_ap_vld;
reg pe_array_pe_val_1_2_5_out_ap_vld;
reg pe_array_pe_val_1_1_5_out_ap_vld;
reg pe_array_pe_val_1_0_5_out_ap_vld;
reg pe_array_pe_val_0_3_5_out_ap_vld;
reg pe_array_pe_val_0_2_5_out_ap_vld;
reg pe_array_pe_val_0_1_5_out_ap_vld;
reg pe_array_pe_val_0_0_5_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
reg   [0:0] icmp_ln95_reg_2599;
reg   [0:0] and_ln105_1_reg_2655;
reg    ap_predicate_op278_readreq_state8;
reg    ap_block_state8_io;
reg   [0:0] icmp_ln95_reg_2599_pp0_iter1_reg;
reg   [0:0] and_ln105_2_reg_2688;
reg    ap_predicate_op406_read_state16;
reg    ap_block_state16_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_subdone;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] and_ln105_2_reg_2688_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] and_ln105_1_reg_2655_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] and_ln105_reg_2629;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] and_ln105_reg_2629_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln104_reg_2608;
reg   [0:0] icmp_ln104_reg_2608_pp0_iter1_reg;
reg  signed [31:0] pe_array_pe_a_pass_0_0_reg_850;
reg  signed [31:0] pe_array_pe_b_pass_0_0_reg_862;
reg  signed [31:0] pe_array_pe_a_pass_3_0_reg_918;
reg  signed [31:0] b_vec_3_reg_930;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
reg    ap_predicate_op305_readreq_state9;
reg    ap_block_state9_io;
reg    ap_predicate_op418_read_state17;
reg    ap_block_state17_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_2580;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_predicate_op324_read_state10;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_predicate_op331_readreq_state10;
reg    ap_block_state10_io;
wire    ap_block_state18_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg  signed [31:0] pe_array_pe_a_pass_2_2_2_reg_2589;
reg  signed [31:0] pe_array_pe_b_pass_2_2_2_reg_2594;
wire   [0:0] icmp_ln95_fu_1156_p2;
wire   [5:0] shl_ln_fu_1168_p3;
reg   [5:0] shl_ln_reg_2603;
wire   [0:0] icmp_ln104_fu_1190_p2;
reg   [63:0] gmem_addr_reg_2612;
reg   [63:0] gmem_addr_1_reg_2618;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_predicate_op177_readreq_state3;
reg    ap_block_state3_io;
reg    ap_predicate_op332_read_state11;
reg    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
wire   [6:0] or_ln101_fu_1323_p2;
reg   [6:0] or_ln101_reg_2624;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_predicate_op188_readreq_state4;
reg    ap_block_state4_io;
reg    ap_predicate_op356_read_state12;
reg    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
wire   [0:0] and_ln105_fu_1350_p2;
reg   [63:0] gmem_addr_2_reg_2633;
reg   [63:0] gmem_addr_3_reg_2639;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_predicate_op219_readreq_state5;
reg    ap_block_state5_io;
reg    ap_predicate_op364_read_state13;
reg    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
reg    ap_block_pp0_stage4_11001;
wire   [4:0] trunc_ln100_cast_fu_1498_p1;
reg   [4:0] trunc_ln100_cast_reg_2645;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_predicate_op231_readreq_state6;
reg    ap_block_state6_io;
reg    ap_predicate_op380_read_state14;
reg    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
reg    ap_block_pp0_stage5_11001;
wire   [6:0] or_ln101_1_fu_1521_p2;
reg   [6:0] or_ln101_1_reg_2650;
wire   [0:0] and_ln105_1_fu_1577_p2;
reg   [63:0] gmem_addr_4_reg_2659;
reg  signed [31:0] pe_array_pe_a_pass_1_2_2_reg_2665;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_predicate_op258_readreq_state7;
reg    ap_block_state7_io;
reg    ap_predicate_op400_read_state15;
reg    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
reg  signed [31:0] pe_array_pe_b_pass_2_1_2_reg_2671;
reg   [63:0] gmem_addr_5_reg_2677;
wire   [5:0] or_ln101_2_fu_1720_p2;
reg   [5:0] or_ln101_2_reg_2683;
reg    ap_block_pp0_stage7_11001;
wire   [0:0] and_ln105_2_fu_1776_p2;
reg   [63:0] gmem_addr_6_reg_2692;
reg   [63:0] gmem_addr_7_reg_2698;
reg   [31:0] a_vec_0_reg_2704;
reg   [31:0] gmem_addr_1_read_reg_2709;
reg   [31:0] a_vec_1_reg_2714;
reg   [31:0] gmem_addr_3_read_reg_2719;
reg  signed [31:0] pe_array_pe_a_pass_0_2_2_reg_2724;
reg  signed [31:0] pe_array_pe_b_pass_2_0_2_reg_2730;
reg  signed [31:0] pe_array_pe_b_pass_2_0_2_reg_2730_pp0_iter2_reg;
reg   [31:0] a_vec_2_reg_2736;
reg   [31:0] gmem_addr_5_read_reg_2741;
reg   [31:0] a_vec_3_reg_2746;
reg   [31:0] gmem_addr_7_read_reg_2751;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage6_subdone;
reg    ap_condition_exit_pp0_iter1_stage6;
reg    ap_idle_pp0_0to0;
reg    ap_condition_exit_pp0_iter1_stage7;
wire  signed [31:0] ap_phi_reg_pp0_iter0_pe_array_pe_a_pass_0_0_reg_850;
reg  signed [31:0] ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_0_0_reg_850;
wire  signed [31:0] ap_phi_reg_pp0_iter0_pe_array_pe_b_pass_0_0_reg_862;
reg  signed [31:0] ap_phi_reg_pp0_iter1_pe_array_pe_b_pass_0_0_reg_862;
reg  signed [31:0] ap_phi_mux_pe_array_pe_a_pass_1_0_phi_fu_878_p4;
reg  signed [31:0] ap_phi_mux_pe_array_pe_b_pass_0_1_phi_fu_889_p4;
reg  signed [31:0] ap_phi_mux_pe_array_pe_a_pass_2_0_phi_fu_900_p4;
reg  signed [31:0] ap_phi_mux_pe_array_pe_b_pass_0_2_phi_fu_911_p4;
reg  signed [31:0] ap_phi_mux_pe_array_pe_a_pass_3_0_phi_fu_922_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter2_pe_array_pe_a_pass_3_0_reg_918;
wire  signed [31:0] ap_phi_reg_pp0_iter0_pe_array_pe_a_pass_3_0_reg_918;
reg  signed [31:0] ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_3_0_reg_918;
reg  signed [31:0] ap_phi_mux_b_vec_3_phi_fu_934_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter2_b_vec_3_reg_930;
wire  signed [31:0] ap_phi_reg_pp0_iter0_b_vec_3_reg_930;
reg  signed [31:0] ap_phi_reg_pp0_iter1_b_vec_3_reg_930;
wire  signed [63:0] sext_ln105_fu_1211_p1;
wire  signed [63:0] sext_ln106_fu_1298_p1;
wire  signed [63:0] sext_ln105_1_fu_1388_p1;
wire  signed [63:0] sext_ln106_1_fu_1488_p1;
wire  signed [63:0] sext_ln105_2_fu_1614_p1;
wire  signed [63:0] sext_ln106_2_fu_1656_p1;
wire  signed [63:0] sext_ln105_3_fu_1813_p1;
wire  signed [63:0] sext_ln106_3_fu_1849_p1;
reg   [3:0] i_fu_226;
wire   [3:0] add_ln95_fu_1162_p2;
wire    ap_loop_init;
reg  signed [31:0] pe_array_pe_a_pass_0_1_fu_230;
reg  signed [31:0] pe_array_pe_a_pass_0_2_1_fu_234;
reg  signed [31:0] pe_array_pe_a_pass_1_1_fu_238;
reg  signed [31:0] pe_array_pe_a_pass_1_2_1_fu_242;
reg  signed [31:0] pe_array_pe_a_pass_2_1_fu_246;
reg  signed [31:0] pe_array_pe_a_pass_2_2_1_fu_250;
reg  signed [31:0] pe_array_pe_a_pass_3_1_fu_254;
reg  signed [31:0] pe_array_pe_a_pass_3_2_1_fu_258;
reg  signed [31:0] pe_array_pe_b_pass_1_0_fu_262;
reg  signed [31:0] pe_array_pe_b_pass_1_1_fu_266;
reg  signed [31:0] pe_array_pe_b_pass_1_2_fu_270;
reg  signed [31:0] pe_array_pe_b_pass_1_3_fu_274;
reg  signed [31:0] pe_array_pe_b_pass_2_0_1_fu_278;
reg  signed [31:0] pe_array_pe_b_pass_2_1_1_fu_282;
reg  signed [31:0] pe_array_pe_b_pass_2_2_1_fu_286;
reg  signed [31:0] pe_array_pe_b_pass_2_3_1_fu_290;
reg   [31:0] pe_array_pe_val_0_0_1_fu_294;
wire   [31:0] pe_array_pe_val_0_0_fu_1992_p2;
reg   [31:0] pe_array_pe_val_0_1_1_fu_298;
wire   [31:0] pe_array_pe_val_0_1_fu_2027_p2;
reg   [31:0] pe_array_pe_val_0_2_1_fu_302;
wire   [31:0] pe_array_pe_val_0_2_fu_2096_p2;
reg   [31:0] pe_array_pe_val_0_3_1_fu_306;
wire   [31:0] pe_array_pe_val_0_3_fu_2155_p2;
reg   [31:0] pe_array_pe_val_1_0_1_fu_310;
wire   [31:0] pe_array_pe_val_1_0_fu_2039_p2;
reg   [31:0] pe_array_pe_val_1_1_1_fu_314;
wire   [31:0] pe_array_pe_val_1_1_fu_1681_p2;
reg   [31:0] pe_array_pe_val_1_2_1_fu_318;
wire   [31:0] pe_array_pe_val_1_2_fu_1876_p2;
reg   [31:0] pe_array_pe_val_1_3_1_fu_322;
wire   [31:0] pe_array_pe_val_1_3_fu_1937_p2;
reg   [31:0] pe_array_pe_val_2_0_1_fu_326;
wire   [31:0] pe_array_pe_val_2_0_fu_2107_p2;
reg   [31:0] pe_array_pe_val_2_1_1_fu_330;
wire   [31:0] pe_array_pe_val_2_1_fu_1887_p2;
reg   [31:0] pe_array_pe_val_2_2_1_fu_334;
wire   [31:0] pe_array_pe_val_2_2_fu_1239_p2;
reg   [31:0] pe_array_pe_val_2_3_1_fu_338;
wire   [31:0] pe_array_pe_val_2_3_fu_1416_p2;
reg   [31:0] pe_array_pe_val_3_0_1_fu_342;
wire   [31:0] pe_array_pe_val_3_0_fu_2182_p2;
reg   [31:0] pe_array_pe_val_3_1_1_fu_346;
wire   [31:0] pe_array_pe_val_3_1_fu_1949_p2;
reg   [31:0] pe_array_pe_val_3_2_1_fu_350;
wire   [31:0] pe_array_pe_val_3_2_fu_1428_p2;
reg   [31:0] pe_array_pe_val_3_3_1_fu_354;
wire   [31:0] pe_array_pe_val_3_3_fu_1251_p2;
reg   [31:0] pe_array_pe_a_pass_0_2_fu_358;
reg   [31:0] pe_array_pe_a_pass_1_2_fu_362;
reg  signed [31:0] pe_array_pe_a_pass_2_2_fu_366;
reg  signed [31:0] pe_array_pe_a_pass_3_2_fu_370;
reg   [31:0] pe_array_pe_b_pass_2_0_fu_374;
reg   [31:0] pe_array_pe_b_pass_2_1_fu_378;
reg  signed [31:0] pe_array_pe_b_pass_2_2_fu_382;
reg  signed [31:0] pe_array_pe_b_pass_2_3_fu_386;
reg    ap_block_pp0_stage6_01001;
wire   [1:0] tmp_fu_1180_p4;
wire   [63:0] zext_ln104_fu_1176_p1;
wire   [63:0] add_ln105_fu_1196_p2;
wire   [61:0] trunc_ln1_fu_1201_p4;
wire   [31:0] mul_ln20_10_fu_1233_p2;
wire   [31:0] mul_ln20_15_fu_1245_p2;
wire   [7:0] shl_ln1_fu_1272_p3;
wire   [63:0] zext_ln106_fu_1279_p1;
wire   [63:0] add_ln106_fu_1283_p2;
wire   [61:0] trunc_ln2_fu_1288_p4;
wire   [6:0] zext_ln104_1_fu_1314_p1;
wire   [6:0] add_ln101_fu_1317_p2;
wire   [2:0] tmp_1_fu_1329_p4;
wire   [0:0] icmp_ln104_1_fu_1339_p2;
wire   [0:0] icmp_ln105_fu_1345_p2;
wire   [3:0] add_ln105_4_fu_1356_p2;
wire   [5:0] shl_ln2_fu_1361_p3;
wire   [63:0] zext_ln105_fu_1369_p1;
wire   [63:0] add_ln105_1_fu_1373_p2;
wire   [61:0] trunc_ln105_1_fu_1378_p4;
wire   [31:0] mul_ln20_11_fu_1410_p2;
wire   [31:0] mul_ln20_14_fu_1422_p2;
wire   [8:0] shl_ln106_1_fu_1462_p3;
wire  signed [63:0] sext_ln106_4_fu_1469_p1;
wire   [63:0] add_ln106_1_fu_1473_p2;
wire   [61:0] trunc_ln106_1_fu_1478_p4;
wire   [4:0] add_ln100_fu_1501_p2;
wire   [6:0] shl_ln101_1_fu_1513_p3;
wire   [4:0] add_ln100_1_fu_1507_p2;
wire   [0:0] tmp_2_fu_1527_p3;
wire   [2:0] tmp_3_fu_1541_p4;
wire   [0:0] tmp_4_fu_1557_p3;
wire   [0:0] xor_ln104_fu_1535_p2;
wire   [0:0] xor_ln105_fu_1565_p2;
wire   [0:0] and_ln105_3_fu_1571_p2;
wire   [0:0] icmp_ln104_2_fu_1551_p2;
wire   [3:0] trunc_ln105_fu_1583_p1;
wire   [5:0] shl_ln105_1_fu_1587_p3;
wire   [63:0] zext_ln105_1_fu_1595_p1;
wire   [63:0] add_ln105_2_fu_1599_p2;
wire   [61:0] trunc_ln105_2_fu_1604_p4;
wire   [8:0] shl_ln106_2_fu_1630_p3;
wire  signed [63:0] sext_ln106_5_fu_1637_p1;
wire   [63:0] add_ln106_2_fu_1641_p2;
wire   [61:0] trunc_ln106_2_fu_1646_p4;
wire   [31:0] mul_ln20_5_fu_1675_p2;
wire   [3:0] add_ln100_2_fu_1702_p2;
wire   [5:0] shl_ln101_2_fu_1712_p3;
wire   [4:0] add_ln100_3_fu_1707_p2;
wire   [0:0] tmp_5_fu_1726_p3;
wire   [1:0] tmp_6_fu_1740_p4;
wire   [0:0] tmp_7_fu_1756_p3;
wire   [0:0] xor_ln104_1_fu_1734_p2;
wire   [0:0] xor_ln105_1_fu_1764_p2;
wire   [0:0] and_ln105_4_fu_1770_p2;
wire   [0:0] icmp_ln104_3_fu_1750_p2;
wire   [3:0] trunc_ln105_4_fu_1782_p1;
wire   [5:0] shl_ln105_2_fu_1786_p3;
wire   [63:0] zext_ln105_2_fu_1794_p1;
wire   [63:0] add_ln105_3_fu_1798_p2;
wire   [61:0] trunc_ln105_3_fu_1803_p4;
wire   [7:0] shl_ln106_3_fu_1823_p3;
wire  signed [63:0] sext_ln106_6_fu_1830_p1;
wire   [63:0] add_ln106_3_fu_1834_p2;
wire   [61:0] trunc_ln106_3_fu_1839_p4;
wire   [31:0] mul_ln20_6_fu_1871_p2;
wire   [31:0] mul_ln20_9_fu_1882_p2;
wire   [31:0] mul_ln20_7_fu_1931_p2;
wire   [31:0] mul_ln20_13_fu_1943_p2;
wire   [31:0] mul_ln20_fu_1986_p2;
wire   [31:0] mul_ln20_1_fu_2021_p2;
wire   [31:0] mul_ln20_4_fu_2033_p2;
wire   [31:0] mul_ln20_2_fu_2091_p2;
wire   [31:0] mul_ln20_8_fu_2102_p2;
wire   [31:0] mul_ln20_3_fu_2149_p2;
wire   [31:0] mul_ln20_12_fu_2176_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_725;
reg    ap_condition_767;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U146(
    .din0(pe_array_pe_b_pass_2_2_fu_382),
    .din1(pe_array_pe_a_pass_2_2_fu_366),
    .dout(mul_ln20_10_fu_1233_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U147(
    .din0(pe_array_pe_b_pass_2_3_1_fu_290),
    .din1(pe_array_pe_a_pass_3_2_1_fu_258),
    .dout(mul_ln20_15_fu_1245_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U148(
    .din0(pe_array_pe_b_pass_2_3_fu_386),
    .din1(pe_array_pe_a_pass_2_2_1_fu_250),
    .dout(mul_ln20_11_fu_1410_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U149(
    .din0(pe_array_pe_b_pass_2_2_1_fu_286),
    .din1(pe_array_pe_a_pass_3_2_fu_370),
    .dout(mul_ln20_14_fu_1422_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U150(
    .din0(pe_array_pe_b_pass_1_1_fu_266),
    .din1(pe_array_pe_a_pass_1_1_fu_238),
    .dout(mul_ln20_5_fu_1675_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U151(
    .din0(pe_array_pe_b_pass_1_2_fu_270),
    .din1(pe_array_pe_a_pass_1_2_2_reg_2665),
    .dout(mul_ln20_6_fu_1871_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U152(
    .din0(pe_array_pe_b_pass_2_1_2_reg_2671),
    .din1(pe_array_pe_a_pass_2_1_fu_246),
    .dout(mul_ln20_9_fu_1882_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U153(
    .din0(pe_array_pe_b_pass_1_3_fu_274),
    .din1(pe_array_pe_a_pass_1_2_1_fu_242),
    .dout(mul_ln20_7_fu_1931_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U154(
    .din0(pe_array_pe_b_pass_2_1_1_fu_282),
    .din1(pe_array_pe_a_pass_3_1_fu_254),
    .dout(mul_ln20_13_fu_1943_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U155(
    .din0(ap_phi_reg_pp0_iter1_pe_array_pe_b_pass_0_0_reg_862),
    .din1(ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_0_0_reg_850),
    .dout(mul_ln20_fu_1986_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U156(
    .din0(ap_phi_mux_pe_array_pe_b_pass_0_1_phi_fu_889_p4),
    .din1(pe_array_pe_a_pass_0_1_fu_230),
    .dout(mul_ln20_1_fu_2021_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U157(
    .din0(pe_array_pe_b_pass_1_0_fu_262),
    .din1(ap_phi_mux_pe_array_pe_a_pass_1_0_phi_fu_878_p4),
    .dout(mul_ln20_4_fu_2033_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U158(
    .din0(ap_phi_mux_pe_array_pe_b_pass_0_2_phi_fu_911_p4),
    .din1(pe_array_pe_a_pass_0_2_2_reg_2724),
    .dout(mul_ln20_2_fu_2091_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U159(
    .din0(pe_array_pe_b_pass_2_0_2_reg_2730),
    .din1(ap_phi_mux_pe_array_pe_a_pass_2_0_phi_fu_900_p4),
    .dout(mul_ln20_8_fu_2102_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U160(
    .din0(b_vec_3_reg_930),
    .din1(pe_array_pe_a_pass_0_2_1_fu_234),
    .dout(mul_ln20_3_fu_2149_p2)
);

systolic_array_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U161(
    .din0(pe_array_pe_b_pass_2_0_1_fu_278),
    .din1(pe_array_pe_a_pass_3_0_reg_918),
    .dout(mul_ln20_12_fu_2176_p2)
);

systolic_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage6))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter1_stage7) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage6))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_725)) begin
        if (((1'd0 == and_ln105_2_fu_1776_p2) & (icmp_ln95_reg_2599 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_b_vec_3_reg_930 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_b_vec_3_reg_930 <= ap_phi_reg_pp0_iter0_b_vec_3_reg_930;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_reg_2608_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_0_0_reg_850 <= a_vec_0_reg_2704;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_0_0_reg_850 <= ap_phi_reg_pp0_iter0_pe_array_pe_a_pass_0_0_reg_850;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_725)) begin
        if (((1'd0 == and_ln105_2_fu_1776_p2) & (icmp_ln95_reg_2599 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_3_0_reg_918 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_3_0_reg_918 <= ap_phi_reg_pp0_iter0_pe_array_pe_a_pass_3_0_reg_918;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_reg_2608_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter1_pe_array_pe_b_pass_0_0_reg_862 <= gmem_addr_1_read_reg_2709;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ap_phi_reg_pp0_iter1_pe_array_pe_b_pass_0_0_reg_862 <= ap_phi_reg_pp0_iter0_pe_array_pe_b_pass_0_0_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_767)) begin
        if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688_pp0_iter1_reg))) begin
            b_vec_3_reg_930 <= gmem_addr_7_read_reg_2751;
        end else if ((1'b1 == 1'b1)) begin
            b_vec_3_reg_930 <= ap_phi_reg_pp0_iter2_b_vec_3_reg_930;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_226 <= 4'd0;
    end else if (((icmp_ln95_fu_1156_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_fu_226 <= add_ln95_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_0_1_fu_230 <= pe_array_pe_a_pass_0_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_a_pass_0_1_fu_230 <= pe_array_pe_a_pass_0_0_reg_850;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_0_2_1_fu_234 <= pe_array_pe_a_pass_0_2_3_reload;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        pe_array_pe_a_pass_0_2_1_fu_234 <= pe_array_pe_a_pass_0_2_2_reg_2724;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_0_2_fu_358 <= pe_array_pe_a_pass_0_1_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_a_pass_0_2_fu_358 <= pe_array_pe_a_pass_0_1_fu_230;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_1_1_fu_238 <= pe_array_pe_a_pass_1_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_a_pass_1_1_fu_238 <= ap_phi_mux_pe_array_pe_a_pass_1_0_phi_fu_878_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_1_2_1_fu_242 <= pe_array_pe_a_pass_1_2_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_a_pass_1_2_1_fu_242 <= pe_array_pe_a_pass_1_2_2_reg_2665;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_1_2_fu_362 <= pe_array_pe_a_pass_1_1_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        pe_array_pe_a_pass_1_2_fu_362 <= pe_array_pe_a_pass_1_1_fu_238;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_2_1_fu_246 <= pe_array_pe_a_pass_2_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_a_pass_2_1_fu_246 <= ap_phi_mux_pe_array_pe_a_pass_2_0_phi_fu_900_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_2_2_1_fu_250 <= pe_array_pe_a_pass_2_2_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pe_array_pe_a_pass_2_2_1_fu_250 <= pe_array_pe_a_pass_2_2_2_reg_2589;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_2_fu_366 <= pe_array_pe_a_pass_2_1_3_reload;
        end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_2_fu_366 <= pe_array_pe_a_pass_2_1_fu_246;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_767)) begin
        if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688_pp0_iter1_reg))) begin
            pe_array_pe_a_pass_3_0_reg_918 <= a_vec_3_reg_2746;
        end else if ((1'b1 == 1'b1)) begin
            pe_array_pe_a_pass_3_0_reg_918 <= ap_phi_reg_pp0_iter2_pe_array_pe_a_pass_3_0_reg_918;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_3_1_fu_254 <= pe_array_pe_a_pass_3_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pe_array_pe_a_pass_3_1_fu_254 <= ap_phi_mux_pe_array_pe_a_pass_3_0_phi_fu_922_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_3_2_1_fu_258 <= pe_array_pe_a_pass_3_2_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pe_array_pe_a_pass_3_2_1_fu_258 <= pe_array_pe_a_pass_3_2_fu_370;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_a_pass_3_2_fu_370 <= pe_array_pe_a_pass_3_1_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_a_pass_3_2_fu_370 <= pe_array_pe_a_pass_3_1_fu_254;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_1_0_fu_262 <= pe_array_pe_b_pass_0_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_b_pass_1_0_fu_262 <= pe_array_pe_b_pass_0_0_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_1_1_fu_266 <= pe_array_pe_b_pass_0_1_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_b_pass_1_1_fu_266 <= ap_phi_mux_pe_array_pe_b_pass_0_1_phi_fu_889_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_1_2_fu_270 <= pe_array_pe_b_pass_0_2_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_b_pass_1_2_fu_270 <= ap_phi_mux_pe_array_pe_b_pass_0_2_phi_fu_911_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_1_3_fu_274 <= pe_array_pe_b_pass_0_3_3_reload;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pe_array_pe_b_pass_1_3_fu_274 <= ap_phi_mux_b_vec_3_phi_fu_934_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_0_1_fu_278 <= pe_array_pe_b_pass_2_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        pe_array_pe_b_pass_2_0_1_fu_278 <= pe_array_pe_b_pass_2_0_2_reg_2730_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_0_fu_374 <= pe_array_pe_b_pass_1_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_b_pass_2_0_fu_374 <= pe_array_pe_b_pass_1_0_fu_262;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_1_1_fu_282 <= pe_array_pe_b_pass_2_1_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_b_pass_2_1_1_fu_282 <= pe_array_pe_b_pass_2_1_2_reg_2671;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_1_fu_378 <= pe_array_pe_b_pass_1_1_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        pe_array_pe_b_pass_2_1_fu_378 <= pe_array_pe_b_pass_1_1_fu_266;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_2_1_fu_286 <= pe_array_pe_b_pass_2_2_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pe_array_pe_b_pass_2_2_1_fu_286 <= pe_array_pe_b_pass_2_2_2_reg_2594;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_2_fu_382 <= pe_array_pe_b_pass_1_2_3_reload;
        end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_2_fu_382 <= pe_array_pe_b_pass_1_2_fu_270;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_3_1_fu_290 <= pe_array_pe_b_pass_2_3_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pe_array_pe_b_pass_2_3_1_fu_290 <= pe_array_pe_b_pass_2_3_fu_386;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_b_pass_2_3_fu_386 <= pe_array_pe_b_pass_1_3_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_b_pass_2_3_fu_386 <= pe_array_pe_b_pass_1_3_fu_274;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_0_0_1_fu_294 <= pe_array_pe_val_0_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_0_0_1_fu_294 <= pe_array_pe_val_0_0_fu_1992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_0_1_1_fu_298 <= pe_array_pe_val_0_1_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_0_1_1_fu_298 <= pe_array_pe_val_0_1_fu_2027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_0_2_1_fu_302 <= pe_array_pe_val_0_2_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_0_2_1_fu_302 <= pe_array_pe_val_0_2_fu_2096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_0_3_1_fu_306 <= pe_array_pe_val_0_3_3_reload;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        pe_array_pe_val_0_3_1_fu_306 <= pe_array_pe_val_0_3_fu_2155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_1_0_1_fu_310 <= pe_array_pe_val_1_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_1_0_1_fu_310 <= pe_array_pe_val_1_0_fu_2039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_1_1_1_fu_314 <= pe_array_pe_val_1_1_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        pe_array_pe_val_1_1_1_fu_314 <= pe_array_pe_val_1_1_fu_1681_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_val_1_2_1_fu_318 <= pe_array_pe_val_1_2_3_reload;
        end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_val_1_2_1_fu_318 <= pe_array_pe_val_1_2_fu_1876_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_1_3_1_fu_322 <= pe_array_pe_val_1_3_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_1_3_1_fu_322 <= pe_array_pe_val_1_3_fu_1937_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_2_0_1_fu_326 <= pe_array_pe_val_2_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_2_0_1_fu_326 <= pe_array_pe_val_2_0_fu_2107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_val_2_1_1_fu_330 <= pe_array_pe_val_2_1_3_reload;
        end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_val_2_1_1_fu_330 <= pe_array_pe_val_2_1_fu_1887_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_2_2_1_fu_334 <= pe_array_pe_val_2_2_3_reload;
    end else if (((icmp_ln95_fu_1156_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pe_array_pe_val_2_2_1_fu_334 <= pe_array_pe_val_2_2_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_2_3_1_fu_338 <= pe_array_pe_val_2_3_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pe_array_pe_val_2_3_1_fu_338 <= pe_array_pe_val_2_3_fu_1416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_3_0_1_fu_342 <= pe_array_pe_val_3_0_3_reload;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        pe_array_pe_val_3_0_1_fu_342 <= pe_array_pe_val_3_0_fu_2182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_3_1_1_fu_346 <= pe_array_pe_val_3_1_3_reload;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0))) begin
        pe_array_pe_val_3_1_1_fu_346 <= pe_array_pe_val_3_1_fu_1949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_3_2_1_fu_350 <= pe_array_pe_val_3_2_3_reload;
    end else if (((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pe_array_pe_val_3_2_1_fu_350 <= pe_array_pe_val_3_2_fu_1428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_array_pe_val_3_3_1_fu_354 <= pe_array_pe_val_3_3_3_reload;
    end else if (((icmp_ln95_fu_1156_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pe_array_pe_val_3_3_1_fu_354 <= pe_array_pe_val_3_3_fu_1251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op324_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        a_vec_0_reg_2704 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op356_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        a_vec_1_reg_2714 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op380_read_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        a_vec_2_reg_2736 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op406_read_state16 == 1'b1))) begin
        a_vec_3_reg_2746 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        and_ln105_1_reg_2655 <= and_ln105_1_fu_1577_p2;
        or_ln101_1_reg_2650[6 : 2] <= or_ln101_1_fu_1521_p2[6 : 2];
        trunc_ln100_cast_reg_2645[3 : 0] <= trunc_ln100_cast_fu_1498_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        and_ln105_1_reg_2655_pp0_iter1_reg <= and_ln105_1_reg_2655;
        pe_array_pe_a_pass_0_2_2_reg_2724 <= pe_array_pe_a_pass_0_2_fu_358;
        pe_array_pe_b_pass_2_0_2_reg_2730 <= pe_array_pe_b_pass_2_0_fu_374;
        pe_array_pe_b_pass_2_0_2_reg_2730_pp0_iter2_reg <= pe_array_pe_b_pass_2_0_2_reg_2730;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        and_ln105_2_reg_2688 <= and_ln105_2_fu_1776_p2;
        or_ln101_2_reg_2683[5 : 2] <= or_ln101_2_fu_1720_p2[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        and_ln105_2_reg_2688_pp0_iter1_reg <= and_ln105_2_reg_2688;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln105_reg_2629 <= and_ln105_fu_1350_p2;
        or_ln101_reg_2624[6 : 2] <= or_ln101_fu_1323_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln105_reg_2629_pp0_iter1_reg <= and_ln105_reg_2629;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ap_phi_reg_pp0_iter2_b_vec_3_reg_930 <= ap_phi_reg_pp0_iter1_b_vec_3_reg_930;
        ap_phi_reg_pp0_iter2_pe_array_pe_a_pass_3_0_reg_918 <= ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_3_0_reg_918;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op332_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_1_read_reg_2709 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_1_reg_2618 <= sext_ln106_fu_1298_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (1'd1 == and_ln105_fu_1350_p2))) begin
        gmem_addr_2_reg_2633 <= sext_ln105_1_fu_1388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op364_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_3_read_reg_2719 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln105_reg_2629))) begin
        gmem_addr_3_reg_2639 <= sext_ln106_1_fu_1488_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln105_1_fu_1577_p2))) begin
        gmem_addr_4_reg_2659 <= sext_ln105_2_fu_1614_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op400_read_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem_addr_5_read_reg_2741 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln105_1_reg_2655))) begin
        gmem_addr_5_reg_2677 <= sext_ln106_2_fu_1656_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (1'd1 == and_ln105_2_fu_1776_p2))) begin
        gmem_addr_6_reg_2692 <= sext_ln105_3_fu_1813_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op418_read_state17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_7_read_reg_2751 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_2599 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln105_2_reg_2688))) begin
        gmem_addr_7_reg_2698 <= sext_ln106_3_fu_1849_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_1190_p2 == 1'd1) & (icmp_ln95_fu_1156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem_addr_reg_2612 <= sext_ln105_fu_1211_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_1_reg_2580 <= i_fu_226;
        icmp_ln104_reg_2608_pp0_iter1_reg <= icmp_ln104_reg_2608;
        icmp_ln95_reg_2599 <= icmp_ln95_fu_1156_p2;
        icmp_ln95_reg_2599_pp0_iter1_reg <= icmp_ln95_reg_2599;
        pe_array_pe_a_pass_2_2_2_reg_2589 <= pe_array_pe_a_pass_2_2_fu_366;
        pe_array_pe_b_pass_2_2_2_reg_2594 <= pe_array_pe_b_pass_2_2_fu_382;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_1156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln104_reg_2608 <= icmp_ln104_fu_1190_p2;
        shl_ln_reg_2603[5 : 2] <= shl_ln_fu_1168_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        pe_array_pe_a_pass_0_0_reg_850 <= ap_phi_reg_pp0_iter1_pe_array_pe_a_pass_0_0_reg_850;
        pe_array_pe_b_pass_0_0_reg_862 <= ap_phi_reg_pp0_iter1_pe_array_pe_b_pass_0_0_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        pe_array_pe_a_pass_1_2_2_reg_2665 <= pe_array_pe_a_pass_1_2_fu_362;
        pe_array_pe_b_pass_2_1_2_reg_2671 <= pe_array_pe_b_pass_2_1_fu_378;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688_pp0_iter1_reg))) begin
        ap_phi_mux_b_vec_3_phi_fu_934_p4 = gmem_addr_7_read_reg_2751;
    end else begin
        ap_phi_mux_b_vec_3_phi_fu_934_p4 = ap_phi_reg_pp0_iter2_b_vec_3_reg_930;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_reg_2629_pp0_iter1_reg))) begin
        ap_phi_mux_pe_array_pe_a_pass_1_0_phi_fu_878_p4 = a_vec_1_reg_2714;
    end else begin
        ap_phi_mux_pe_array_pe_a_pass_1_0_phi_fu_878_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_1_reg_2655_pp0_iter1_reg))) begin
        ap_phi_mux_pe_array_pe_a_pass_2_0_phi_fu_900_p4 = a_vec_2_reg_2736;
    end else begin
        ap_phi_mux_pe_array_pe_a_pass_2_0_phi_fu_900_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688_pp0_iter1_reg))) begin
        ap_phi_mux_pe_array_pe_a_pass_3_0_phi_fu_922_p4 = a_vec_3_reg_2746;
    end else begin
        ap_phi_mux_pe_array_pe_a_pass_3_0_phi_fu_922_p4 = ap_phi_reg_pp0_iter2_pe_array_pe_a_pass_3_0_reg_918;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_reg_2629_pp0_iter1_reg))) begin
        ap_phi_mux_pe_array_pe_b_pass_0_1_phi_fu_889_p4 = gmem_addr_3_read_reg_2719;
    end else begin
        ap_phi_mux_pe_array_pe_b_pass_0_1_phi_fu_889_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_1_reg_2655_pp0_iter1_reg))) begin
        ap_phi_mux_pe_array_pe_b_pass_0_2_phi_fu_911_p4 = gmem_addr_5_read_reg_2741;
    end else begin
        ap_phi_mux_pe_array_pe_b_pass_0_2_phi_fu_911_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (1'd1 == and_ln105_2_reg_2688)) | ((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln105_2_reg_2688)) | ((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (1'd1 == and_ln105_reg_2629)) | ((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (1'd1 == and_ln105_reg_2629)) | ((icmp_ln95_reg_2599 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln105_1_reg_2655)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_predicate_op278_readreq_state8 == 1'b1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln104_reg_2608_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688_pp0_iter1_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_predicate_op406_read_state16 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_reg_2629)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_reg_2629_pp0_iter1_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_1_reg_2655)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_1_reg_2655_pp0_iter1_reg)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op331_readreq_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_7_reg_2698;
    end else if (((ap_predicate_op305_readreq_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_6_reg_2692;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op278_readreq_state8 == 1'b1))) begin
        m_axi_gmem_ARADDR = gmem_addr_5_reg_2677;
    end else if (((ap_predicate_op258_readreq_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_4_reg_2659;
    end else if (((ap_predicate_op231_readreq_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_3_reg_2639;
    end else if (((ap_predicate_op219_readreq_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_2_reg_2633;
    end else if (((ap_predicate_op188_readreq_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_1_reg_2618;
    end else if (((ap_predicate_op177_readreq_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_reg_2612;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op258_readreq_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_predicate_op231_readreq_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op219_readreq_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_predicate_op188_readreq_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op177_readreq_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op331_readreq_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op305_readreq_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op278_readreq_state8 == 1'b1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op400_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_predicate_op380_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op364_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_predicate_op356_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op332_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op324_read_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op418_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op406_read_state16 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_0_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_0_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_0_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_0_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_0_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_1_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_1_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_1_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_1_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_1_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_2_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_2_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_2_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_2_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_2_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_3_0_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_0_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_3_1_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_3_2_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_2_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd1))) begin
        pe_array_pe_val_3_3_5_out_ap_vld = 1'b1;
    end else begin
        pe_array_pe_val_3_3_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage6))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_1507_p2 = (trunc_ln100_cast_fu_1498_p1 + 5'd6);

assign add_ln100_2_fu_1702_p2 = ($signed(i_1_reg_2580) + $signed(4'd13));

assign add_ln100_3_fu_1707_p2 = (trunc_ln100_cast_reg_2645 + 5'd9);

assign add_ln100_fu_1501_p2 = ($signed(trunc_ln100_cast_fu_1498_p1) + $signed(5'd30));

assign add_ln101_fu_1317_p2 = ($signed(zext_ln104_1_fu_1314_p1) + $signed(7'd124));

assign add_ln105_1_fu_1373_p2 = (zext_ln105_fu_1369_p1 + din_a);

assign add_ln105_2_fu_1599_p2 = (zext_ln105_1_fu_1595_p1 + din_a);

assign add_ln105_3_fu_1798_p2 = (zext_ln105_2_fu_1794_p1 + din_a);

assign add_ln105_4_fu_1356_p2 = (i_1_reg_2580 + 4'd3);

assign add_ln105_fu_1196_p2 = (zext_ln104_fu_1176_p1 + din_a);

assign add_ln106_1_fu_1473_p2 = ($signed(sext_ln106_4_fu_1469_p1) + $signed(din_b));

assign add_ln106_2_fu_1641_p2 = ($signed(sext_ln106_5_fu_1637_p1) + $signed(din_b));

assign add_ln106_3_fu_1834_p2 = ($signed(sext_ln106_6_fu_1830_p1) + $signed(din_b));

assign add_ln106_fu_1283_p2 = (zext_ln106_fu_1279_p1 + din_b);

assign add_ln95_fu_1162_p2 = (i_fu_226 + 4'd1);

assign and_ln105_1_fu_1577_p2 = (icmp_ln104_2_fu_1551_p2 & and_ln105_3_fu_1571_p2);

assign and_ln105_2_fu_1776_p2 = (icmp_ln104_3_fu_1750_p2 & and_ln105_4_fu_1770_p2);

assign and_ln105_3_fu_1571_p2 = (xor_ln105_fu_1565_p2 & xor_ln104_fu_1535_p2);

assign and_ln105_4_fu_1770_p2 = (xor_ln105_1_fu_1764_p2 & xor_ln104_1_fu_1734_p2);

assign and_ln105_fu_1350_p2 = (icmp_ln105_fu_1345_p2 & icmp_ln104_1_fu_1339_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op418_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op418_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op324_read_state10 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op324_read_state10 == 1'b1))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op332_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op332_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op356_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op356_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op364_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op364_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op380_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op380_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op400_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op400_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op400_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op406_read_state16 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op406_read_state16 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op331_readreq_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op324_read_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage2_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op332_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state12_pp0_stage3_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op356_read_state12 == 1'b1));
end

always @ (*) begin
    ap_block_state13_pp0_stage4_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op364_read_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op380_read_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state15_pp0_stage6_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op400_read_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state16_pp0_stage7_iter1 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op406_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter2 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op418_read_state17 == 1'b1));
end

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op177_readreq_state3 == 1'b1));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op188_readreq_state4 == 1'b1));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op219_readreq_state5 == 1'b1));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op231_readreq_state6 == 1'b1));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op258_readreq_state7 == 1'b1));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op278_readreq_state8 == 1'b1));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op305_readreq_state9 == 1'b1));
end

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_725 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001));
end

always @ (*) begin
    ap_condition_767 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign ap_phi_reg_pp0_iter0_b_vec_3_reg_930 = 'bx;

assign ap_phi_reg_pp0_iter0_pe_array_pe_a_pass_0_0_reg_850 = 32'd0;

assign ap_phi_reg_pp0_iter0_pe_array_pe_a_pass_3_0_reg_918 = 'bx;

assign ap_phi_reg_pp0_iter0_pe_array_pe_b_pass_0_0_reg_862 = 32'd0;

always @ (*) begin
    ap_predicate_op177_readreq_state3 = ((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1));
end

always @ (*) begin
    ap_predicate_op188_readreq_state4 = ((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1));
end

always @ (*) begin
    ap_predicate_op219_readreq_state5 = ((icmp_ln95_reg_2599 == 1'd0) & (1'd1 == and_ln105_reg_2629));
end

always @ (*) begin
    ap_predicate_op231_readreq_state6 = ((icmp_ln95_reg_2599 == 1'd0) & (1'd1 == and_ln105_reg_2629));
end

always @ (*) begin
    ap_predicate_op258_readreq_state7 = ((icmp_ln95_reg_2599 == 1'd0) & (1'd1 == and_ln105_1_reg_2655));
end

always @ (*) begin
    ap_predicate_op278_readreq_state8 = ((icmp_ln95_reg_2599 == 1'd0) & (1'd1 == and_ln105_1_reg_2655));
end

always @ (*) begin
    ap_predicate_op305_readreq_state9 = ((icmp_ln95_reg_2599 == 1'd0) & (1'd1 == and_ln105_2_reg_2688));
end

always @ (*) begin
    ap_predicate_op324_read_state10 = ((icmp_ln95_reg_2599 == 1'd0) & (icmp_ln104_reg_2608 == 1'd1));
end

always @ (*) begin
    ap_predicate_op331_readreq_state10 = ((icmp_ln95_reg_2599 == 1'd0) & (1'd1 == and_ln105_2_reg_2688));
end

always @ (*) begin
    ap_predicate_op332_read_state11 = ((icmp_ln104_reg_2608_pp0_iter1_reg == 1'd1) & (icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op356_read_state12 = ((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_reg_2629));
end

always @ (*) begin
    ap_predicate_op364_read_state13 = ((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_reg_2629_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op380_read_state14 = ((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_1_reg_2655));
end

always @ (*) begin
    ap_predicate_op400_read_state15 = ((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_1_reg_2655_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op406_read_state16 = ((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688));
end

always @ (*) begin
    ap_predicate_op418_read_state17 = ((icmp_ln95_reg_2599_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln105_2_reg_2688_pp0_iter1_reg));
end

assign icmp_ln104_1_fu_1339_p2 = (($signed(tmp_1_fu_1329_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln104_2_fu_1551_p2 = (($signed(tmp_3_fu_1541_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln104_3_fu_1750_p2 = ((tmp_6_fu_1740_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_1190_p2 = ((tmp_fu_1180_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_1345_p2 = ((i_1_reg_2580 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_1156_p2 = ((i_fu_226 == 4'd11) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln101_1_fu_1521_p2 = (shl_ln101_1_fu_1513_p3 | 7'd2);

assign or_ln101_2_fu_1720_p2 = (shl_ln101_2_fu_1712_p3 | 6'd3);

assign or_ln101_fu_1323_p2 = (7'd1 | add_ln101_fu_1317_p2);

assign pe_array_pe_val_0_0_5_out = pe_array_pe_val_0_0_1_fu_294;

assign pe_array_pe_val_0_0_fu_1992_p2 = (mul_ln20_fu_1986_p2 + pe_array_pe_val_0_0_1_fu_294);

assign pe_array_pe_val_0_1_5_out = pe_array_pe_val_0_1_1_fu_298;

assign pe_array_pe_val_0_1_fu_2027_p2 = (mul_ln20_1_fu_2021_p2 + pe_array_pe_val_0_1_1_fu_298);

assign pe_array_pe_val_0_2_5_out = pe_array_pe_val_0_2_1_fu_302;

assign pe_array_pe_val_0_2_fu_2096_p2 = (mul_ln20_2_fu_2091_p2 + pe_array_pe_val_0_2_1_fu_302);

assign pe_array_pe_val_0_3_5_out = pe_array_pe_val_0_3_1_fu_306;

assign pe_array_pe_val_0_3_fu_2155_p2 = (mul_ln20_3_fu_2149_p2 + pe_array_pe_val_0_3_1_fu_306);

assign pe_array_pe_val_1_0_5_out = pe_array_pe_val_1_0_1_fu_310;

assign pe_array_pe_val_1_0_fu_2039_p2 = (mul_ln20_4_fu_2033_p2 + pe_array_pe_val_1_0_1_fu_310);

assign pe_array_pe_val_1_1_5_out = pe_array_pe_val_1_1_1_fu_314;

assign pe_array_pe_val_1_1_fu_1681_p2 = (mul_ln20_5_fu_1675_p2 + pe_array_pe_val_1_1_1_fu_314);

assign pe_array_pe_val_1_2_5_out = pe_array_pe_val_1_2_1_fu_318;

assign pe_array_pe_val_1_2_fu_1876_p2 = (mul_ln20_6_fu_1871_p2 + pe_array_pe_val_1_2_1_fu_318);

assign pe_array_pe_val_1_3_5_out = pe_array_pe_val_1_3_1_fu_322;

assign pe_array_pe_val_1_3_fu_1937_p2 = (mul_ln20_7_fu_1931_p2 + pe_array_pe_val_1_3_1_fu_322);

assign pe_array_pe_val_2_0_5_out = pe_array_pe_val_2_0_1_fu_326;

assign pe_array_pe_val_2_0_fu_2107_p2 = (mul_ln20_8_fu_2102_p2 + pe_array_pe_val_2_0_1_fu_326);

assign pe_array_pe_val_2_1_5_out = pe_array_pe_val_2_1_1_fu_330;

assign pe_array_pe_val_2_1_fu_1887_p2 = (mul_ln20_9_fu_1882_p2 + pe_array_pe_val_2_1_1_fu_330);

assign pe_array_pe_val_2_2_5_out = pe_array_pe_val_2_2_1_fu_334;

assign pe_array_pe_val_2_2_fu_1239_p2 = (mul_ln20_10_fu_1233_p2 + pe_array_pe_val_2_2_1_fu_334);

assign pe_array_pe_val_2_3_5_out = pe_array_pe_val_2_3_1_fu_338;

assign pe_array_pe_val_2_3_fu_1416_p2 = (mul_ln20_11_fu_1410_p2 + pe_array_pe_val_2_3_1_fu_338);

assign pe_array_pe_val_3_0_5_out = pe_array_pe_val_3_0_1_fu_342;

assign pe_array_pe_val_3_0_fu_2182_p2 = (mul_ln20_12_fu_2176_p2 + pe_array_pe_val_3_0_1_fu_342);

assign pe_array_pe_val_3_1_5_out = pe_array_pe_val_3_1_1_fu_346;

assign pe_array_pe_val_3_1_fu_1949_p2 = (mul_ln20_13_fu_1943_p2 + pe_array_pe_val_3_1_1_fu_346);

assign pe_array_pe_val_3_2_5_out = pe_array_pe_val_3_2_1_fu_350;

assign pe_array_pe_val_3_2_fu_1428_p2 = (mul_ln20_14_fu_1422_p2 + pe_array_pe_val_3_2_1_fu_350);

assign pe_array_pe_val_3_3_5_out = pe_array_pe_val_3_3_1_fu_354;

assign pe_array_pe_val_3_3_fu_1251_p2 = (mul_ln20_15_fu_1245_p2 + pe_array_pe_val_3_3_1_fu_354);

assign sext_ln105_1_fu_1388_p1 = $signed(trunc_ln105_1_fu_1378_p4);

assign sext_ln105_2_fu_1614_p1 = $signed(trunc_ln105_2_fu_1604_p4);

assign sext_ln105_3_fu_1813_p1 = $signed(trunc_ln105_3_fu_1803_p4);

assign sext_ln105_fu_1211_p1 = $signed(trunc_ln1_fu_1201_p4);

assign sext_ln106_1_fu_1488_p1 = $signed(trunc_ln106_1_fu_1478_p4);

assign sext_ln106_2_fu_1656_p1 = $signed(trunc_ln106_2_fu_1646_p4);

assign sext_ln106_3_fu_1849_p1 = $signed(trunc_ln106_3_fu_1839_p4);

assign sext_ln106_4_fu_1469_p1 = $signed(shl_ln106_1_fu_1462_p3);

assign sext_ln106_5_fu_1637_p1 = $signed(shl_ln106_2_fu_1630_p3);

assign sext_ln106_6_fu_1830_p1 = $signed(shl_ln106_3_fu_1823_p3);

assign sext_ln106_fu_1298_p1 = $signed(trunc_ln2_fu_1288_p4);

assign shl_ln101_1_fu_1513_p3 = {{add_ln100_fu_1501_p2}, {2'd0}};

assign shl_ln101_2_fu_1712_p3 = {{add_ln100_2_fu_1702_p2}, {2'd0}};

assign shl_ln105_1_fu_1587_p3 = {{trunc_ln105_fu_1583_p1}, {2'd0}};

assign shl_ln105_2_fu_1786_p3 = {{trunc_ln105_4_fu_1782_p1}, {2'd0}};

assign shl_ln106_1_fu_1462_p3 = {{or_ln101_reg_2624}, {2'd0}};

assign shl_ln106_2_fu_1630_p3 = {{or_ln101_1_reg_2650}, {2'd0}};

assign shl_ln106_3_fu_1823_p3 = {{or_ln101_2_reg_2683}, {2'd0}};

assign shl_ln1_fu_1272_p3 = {{i_1_reg_2580}, {4'd0}};

assign shl_ln2_fu_1361_p3 = {{add_ln105_4_fu_1356_p2}, {2'd0}};

assign shl_ln_fu_1168_p3 = {{i_fu_226}, {2'd0}};

assign tmp_1_fu_1329_p4 = {{or_ln101_fu_1323_p2[6:4]}};

assign tmp_2_fu_1527_p3 = add_ln100_1_fu_1507_p2[32'd4];

assign tmp_3_fu_1541_p4 = {{or_ln101_1_fu_1521_p2[6:4]}};

assign tmp_4_fu_1557_p3 = add_ln100_fu_1501_p2[32'd4];

assign tmp_5_fu_1726_p3 = add_ln100_3_fu_1707_p2[32'd4];

assign tmp_6_fu_1740_p4 = {{or_ln101_2_fu_1720_p2[5:4]}};

assign tmp_7_fu_1756_p3 = add_ln100_2_fu_1702_p2[32'd3];

assign tmp_fu_1180_p4 = {{i_fu_226[3:2]}};

assign trunc_ln100_cast_fu_1498_p1 = i_1_reg_2580;

assign trunc_ln105_1_fu_1378_p4 = {{add_ln105_1_fu_1373_p2[63:2]}};

assign trunc_ln105_2_fu_1604_p4 = {{add_ln105_2_fu_1599_p2[63:2]}};

assign trunc_ln105_3_fu_1803_p4 = {{add_ln105_3_fu_1798_p2[63:2]}};

assign trunc_ln105_4_fu_1782_p1 = add_ln100_3_fu_1707_p2[3:0];

assign trunc_ln105_fu_1583_p1 = add_ln100_1_fu_1507_p2[3:0];

assign trunc_ln106_1_fu_1478_p4 = {{add_ln106_1_fu_1473_p2[63:2]}};

assign trunc_ln106_2_fu_1646_p4 = {{add_ln106_2_fu_1641_p2[63:2]}};

assign trunc_ln106_3_fu_1839_p4 = {{add_ln106_3_fu_1834_p2[63:2]}};

assign trunc_ln1_fu_1201_p4 = {{add_ln105_fu_1196_p2[63:2]}};

assign trunc_ln2_fu_1288_p4 = {{add_ln106_fu_1283_p2[63:2]}};

assign xor_ln104_1_fu_1734_p2 = (tmp_5_fu_1726_p3 ^ 1'd1);

assign xor_ln104_fu_1535_p2 = (tmp_2_fu_1527_p3 ^ 1'd1);

assign xor_ln105_1_fu_1764_p2 = (tmp_7_fu_1756_p3 ^ 1'd1);

assign xor_ln105_fu_1565_p2 = (tmp_4_fu_1557_p3 ^ 1'd1);

assign zext_ln104_1_fu_1314_p1 = shl_ln_reg_2603;

assign zext_ln104_fu_1176_p1 = shl_ln_fu_1168_p3;

assign zext_ln105_1_fu_1595_p1 = shl_ln105_1_fu_1587_p3;

assign zext_ln105_2_fu_1794_p1 = shl_ln105_2_fu_1786_p3;

assign zext_ln105_fu_1369_p1 = shl_ln2_fu_1361_p3;

assign zext_ln106_fu_1279_p1 = shl_ln1_fu_1272_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_2603[1:0] <= 2'b00;
    or_ln101_reg_2624[1:0] <= 2'b01;
    trunc_ln100_cast_reg_2645[4] <= 1'b0;
    or_ln101_1_reg_2650[1:0] <= 2'b10;
    or_ln101_2_reg_2683[1:0] <= 2'b11;
end

endmodule //systolic_array_systolic_array_Pipeline_top_outer_loop1
