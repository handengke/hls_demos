// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module systolic_array_systolic_array_Pipeline_top_outer_loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pe_array_pe_val_3_3_3_reload,
        pe_array_pe_val_3_2_3_reload,
        pe_array_pe_val_3_1_3_reload,
        pe_array_pe_val_3_0_3_reload,
        pe_array_pe_val_2_3_3_reload,
        pe_array_pe_val_2_2_3_reload,
        pe_array_pe_val_2_1_3_reload,
        pe_array_pe_val_2_0_3_reload,
        pe_array_pe_val_1_3_3_reload,
        pe_array_pe_val_1_2_3_reload,
        pe_array_pe_val_1_1_3_reload,
        pe_array_pe_val_1_0_3_reload,
        pe_array_pe_val_0_3_3_reload,
        pe_array_pe_val_0_2_3_reload,
        pe_array_pe_val_0_1_3_reload,
        pe_array_pe_val_0_0_3_reload,
        pe_array_pe_b_pass_2_3_3_reload,
        pe_array_pe_b_pass_2_2_3_reload,
        pe_array_pe_b_pass_2_1_3_reload,
        pe_array_pe_b_pass_2_0_3_reload,
        pe_array_pe_b_pass_1_3_3_reload,
        pe_array_pe_b_pass_1_2_3_reload,
        pe_array_pe_b_pass_1_1_3_reload,
        pe_array_pe_b_pass_1_0_3_reload,
        pe_array_pe_b_pass_0_3_3_reload,
        pe_array_pe_b_pass_0_2_3_reload,
        pe_array_pe_b_pass_0_1_3_reload,
        pe_array_pe_b_pass_0_0_3_reload,
        pe_array_pe_a_pass_3_2_3_reload,
        pe_array_pe_a_pass_3_1_3_reload,
        pe_array_pe_a_pass_3_0_3_reload,
        pe_array_pe_a_pass_2_2_3_reload,
        pe_array_pe_a_pass_2_1_3_reload,
        pe_array_pe_a_pass_2_0_3_reload,
        pe_array_pe_a_pass_1_2_3_reload,
        pe_array_pe_a_pass_1_1_3_reload,
        pe_array_pe_a_pass_1_0_3_reload,
        pe_array_pe_a_pass_0_2_3_reload,
        pe_array_pe_a_pass_0_1_3_reload,
        pe_array_pe_a_pass_0_0_3_reload,
        M2_12_1_reload,
        M2_8_1_reload,
        M2_4_1_reload,
        M2_0_1_reload,
        M1_5_1_reload,
        M1_13_1_reload,
        M1_6_1_reload,
        M1_7_1_reload,
        M1_8_1_reload,
        M1_9_1_reload,
        M1_10_1_reload,
        M1_11_1_reload,
        M1_12_1_reload,
        M1_4_1_reload,
        M2_13_1_reload,
        M2_9_1_reload,
        M2_5_1_reload,
        M2_1_1_reload,
        M1_15_1_reload,
        M1_14_1_reload,
        M2_14_1_reload,
        M2_10_1_reload,
        M2_6_1_reload,
        M2_2_1_reload,
        M2_15_1_reload,
        M2_11_1_reload,
        M2_7_1_reload,
        M2_3_1_reload,
        M1_1_1_reload,
        M1_2_1_reload,
        M1_3_1_reload,
        M1_0_1_reload,
        this_pe_val_3_3_read_assign_out,
        this_pe_val_3_3_read_assign_out_ap_vld,
        this_pe_val_3_2_read_assign_out,
        this_pe_val_3_2_read_assign_out_ap_vld,
        this_pe_val_3_1_read_assign_out,
        this_pe_val_3_1_read_assign_out_ap_vld,
        this_pe_val_3_0_read_assign_out,
        this_pe_val_3_0_read_assign_out_ap_vld,
        this_pe_val_2_3_read_assign_out,
        this_pe_val_2_3_read_assign_out_ap_vld,
        this_pe_val_2_2_read_assign_out,
        this_pe_val_2_2_read_assign_out_ap_vld,
        this_pe_val_2_1_read_assign_out,
        this_pe_val_2_1_read_assign_out_ap_vld,
        this_pe_val_2_0_read_assign_out,
        this_pe_val_2_0_read_assign_out_ap_vld,
        this_pe_val_1_3_read_assign_out,
        this_pe_val_1_3_read_assign_out_ap_vld,
        this_pe_val_1_2_read_assign_out,
        this_pe_val_1_2_read_assign_out_ap_vld,
        this_pe_val_1_1_read_assign_out,
        this_pe_val_1_1_read_assign_out_ap_vld,
        this_pe_val_1_0_read_assign_out,
        this_pe_val_1_0_read_assign_out_ap_vld,
        this_pe_val_0_3_read_assign_out,
        this_pe_val_0_3_read_assign_out_ap_vld,
        this_pe_val_0_2_read_assign_out,
        this_pe_val_0_2_read_assign_out_ap_vld,
        this_pe_val_0_1_read_assign_out,
        this_pe_val_0_1_read_assign_out_ap_vld,
        this_pe_val_0_0_read_assign_out,
        this_pe_val_0_0_read_assign_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] pe_array_pe_val_3_3_3_reload;
input  [31:0] pe_array_pe_val_3_2_3_reload;
input  [31:0] pe_array_pe_val_3_1_3_reload;
input  [31:0] pe_array_pe_val_3_0_3_reload;
input  [31:0] pe_array_pe_val_2_3_3_reload;
input  [31:0] pe_array_pe_val_2_2_3_reload;
input  [31:0] pe_array_pe_val_2_1_3_reload;
input  [31:0] pe_array_pe_val_2_0_3_reload;
input  [31:0] pe_array_pe_val_1_3_3_reload;
input  [31:0] pe_array_pe_val_1_2_3_reload;
input  [31:0] pe_array_pe_val_1_1_3_reload;
input  [31:0] pe_array_pe_val_1_0_3_reload;
input  [31:0] pe_array_pe_val_0_3_3_reload;
input  [31:0] pe_array_pe_val_0_2_3_reload;
input  [31:0] pe_array_pe_val_0_1_3_reload;
input  [31:0] pe_array_pe_val_0_0_3_reload;
input  [31:0] pe_array_pe_b_pass_2_3_3_reload;
input  [31:0] pe_array_pe_b_pass_2_2_3_reload;
input  [31:0] pe_array_pe_b_pass_2_1_3_reload;
input  [31:0] pe_array_pe_b_pass_2_0_3_reload;
input  [31:0] pe_array_pe_b_pass_1_3_3_reload;
input  [31:0] pe_array_pe_b_pass_1_2_3_reload;
input  [31:0] pe_array_pe_b_pass_1_1_3_reload;
input  [31:0] pe_array_pe_b_pass_1_0_3_reload;
input  [31:0] pe_array_pe_b_pass_0_3_3_reload;
input  [31:0] pe_array_pe_b_pass_0_2_3_reload;
input  [31:0] pe_array_pe_b_pass_0_1_3_reload;
input  [31:0] pe_array_pe_b_pass_0_0_3_reload;
input  [31:0] pe_array_pe_a_pass_3_2_3_reload;
input  [31:0] pe_array_pe_a_pass_3_1_3_reload;
input  [31:0] pe_array_pe_a_pass_3_0_3_reload;
input  [31:0] pe_array_pe_a_pass_2_2_3_reload;
input  [31:0] pe_array_pe_a_pass_2_1_3_reload;
input  [31:0] pe_array_pe_a_pass_2_0_3_reload;
input  [31:0] pe_array_pe_a_pass_1_2_3_reload;
input  [31:0] pe_array_pe_a_pass_1_1_3_reload;
input  [31:0] pe_array_pe_a_pass_1_0_3_reload;
input  [31:0] pe_array_pe_a_pass_0_2_3_reload;
input  [31:0] pe_array_pe_a_pass_0_1_3_reload;
input  [31:0] pe_array_pe_a_pass_0_0_3_reload;
input  [31:0] M2_12_1_reload;
input  [31:0] M2_8_1_reload;
input  [31:0] M2_4_1_reload;
input  [31:0] M2_0_1_reload;
input  [31:0] M1_5_1_reload;
input  [31:0] M1_13_1_reload;
input  [31:0] M1_6_1_reload;
input  [31:0] M1_7_1_reload;
input  [31:0] M1_8_1_reload;
input  [31:0] M1_9_1_reload;
input  [31:0] M1_10_1_reload;
input  [31:0] M1_11_1_reload;
input  [31:0] M1_12_1_reload;
input  [31:0] M1_4_1_reload;
input  [31:0] M2_13_1_reload;
input  [31:0] M2_9_1_reload;
input  [31:0] M2_5_1_reload;
input  [31:0] M2_1_1_reload;
input  [31:0] M1_15_1_reload;
input  [31:0] M1_14_1_reload;
input  [31:0] M2_14_1_reload;
input  [31:0] M2_10_1_reload;
input  [31:0] M2_6_1_reload;
input  [31:0] M2_2_1_reload;
input  [31:0] M2_15_1_reload;
input  [31:0] M2_11_1_reload;
input  [31:0] M2_7_1_reload;
input  [31:0] M2_3_1_reload;
input  [31:0] M1_1_1_reload;
input  [31:0] M1_2_1_reload;
input  [31:0] M1_3_1_reload;
input  [31:0] M1_0_1_reload;
output  [31:0] this_pe_val_3_3_read_assign_out;
output   this_pe_val_3_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_3_2_read_assign_out;
output   this_pe_val_3_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_3_1_read_assign_out;
output   this_pe_val_3_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_3_0_read_assign_out;
output   this_pe_val_3_0_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_3_read_assign_out;
output   this_pe_val_2_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_2_read_assign_out;
output   this_pe_val_2_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_1_read_assign_out;
output   this_pe_val_2_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_2_0_read_assign_out;
output   this_pe_val_2_0_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_3_read_assign_out;
output   this_pe_val_1_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_2_read_assign_out;
output   this_pe_val_1_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_1_read_assign_out;
output   this_pe_val_1_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_1_0_read_assign_out;
output   this_pe_val_1_0_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_3_read_assign_out;
output   this_pe_val_0_3_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_2_read_assign_out;
output   this_pe_val_0_2_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_1_read_assign_out;
output   this_pe_val_0_1_read_assign_out_ap_vld;
output  [31:0] this_pe_val_0_0_read_assign_out;
output   this_pe_val_0_0_read_assign_out_ap_vld;

reg ap_idle;
reg this_pe_val_3_3_read_assign_out_ap_vld;
reg this_pe_val_3_2_read_assign_out_ap_vld;
reg this_pe_val_3_1_read_assign_out_ap_vld;
reg this_pe_val_3_0_read_assign_out_ap_vld;
reg this_pe_val_2_3_read_assign_out_ap_vld;
reg this_pe_val_2_2_read_assign_out_ap_vld;
reg this_pe_val_2_1_read_assign_out_ap_vld;
reg this_pe_val_2_0_read_assign_out_ap_vld;
reg this_pe_val_1_3_read_assign_out_ap_vld;
reg this_pe_val_1_2_read_assign_out_ap_vld;
reg this_pe_val_1_1_read_assign_out_ap_vld;
reg this_pe_val_1_0_read_assign_out_ap_vld;
reg this_pe_val_0_3_read_assign_out_ap_vld;
reg this_pe_val_0_2_read_assign_out_ap_vld;
reg this_pe_val_0_1_read_assign_out_ap_vld;
reg this_pe_val_0_0_read_assign_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln124_fu_1230_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] b_vec_0_reg_1004;
reg   [3:0] i_1_reg_2991;
reg   [0:0] icmp_ln124_reg_3000;
reg   [0:0] icmp_ln124_reg_3000_pp0_iter1_reg;
reg   [0:0] icmp_ln124_reg_3000_pp0_iter2_reg;
reg   [0:0] icmp_ln124_reg_3000_pp0_iter3_reg;
wire   [0:0] icmp_ln134_fu_1272_p2;
wire   [31:0] a_vec_0_fu_1278_p18;
wire   [1:0] trunc_ln136_fu_1316_p1;
wire   [0:0] and_ln135_fu_1368_p2;
reg   [0:0] and_ln135_reg_3020;
wire   [0:0] icmp_ln135_1_fu_1374_p2;
reg   [0:0] icmp_ln135_1_reg_3025;
wire   [0:0] icmp_ln135_2_fu_1380_p2;
reg   [0:0] icmp_ln135_2_reg_3032;
wire   [0:0] icmp_ln135_3_fu_1386_p2;
reg   [0:0] icmp_ln135_3_reg_3039;
wire   [0:0] icmp_ln135_4_fu_1392_p2;
reg   [0:0] icmp_ln135_4_reg_3046;
wire   [0:0] icmp_ln135_9_fu_1398_p2;
reg   [0:0] icmp_ln135_9_reg_3053;
wire   [0:0] and_ln136_fu_1416_p2;
reg   [0:0] and_ln136_reg_3060;
wire   [0:0] and_ln136_1_fu_1428_p2;
reg   [0:0] and_ln136_1_reg_3065;
wire   [0:0] and_ln136_2_fu_1440_p2;
reg   [0:0] and_ln136_2_reg_3070;
wire  signed [31:0] b_vec_1_fu_1470_p3;
reg  signed [31:0] b_vec_1_reg_3075;
wire   [0:0] and_ln135_1_fu_1554_p2;
reg   [0:0] and_ln135_1_reg_3081;
wire   [0:0] and_ln136_3_fu_1566_p2;
reg   [0:0] and_ln136_3_reg_3086;
wire   [0:0] and_ln136_4_fu_1578_p2;
reg   [0:0] and_ln136_4_reg_3091;
wire   [0:0] and_ln136_5_fu_1590_p2;
reg   [0:0] and_ln136_5_reg_3096;
wire  signed [31:0] b_vec_2_fu_1620_p3;
reg  signed [31:0] b_vec_2_reg_3101;
wire   [0:0] and_ln135_2_fu_1704_p2;
reg   [0:0] and_ln135_2_reg_3107;
wire   [0:0] and_ln136_6_fu_1722_p2;
reg   [0:0] and_ln136_6_reg_3112;
wire   [0:0] and_ln136_7_fu_1728_p2;
reg   [0:0] and_ln136_7_reg_3117;
wire   [0:0] and_ln136_8_fu_1740_p2;
reg   [0:0] and_ln136_8_reg_3122;
wire  signed [31:0] b_vec_3_fu_1770_p3;
reg  signed [31:0] b_vec_3_reg_3127;
wire  signed [31:0] pe_array_pe_a_pass_1_0_fu_1944_p3;
reg  signed [31:0] pe_array_pe_a_pass_1_0_reg_3238;
wire  signed [31:0] pe_array_pe_a_pass_2_0_fu_2034_p3;
reg  signed [31:0] pe_array_pe_a_pass_2_0_reg_3243;
wire  signed [31:0] pe_array_pe_a_pass_3_0_fu_2098_p3;
reg  signed [31:0] pe_array_pe_a_pass_3_0_reg_3248;
wire   [31:0] grp_fu_2105_p2;
reg   [31:0] mul_ln21_reg_3268;
wire   [31:0] grp_fu_2111_p2;
reg   [31:0] mul_ln21_1_reg_3273;
wire   [31:0] grp_fu_2116_p2;
reg   [31:0] mul_ln21_2_reg_3278;
wire   [31:0] grp_fu_2121_p2;
reg   [31:0] mul_ln21_3_reg_3283;
wire   [31:0] grp_fu_2126_p2;
reg   [31:0] mul_ln21_5_reg_3288;
wire   [31:0] grp_fu_2132_p2;
reg   [31:0] mul_ln21_6_reg_3293;
wire   [31:0] grp_fu_2138_p2;
reg   [31:0] mul_ln21_7_reg_3298;
wire   [31:0] grp_fu_2144_p2;
reg   [31:0] mul_ln21_9_reg_3303;
wire   [31:0] grp_fu_2150_p2;
reg   [31:0] mul_ln21_10_reg_3308;
wire   [31:0] grp_fu_2156_p2;
reg   [31:0] mul_ln21_11_reg_3313;
wire   [31:0] grp_fu_2162_p2;
reg   [31:0] mul_ln21_13_reg_3318;
wire   [31:0] grp_fu_2168_p2;
reg   [31:0] mul_ln21_14_reg_3323;
wire   [31:0] grp_fu_2174_p2;
reg   [31:0] mul_ln21_15_reg_3328;
wire   [31:0] grp_fu_2291_p2;
reg   [31:0] mul_ln21_4_reg_3333;
wire   [31:0] grp_fu_2296_p2;
reg   [31:0] mul_ln21_8_reg_3338;
wire   [31:0] grp_fu_2301_p2;
reg   [31:0] mul_ln21_12_reg_3343;
reg    ap_condition_exit_pp0_iter2_stage0;
wire  signed [31:0] ap_phi_reg_pp0_iter0_opa_reg_986;
reg  signed [31:0] ap_phi_reg_pp0_iter1_opa_reg_986;
wire  signed [31:0] ap_phi_reg_pp0_iter0_b_vec_0_reg_1004;
reg  signed [31:0] ap_phi_reg_pp0_iter1_b_vec_0_reg_1004;
reg   [3:0] i_fu_278;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0;
wire   [3:0] add_ln124_fu_1236_p2;
reg  signed [31:0] pe_array_pe_a_pass_0_1_fu_282;
reg  signed [31:0] this_pe_a_pass_0_2_read_assign_fu_286;
reg  signed [31:0] pe_array_pe_a_pass_1_1_fu_290;
reg  signed [31:0] this_pe_a_pass_1_2_read_assign_fu_294;
reg  signed [31:0] pe_array_pe_a_pass_2_1_fu_298;
reg  signed [31:0] this_pe_a_pass_2_2_read_assign_fu_302;
reg  signed [31:0] pe_array_pe_a_pass_3_1_fu_306;
reg  signed [31:0] this_pe_a_pass_3_2_read_assign_fu_310;
reg  signed [31:0] pe_array_pe_b_pass_1_0_fu_314;
reg  signed [31:0] pe_array_pe_b_pass_1_1_fu_318;
reg  signed [31:0] pe_array_pe_b_pass_1_2_fu_322;
reg  signed [31:0] pe_array_pe_b_pass_1_3_fu_326;
reg  signed [31:0] this_pe_b_pass_2_0_read_assign_fu_330;
reg  signed [31:0] this_pe_b_pass_2_1_read_assign_fu_334;
reg  signed [31:0] this_pe_b_pass_2_2_read_assign_fu_338;
reg  signed [31:0] this_pe_b_pass_2_3_read_assign_fu_342;
reg   [31:0] this_pe_val_0_0_read_assign_fu_346;
wire   [31:0] pe_array_pe_val_0_0_fu_2360_p2;
reg   [31:0] this_pe_val_0_1_read_assign_fu_350;
wire   [31:0] pe_array_pe_val_0_1_fu_2365_p2;
reg   [31:0] this_pe_val_0_2_read_assign_fu_354;
wire   [31:0] pe_array_pe_val_0_2_fu_2370_p2;
reg   [31:0] this_pe_val_0_3_read_assign_fu_358;
wire   [31:0] pe_array_pe_val_0_3_fu_2375_p2;
reg   [31:0] this_pe_val_1_0_read_assign_fu_362;
wire   [31:0] pe_array_pe_val_1_0_fu_2499_p2;
reg   [31:0] this_pe_val_1_1_read_assign_fu_366;
wire   [31:0] pe_array_pe_val_1_1_fu_2380_p2;
reg   [31:0] this_pe_val_1_2_read_assign_fu_370;
wire   [31:0] pe_array_pe_val_1_2_fu_2385_p2;
reg   [31:0] this_pe_val_1_3_read_assign_fu_374;
wire   [31:0] pe_array_pe_val_1_3_fu_2390_p2;
reg   [31:0] this_pe_val_2_0_read_assign_fu_378;
wire   [31:0] pe_array_pe_val_2_0_fu_2504_p2;
reg   [31:0] this_pe_val_2_1_read_assign_fu_382;
wire   [31:0] pe_array_pe_val_2_1_fu_2395_p2;
reg   [31:0] this_pe_val_2_2_read_assign_fu_386;
wire   [31:0] pe_array_pe_val_2_2_fu_2400_p2;
reg   [31:0] this_pe_val_2_3_read_assign_fu_390;
wire   [31:0] pe_array_pe_val_2_3_fu_2405_p2;
reg   [31:0] this_pe_val_3_0_read_assign_fu_394;
wire   [31:0] pe_array_pe_val_3_0_fu_2509_p2;
reg   [31:0] this_pe_val_3_1_read_assign_fu_398;
wire   [31:0] pe_array_pe_val_3_1_fu_2410_p2;
reg   [31:0] this_pe_val_3_2_read_assign_fu_402;
wire   [31:0] pe_array_pe_val_3_2_fu_2415_p2;
reg   [31:0] this_pe_val_3_3_read_assign_fu_406;
wire   [31:0] pe_array_pe_val_3_3_fu_2420_p2;
reg  signed [31:0] pe_array_pe_a_pass_0_2_fu_410;
reg  signed [31:0] pe_array_pe_a_pass_1_2_fu_414;
reg  signed [31:0] pe_array_pe_a_pass_2_2_fu_418;
reg  signed [31:0] pe_array_pe_a_pass_3_2_fu_422;
reg  signed [31:0] pe_array_pe_b_pass_2_0_fu_426;
reg  signed [31:0] pe_array_pe_b_pass_2_1_fu_430;
reg  signed [31:0] pe_array_pe_b_pass_2_2_fu_434;
reg  signed [31:0] pe_array_pe_b_pass_2_3_fu_438;
wire    ap_block_pp0_stage0_01001;
wire   [5:0] shl_ln_fu_1250_p3;
wire   [1:0] tmp_fu_1262_p4;
wire   [1:0] trunc_ln131_fu_1246_p1;
wire   [6:0] zext_ln134_fu_1258_p1;
wire   [3:0] trunc_ln131_1_fu_1320_p3;
wire   [6:0] add_ln131_fu_1328_p2;
wire   [6:0] or_ln131_fu_1340_p2;
wire   [2:0] tmp_1_fu_1346_p4;
wire   [0:0] icmp_ln134_1_fu_1356_p2;
wire   [0:0] icmp_ln135_fu_1362_p2;
wire   [3:0] add_ln131_1_fu_1334_p2;
wire   [3:0] or_ln136_fu_1404_p2;
wire   [0:0] icmp_ln136_fu_1410_p2;
wire   [0:0] icmp_ln136_1_fu_1422_p2;
wire   [0:0] icmp_ln136_2_fu_1434_p2;
wire   [31:0] select_ln135_1_fu_1446_p3;
wire   [31:0] select_ln136_3_fu_1454_p3;
wire   [31:0] select_ln136_4_fu_1462_p3;
wire   [4:0] zext_ln124_fu_1242_p1;
wire   [4:0] add_ln130_fu_1478_p2;
wire   [6:0] shl_ln131_1_fu_1490_p3;
wire   [4:0] add_ln130_1_fu_1484_p2;
wire   [0:0] tmp_2_fu_1504_p3;
wire   [6:0] or_ln131_1_fu_1498_p2;
wire   [2:0] tmp_3_fu_1518_p4;
wire   [0:0] tmp_4_fu_1534_p3;
wire   [0:0] icmp_ln134_2_fu_1528_p2;
wire   [0:0] xor_ln135_fu_1542_p2;
wire   [0:0] and_ln135_3_fu_1548_p2;
wire   [0:0] xor_ln134_fu_1512_p2;
wire   [0:0] icmp_ln136_3_fu_1560_p2;
wire   [0:0] icmp_ln136_4_fu_1572_p2;
wire   [0:0] icmp_ln136_5_fu_1584_p2;
wire   [31:0] select_ln135_12_fu_1596_p3;
wire   [31:0] select_ln136_9_fu_1604_p3;
wire   [31:0] select_ln136_10_fu_1612_p3;
wire   [3:0] add_ln130_2_fu_1628_p2;
wire   [5:0] shl_ln131_2_fu_1640_p3;
wire   [4:0] add_ln130_3_fu_1634_p2;
wire   [0:0] tmp_5_fu_1654_p3;
wire   [5:0] or_ln131_2_fu_1648_p2;
wire   [1:0] tmp_6_fu_1668_p4;
wire   [0:0] tmp_7_fu_1684_p3;
wire   [0:0] icmp_ln134_3_fu_1678_p2;
wire   [0:0] xor_ln135_1_fu_1692_p2;
wire   [0:0] and_ln135_4_fu_1698_p2;
wire   [0:0] xor_ln134_1_fu_1662_p2;
wire   [1:0] add_ln136_fu_1710_p2;
wire   [0:0] icmp_ln136_6_fu_1716_p2;
wire   [0:0] icmp_ln136_7_fu_1734_p2;
wire   [31:0] select_ln135_20_fu_1746_p3;
wire   [31:0] select_ln136_15_fu_1754_p3;
wire   [31:0] select_ln136_16_fu_1762_p3;
wire   [31:0] M1_15_fu_1846_p3;
wire   [31:0] M1_15_1_fu_1851_p3;
wire   [31:0] M1_15_2_fu_1857_p3;
wire   [0:0] icmp_ln135_5_fu_1869_p2;
wire   [31:0] M1_15_3_fu_1863_p3;
wire   [0:0] icmp_ln135_6_fu_1881_p2;
wire   [31:0] M1_15_4_fu_1874_p3;
wire   [0:0] icmp_ln135_7_fu_1893_p2;
wire   [31:0] M1_15_5_fu_1886_p3;
wire   [0:0] icmp_ln135_8_fu_1905_p2;
wire   [31:0] M1_15_6_fu_1898_p3;
wire   [31:0] M1_15_7_fu_1910_p3;
wire   [31:0] M1_15_24_fu_1917_p3;
wire   [31:0] select_ln135_fu_1923_p3;
wire   [31:0] select_ln136_fu_1930_p3;
wire   [31:0] select_ln136_1_fu_1937_p3;
wire   [31:0] M1_15_9_fu_1951_p3;
wire   [31:0] M1_15_10_fu_1956_p3;
wire   [31:0] M1_15_11_fu_1962_p3;
wire   [31:0] M1_15_12_fu_1968_p3;
wire   [31:0] M1_15_13_fu_1974_p3;
wire   [31:0] M1_15_14_fu_1980_p3;
wire   [31:0] M1_15_15_fu_1987_p3;
wire   [0:0] icmp_ln135_10_fu_2001_p2;
wire   [31:0] M1_15_16_fu_1994_p3;
wire   [31:0] M1_15_25_fu_2006_p3;
wire   [31:0] select_ln135_11_fu_2013_p3;
wire   [31:0] select_ln136_6_fu_2020_p3;
wire   [31:0] select_ln136_7_fu_2027_p3;
wire   [31:0] M1_15_18_fu_2041_p3;
wire   [31:0] M1_15_19_fu_2046_p3;
wire   [31:0] M1_15_20_fu_2052_p3;
wire   [31:0] M1_15_21_fu_2058_p3;
wire   [31:0] M1_15_22_fu_2064_p3;
wire   [31:0] M1_15_26_fu_2070_p3;
wire   [31:0] select_ln135_19_fu_2077_p3;
wire   [31:0] select_ln136_12_fu_2084_p3;
wire   [31:0] select_ln136_13_fu_2091_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_538;
reg    ap_condition_545;
reg    ap_condition_550;
reg    ap_condition_555;
reg    ap_condition_535;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

systolic_array_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U222(
    .din0(M1_0_1_reload),
    .din1(M1_1_1_reload),
    .din2(M1_2_1_reload),
    .din3(M1_3_1_reload),
    .din4(M1_4_1_reload),
    .din5(M1_5_1_reload),
    .din6(M1_6_1_reload),
    .din7(M1_7_1_reload),
    .din8(M1_8_1_reload),
    .din9(M1_9_1_reload),
    .din10(M1_10_1_reload),
    .din11(M1_10_1_reload),
    .din12(M1_10_1_reload),
    .din13(M1_10_1_reload),
    .din14(M1_10_1_reload),
    .din15(M1_10_1_reload),
    .din16(ap_sig_allocacmp_i_1),
    .dout(a_vec_0_fu_1278_p18)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U223(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter1_b_vec_0_reg_1004),
    .din1(ap_phi_reg_pp0_iter1_opa_reg_986),
    .ce(1'b1),
    .dout(grp_fu_2105_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U224(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_a_pass_0_1_fu_282),
    .din1(b_vec_1_reg_3075),
    .ce(1'b1),
    .dout(grp_fu_2111_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U225(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_a_pass_0_2_fu_410),
    .din1(b_vec_2_reg_3101),
    .ce(1'b1),
    .dout(grp_fu_2116_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U226(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(this_pe_a_pass_0_2_read_assign_fu_286),
    .din1(b_vec_3_reg_3127),
    .ce(1'b1),
    .dout(grp_fu_2121_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U227(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_1_fu_318),
    .din1(pe_array_pe_a_pass_1_1_fu_290),
    .ce(1'b1),
    .dout(grp_fu_2126_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U228(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_2_fu_322),
    .din1(pe_array_pe_a_pass_1_2_fu_414),
    .ce(1'b1),
    .dout(grp_fu_2132_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U229(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_3_fu_326),
    .din1(this_pe_a_pass_1_2_read_assign_fu_294),
    .ce(1'b1),
    .dout(grp_fu_2138_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U230(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_1_fu_430),
    .din1(pe_array_pe_a_pass_2_1_fu_298),
    .ce(1'b1),
    .dout(grp_fu_2144_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U231(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_2_fu_434),
    .din1(pe_array_pe_a_pass_2_2_fu_418),
    .ce(1'b1),
    .dout(grp_fu_2150_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U232(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_3_fu_438),
    .din1(this_pe_a_pass_2_2_read_assign_fu_302),
    .ce(1'b1),
    .dout(grp_fu_2156_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U233(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(this_pe_b_pass_2_1_read_assign_fu_334),
    .din1(pe_array_pe_a_pass_3_1_fu_306),
    .ce(1'b1),
    .dout(grp_fu_2162_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U234(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(this_pe_b_pass_2_2_read_assign_fu_338),
    .din1(pe_array_pe_a_pass_3_2_fu_422),
    .ce(1'b1),
    .dout(grp_fu_2168_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U235(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(this_pe_b_pass_2_3_read_assign_fu_342),
    .din1(this_pe_a_pass_3_2_read_assign_fu_310),
    .ce(1'b1),
    .dout(grp_fu_2174_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U236(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_1_0_fu_314),
    .din1(pe_array_pe_a_pass_1_0_reg_3238),
    .ce(1'b1),
    .dout(grp_fu_2291_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U237(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pe_array_pe_b_pass_2_0_fu_426),
    .din1(pe_array_pe_a_pass_2_0_reg_3243),
    .ce(1'b1),
    .dout(grp_fu_2296_p2)
);

systolic_array_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U238(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(this_pe_b_pass_2_0_read_assign_fu_330),
    .din1(pe_array_pe_a_pass_3_0_reg_3248),
    .ce(1'b1),
    .dout(grp_fu_2301_p2)
);

systolic_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_535)) begin
        if (((icmp_ln124_fu_1230_p2 == 1'd0) & (icmp_ln134_fu_1272_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_b_vec_0_reg_1004 <= 32'd0;
        end else if ((1'b1 == ap_condition_555)) begin
            ap_phi_reg_pp0_iter1_b_vec_0_reg_1004 <= M2_4_1_reload;
        end else if ((1'b1 == ap_condition_550)) begin
            ap_phi_reg_pp0_iter1_b_vec_0_reg_1004 <= M2_0_1_reload;
        end else if ((1'b1 == ap_condition_545)) begin
            ap_phi_reg_pp0_iter1_b_vec_0_reg_1004 <= M2_8_1_reload;
        end else if ((1'b1 == ap_condition_538)) begin
            ap_phi_reg_pp0_iter1_b_vec_0_reg_1004 <= M2_12_1_reload;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_b_vec_0_reg_1004 <= ap_phi_reg_pp0_iter0_b_vec_0_reg_1004;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln134_fu_1272_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_opa_reg_986 <= 32'd0;
    end else if ((((icmp_ln124_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln136_fu_1316_p1 == 2'd1) & (icmp_ln134_fu_1272_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln124_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln136_fu_1316_p1 == 2'd0) & (icmp_ln134_fu_1272_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln124_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln136_fu_1316_p1 == 2'd2) & (icmp_ln134_fu_1272_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln124_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln136_fu_1316_p1 == 2'd3) & (icmp_ln134_fu_1272_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_reg_pp0_iter1_opa_reg_986 <= a_vec_0_fu_1278_p18;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_opa_reg_986 <= ap_phi_reg_pp0_iter0_opa_reg_986;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln124_fu_1230_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_278 <= add_ln124_fu_1236_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_278 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_1_fu_282 <= pe_array_pe_a_pass_0_0_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_1_fu_282 <= ap_phi_reg_pp0_iter1_opa_reg_986;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_0_2_fu_410 <= pe_array_pe_a_pass_0_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_0_2_fu_410 <= pe_array_pe_a_pass_0_1_fu_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_1_fu_290 <= pe_array_pe_a_pass_1_0_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_1_fu_290 <= pe_array_pe_a_pass_1_0_fu_1944_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_1_2_fu_414 <= pe_array_pe_a_pass_1_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_1_2_fu_414 <= pe_array_pe_a_pass_1_1_fu_290;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_1_fu_298 <= pe_array_pe_a_pass_2_0_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_1_fu_298 <= pe_array_pe_a_pass_2_0_fu_2034_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_2_2_fu_418 <= pe_array_pe_a_pass_2_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_2_2_fu_418 <= pe_array_pe_a_pass_2_1_fu_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_1_fu_306 <= pe_array_pe_a_pass_3_0_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_1_fu_306 <= pe_array_pe_a_pass_3_0_fu_2098_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_a_pass_3_2_fu_422 <= pe_array_pe_a_pass_3_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_a_pass_3_2_fu_422 <= pe_array_pe_a_pass_3_1_fu_306;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_b_pass_1_0_fu_314 <= pe_array_pe_b_pass_0_0_3_reload;
        end else if (((icmp_ln124_reg_3000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pe_array_pe_b_pass_1_0_fu_314 <= b_vec_0_reg_1004;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_1_fu_318 <= pe_array_pe_b_pass_0_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_1_fu_318 <= b_vec_1_reg_3075;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_2_fu_322 <= pe_array_pe_b_pass_0_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_2_fu_322 <= b_vec_2_reg_3101;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_1_3_fu_326 <= pe_array_pe_b_pass_0_3_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_1_3_fu_326 <= b_vec_3_reg_3127;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pe_array_pe_b_pass_2_0_fu_426 <= pe_array_pe_b_pass_1_0_3_reload;
        end else if (((icmp_ln124_reg_3000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pe_array_pe_b_pass_2_0_fu_426 <= pe_array_pe_b_pass_1_0_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_1_fu_430 <= pe_array_pe_b_pass_1_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_1_fu_430 <= pe_array_pe_b_pass_1_1_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_2_fu_434 <= pe_array_pe_b_pass_1_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_2_fu_434 <= pe_array_pe_b_pass_1_2_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pe_array_pe_b_pass_2_3_fu_438 <= pe_array_pe_b_pass_1_3_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pe_array_pe_b_pass_2_3_fu_438 <= pe_array_pe_b_pass_1_3_fu_326;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_0_2_read_assign_fu_286 <= pe_array_pe_a_pass_0_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_0_2_read_assign_fu_286 <= pe_array_pe_a_pass_0_2_fu_410;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_1_2_read_assign_fu_294 <= pe_array_pe_a_pass_1_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_1_2_read_assign_fu_294 <= pe_array_pe_a_pass_1_2_fu_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_2_2_read_assign_fu_302 <= pe_array_pe_a_pass_2_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_2_2_read_assign_fu_302 <= pe_array_pe_a_pass_2_2_fu_418;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_a_pass_3_2_read_assign_fu_310 <= pe_array_pe_a_pass_3_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_a_pass_3_2_read_assign_fu_310 <= pe_array_pe_a_pass_3_2_fu_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_b_pass_2_0_read_assign_fu_330 <= pe_array_pe_b_pass_2_0_3_reload;
        end else if (((icmp_ln124_reg_3000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            this_pe_b_pass_2_0_read_assign_fu_330 <= pe_array_pe_b_pass_2_0_fu_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_1_read_assign_fu_334 <= pe_array_pe_b_pass_2_1_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_1_read_assign_fu_334 <= pe_array_pe_b_pass_2_1_fu_430;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_2_read_assign_fu_338 <= pe_array_pe_b_pass_2_2_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_2_read_assign_fu_338 <= pe_array_pe_b_pass_2_2_fu_434;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_pe_b_pass_2_3_read_assign_fu_342 <= pe_array_pe_b_pass_2_3_3_reload;
        end else if (((icmp_ln124_reg_3000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            this_pe_b_pass_2_3_read_assign_fu_342 <= pe_array_pe_b_pass_2_3_fu_438;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_0_0_read_assign_fu_346 <= pe_array_pe_val_0_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_0_0_read_assign_fu_346 <= pe_array_pe_val_0_0_fu_2360_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_0_1_read_assign_fu_350 <= pe_array_pe_val_0_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_0_1_read_assign_fu_350 <= pe_array_pe_val_0_1_fu_2365_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_0_2_read_assign_fu_354 <= pe_array_pe_val_0_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_0_2_read_assign_fu_354 <= pe_array_pe_val_0_2_fu_2370_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_0_3_read_assign_fu_358 <= pe_array_pe_val_0_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_0_3_read_assign_fu_358 <= pe_array_pe_val_0_3_fu_2375_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_1_0_read_assign_fu_362 <= pe_array_pe_val_1_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            this_pe_val_1_0_read_assign_fu_362 <= pe_array_pe_val_1_0_fu_2499_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_1_1_read_assign_fu_366 <= pe_array_pe_val_1_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_1_1_read_assign_fu_366 <= pe_array_pe_val_1_1_fu_2380_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_1_2_read_assign_fu_370 <= pe_array_pe_val_1_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_1_2_read_assign_fu_370 <= pe_array_pe_val_1_2_fu_2385_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_1_3_read_assign_fu_374 <= pe_array_pe_val_1_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_1_3_read_assign_fu_374 <= pe_array_pe_val_1_3_fu_2390_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_2_0_read_assign_fu_378 <= pe_array_pe_val_2_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            this_pe_val_2_0_read_assign_fu_378 <= pe_array_pe_val_2_0_fu_2504_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_2_1_read_assign_fu_382 <= pe_array_pe_val_2_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_2_1_read_assign_fu_382 <= pe_array_pe_val_2_1_fu_2395_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_2_2_read_assign_fu_386 <= pe_array_pe_val_2_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_2_2_read_assign_fu_386 <= pe_array_pe_val_2_2_fu_2400_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_2_3_read_assign_fu_390 <= pe_array_pe_val_2_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_2_3_read_assign_fu_390 <= pe_array_pe_val_2_3_fu_2405_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_3_0_read_assign_fu_394 <= pe_array_pe_val_3_0_3_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            this_pe_val_3_0_read_assign_fu_394 <= pe_array_pe_val_3_0_fu_2509_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_3_1_read_assign_fu_398 <= pe_array_pe_val_3_1_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_3_1_read_assign_fu_398 <= pe_array_pe_val_3_1_fu_2410_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_3_2_read_assign_fu_402 <= pe_array_pe_val_3_2_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_3_2_read_assign_fu_402 <= pe_array_pe_val_3_2_fu_2415_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_pe_val_3_3_read_assign_fu_406 <= pe_array_pe_val_3_3_3_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            this_pe_val_3_3_read_assign_fu_406 <= pe_array_pe_val_3_3_fu_2420_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln135_1_reg_3081 <= and_ln135_1_fu_1554_p2;
        and_ln135_2_reg_3107 <= and_ln135_2_fu_1704_p2;
        and_ln135_reg_3020 <= and_ln135_fu_1368_p2;
        and_ln136_1_reg_3065 <= and_ln136_1_fu_1428_p2;
        and_ln136_2_reg_3070 <= and_ln136_2_fu_1440_p2;
        and_ln136_3_reg_3086 <= and_ln136_3_fu_1566_p2;
        and_ln136_4_reg_3091 <= and_ln136_4_fu_1578_p2;
        and_ln136_5_reg_3096 <= and_ln136_5_fu_1590_p2;
        and_ln136_6_reg_3112 <= and_ln136_6_fu_1722_p2;
        and_ln136_7_reg_3117 <= and_ln136_7_fu_1728_p2;
        and_ln136_8_reg_3122 <= and_ln136_8_fu_1740_p2;
        and_ln136_reg_3060 <= and_ln136_fu_1416_p2;
        b_vec_1_reg_3075 <= b_vec_1_fu_1470_p3;
        b_vec_2_reg_3101 <= b_vec_2_fu_1620_p3;
        b_vec_3_reg_3127 <= b_vec_3_fu_1770_p3;
        icmp_ln135_1_reg_3025 <= icmp_ln135_1_fu_1374_p2;
        icmp_ln135_2_reg_3032 <= icmp_ln135_2_fu_1380_p2;
        icmp_ln135_3_reg_3039 <= icmp_ln135_3_fu_1386_p2;
        icmp_ln135_4_reg_3046 <= icmp_ln135_4_fu_1392_p2;
        icmp_ln135_9_reg_3053 <= icmp_ln135_9_fu_1398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_2991 <= ap_sig_allocacmp_i_1;
        icmp_ln124_reg_3000 <= icmp_ln124_fu_1230_p2;
        icmp_ln124_reg_3000_pp0_iter1_reg <= icmp_ln124_reg_3000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln124_reg_3000_pp0_iter2_reg <= icmp_ln124_reg_3000_pp0_iter1_reg;
        icmp_ln124_reg_3000_pp0_iter3_reg <= icmp_ln124_reg_3000_pp0_iter2_reg;
        mul_ln21_10_reg_3308 <= grp_fu_2150_p2;
        mul_ln21_11_reg_3313 <= grp_fu_2156_p2;
        mul_ln21_12_reg_3343 <= grp_fu_2301_p2;
        mul_ln21_13_reg_3318 <= grp_fu_2162_p2;
        mul_ln21_14_reg_3323 <= grp_fu_2168_p2;
        mul_ln21_15_reg_3328 <= grp_fu_2174_p2;
        mul_ln21_1_reg_3273 <= grp_fu_2111_p2;
        mul_ln21_2_reg_3278 <= grp_fu_2116_p2;
        mul_ln21_3_reg_3283 <= grp_fu_2121_p2;
        mul_ln21_4_reg_3333 <= grp_fu_2291_p2;
        mul_ln21_5_reg_3288 <= grp_fu_2126_p2;
        mul_ln21_6_reg_3293 <= grp_fu_2132_p2;
        mul_ln21_7_reg_3298 <= grp_fu_2138_p2;
        mul_ln21_8_reg_3338 <= grp_fu_2296_p2;
        mul_ln21_9_reg_3303 <= grp_fu_2144_p2;
        mul_ln21_reg_3268 <= grp_fu_2105_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_vec_0_reg_1004 <= ap_phi_reg_pp0_iter1_b_vec_0_reg_1004;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pe_array_pe_a_pass_1_0_reg_3238 <= pe_array_pe_a_pass_1_0_fu_1944_p3;
        pe_array_pe_a_pass_2_0_reg_3243 <= pe_array_pe_a_pass_2_0_fu_2034_p3;
        pe_array_pe_a_pass_3_0_reg_3248 <= pe_array_pe_a_pass_3_0_fu_2098_p3;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_1230_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln124_reg_3000_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_278;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_0_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_0_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_0_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_0_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_0_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_1_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_1_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_1_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_1_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_1_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_2_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_2_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_2_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_2_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_2_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_3_0_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_0_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_3_1_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_1_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_3_2_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_2_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln124_reg_3000_pp0_iter3_reg == 1'd1))) begin
        this_pe_val_3_3_read_assign_out_ap_vld = 1'b1;
    end else begin
        this_pe_val_3_3_read_assign_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M1_15_10_fu_1956_p3 = ((icmp_ln135_1_reg_3025[0:0] == 1'b1) ? M1_8_1_reload : M1_15_9_fu_1951_p3);

assign M1_15_11_fu_1962_p3 = ((icmp_ln135_2_reg_3032[0:0] == 1'b1) ? M1_9_1_reload : M1_15_10_fu_1956_p3);

assign M1_15_12_fu_1968_p3 = ((icmp_ln135_3_reg_3039[0:0] == 1'b1) ? M1_10_1_reload : M1_15_11_fu_1962_p3);

assign M1_15_13_fu_1974_p3 = ((icmp_ln135_4_reg_3046[0:0] == 1'b1) ? M1_11_1_reload : M1_15_12_fu_1968_p3);

assign M1_15_14_fu_1980_p3 = ((icmp_ln135_5_fu_1869_p2[0:0] == 1'b1) ? M1_12_1_reload : M1_15_13_fu_1974_p3);

assign M1_15_15_fu_1987_p3 = ((icmp_ln135_6_fu_1881_p2[0:0] == 1'b1) ? M1_13_1_reload : M1_15_14_fu_1980_p3);

assign M1_15_16_fu_1994_p3 = ((icmp_ln135_7_fu_1893_p2[0:0] == 1'b1) ? M1_14_1_reload : M1_15_15_fu_1987_p3);

assign M1_15_18_fu_2041_p3 = ((icmp_ln135_9_reg_3053[0:0] == 1'b1) ? M1_10_1_reload : M1_15_1_reload);

assign M1_15_19_fu_2046_p3 = ((icmp_ln135_1_reg_3025[0:0] == 1'b1) ? M1_11_1_reload : M1_15_18_fu_2041_p3);

assign M1_15_1_fu_1851_p3 = ((icmp_ln135_2_reg_3032[0:0] == 1'b1) ? M1_6_1_reload : M1_15_fu_1846_p3);

assign M1_15_20_fu_2052_p3 = ((icmp_ln135_2_reg_3032[0:0] == 1'b1) ? M1_12_1_reload : M1_15_19_fu_2046_p3);

assign M1_15_21_fu_2058_p3 = ((icmp_ln135_3_reg_3039[0:0] == 1'b1) ? M1_13_1_reload : M1_15_20_fu_2052_p3);

assign M1_15_22_fu_2064_p3 = ((icmp_ln135_4_reg_3046[0:0] == 1'b1) ? M1_14_1_reload : M1_15_21_fu_2058_p3);

assign M1_15_24_fu_1917_p3 = ((icmp_ln135_9_reg_3053[0:0] == 1'b1) ? M1_4_1_reload : M1_15_7_fu_1910_p3);

assign M1_15_25_fu_2006_p3 = ((icmp_ln135_10_fu_2001_p2[0:0] == 1'b1) ? M1_6_1_reload : M1_15_16_fu_1994_p3);

assign M1_15_26_fu_2070_p3 = ((icmp_ln135_10_fu_2001_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_22_fu_2064_p3);

assign M1_15_2_fu_1857_p3 = ((icmp_ln135_3_reg_3039[0:0] == 1'b1) ? M1_7_1_reload : M1_15_1_fu_1851_p3);

assign M1_15_3_fu_1863_p3 = ((icmp_ln135_4_reg_3046[0:0] == 1'b1) ? M1_8_1_reload : M1_15_2_fu_1857_p3);

assign M1_15_4_fu_1874_p3 = ((icmp_ln135_5_fu_1869_p2[0:0] == 1'b1) ? M1_9_1_reload : M1_15_3_fu_1863_p3);

assign M1_15_5_fu_1886_p3 = ((icmp_ln135_6_fu_1881_p2[0:0] == 1'b1) ? M1_10_1_reload : M1_15_4_fu_1874_p3);

assign M1_15_6_fu_1898_p3 = ((icmp_ln135_7_fu_1893_p2[0:0] == 1'b1) ? M1_11_1_reload : M1_15_5_fu_1886_p3);

assign M1_15_7_fu_1910_p3 = ((icmp_ln135_8_fu_1905_p2[0:0] == 1'b1) ? M1_12_1_reload : M1_15_6_fu_1898_p3);

assign M1_15_9_fu_1951_p3 = ((icmp_ln135_9_reg_3053[0:0] == 1'b1) ? M1_7_1_reload : M1_15_1_reload);

assign M1_15_fu_1846_p3 = ((icmp_ln135_1_reg_3025[0:0] == 1'b1) ? M1_5_1_reload : M1_13_1_reload);

assign add_ln124_fu_1236_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln130_1_fu_1484_p2 = (zext_ln124_fu_1242_p1 + 5'd6);

assign add_ln130_2_fu_1628_p2 = ($signed(ap_sig_allocacmp_i_1) + $signed(4'd13));

assign add_ln130_3_fu_1634_p2 = (zext_ln124_fu_1242_p1 + 5'd9);

assign add_ln130_fu_1478_p2 = ($signed(zext_ln124_fu_1242_p1) + $signed(5'd30));

assign add_ln131_1_fu_1334_p2 = ($signed(trunc_ln131_1_fu_1320_p3) + $signed(4'd12));

assign add_ln131_fu_1328_p2 = ($signed(zext_ln134_fu_1258_p1) + $signed(7'd124));

assign add_ln136_fu_1710_p2 = (trunc_ln131_fu_1246_p1 + 2'd1);

assign and_ln135_1_fu_1554_p2 = (xor_ln134_fu_1512_p2 & and_ln135_3_fu_1548_p2);

assign and_ln135_2_fu_1704_p2 = (xor_ln134_1_fu_1662_p2 & and_ln135_4_fu_1698_p2);

assign and_ln135_3_fu_1548_p2 = (xor_ln135_fu_1542_p2 & icmp_ln134_2_fu_1528_p2);

assign and_ln135_4_fu_1698_p2 = (xor_ln135_1_fu_1692_p2 & icmp_ln134_3_fu_1678_p2);

assign and_ln135_fu_1368_p2 = (icmp_ln135_fu_1362_p2 & icmp_ln134_1_fu_1356_p2);

assign and_ln136_1_fu_1428_p2 = (icmp_ln136_1_fu_1422_p2 & and_ln135_fu_1368_p2);

assign and_ln136_2_fu_1440_p2 = (icmp_ln136_2_fu_1434_p2 & and_ln135_fu_1368_p2);

assign and_ln136_3_fu_1566_p2 = (icmp_ln136_3_fu_1560_p2 & and_ln135_1_fu_1554_p2);

assign and_ln136_4_fu_1578_p2 = (icmp_ln136_4_fu_1572_p2 & and_ln135_1_fu_1554_p2);

assign and_ln136_5_fu_1590_p2 = (icmp_ln136_5_fu_1584_p2 & and_ln135_1_fu_1554_p2);

assign and_ln136_6_fu_1722_p2 = (icmp_ln136_6_fu_1716_p2 & and_ln135_2_fu_1704_p2);

assign and_ln136_7_fu_1728_p2 = (icmp_ln136_3_fu_1560_p2 & and_ln135_2_fu_1704_p2);

assign and_ln136_8_fu_1740_p2 = (icmp_ln136_7_fu_1734_p2 & and_ln135_2_fu_1704_p2);

assign and_ln136_fu_1416_p2 = (icmp_ln136_fu_1410_p2 & and_ln135_fu_1368_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_535 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_538 = ((icmp_ln124_fu_1230_p2 == 1'd0) & (trunc_ln136_fu_1316_p1 == 2'd3) & (icmp_ln134_fu_1272_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_545 = ((icmp_ln124_fu_1230_p2 == 1'd0) & (trunc_ln136_fu_1316_p1 == 2'd2) & (icmp_ln134_fu_1272_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_550 = ((icmp_ln124_fu_1230_p2 == 1'd0) & (trunc_ln136_fu_1316_p1 == 2'd0) & (icmp_ln134_fu_1272_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_555 = ((icmp_ln124_fu_1230_p2 == 1'd0) & (trunc_ln136_fu_1316_p1 == 2'd1) & (icmp_ln134_fu_1272_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_b_vec_0_reg_1004 = 'bx;

assign ap_phi_reg_pp0_iter0_opa_reg_986 = 'bx;

assign b_vec_1_fu_1470_p3 = ((and_ln136_2_fu_1440_p2[0:0] == 1'b1) ? M2_1_1_reload : select_ln136_4_fu_1462_p3);

assign b_vec_2_fu_1620_p3 = ((and_ln136_5_fu_1590_p2[0:0] == 1'b1) ? M2_2_1_reload : select_ln136_10_fu_1612_p3);

assign b_vec_3_fu_1770_p3 = ((and_ln136_8_fu_1740_p2[0:0] == 1'b1) ? M2_3_1_reload : select_ln136_16_fu_1762_p3);

assign icmp_ln124_fu_1230_p2 = ((ap_sig_allocacmp_i_1 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln134_1_fu_1356_p2 = (($signed(tmp_1_fu_1346_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln134_2_fu_1528_p2 = (($signed(tmp_3_fu_1518_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln134_3_fu_1678_p2 = ((tmp_6_fu_1668_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_1272_p2 = ((tmp_fu_1262_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_10_fu_2001_p2 = ((i_1_reg_2991 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_1_fu_1374_p2 = ((ap_sig_allocacmp_i_1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln135_2_fu_1380_p2 = ((ap_sig_allocacmp_i_1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln135_3_fu_1386_p2 = ((ap_sig_allocacmp_i_1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln135_4_fu_1392_p2 = ((ap_sig_allocacmp_i_1 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln135_5_fu_1869_p2 = ((i_1_reg_2991 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln135_6_fu_1881_p2 = ((i_1_reg_2991 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln135_7_fu_1893_p2 = ((i_1_reg_2991 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln135_8_fu_1905_p2 = ((i_1_reg_2991 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln135_9_fu_1398_p2 = ((ap_sig_allocacmp_i_1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_1362_p2 = ((ap_sig_allocacmp_i_1 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_1_fu_1422_p2 = ((or_ln136_fu_1404_p2 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln136_2_fu_1434_p2 = ((or_ln136_fu_1404_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln136_3_fu_1560_p2 = ((trunc_ln131_fu_1246_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_4_fu_1572_p2 = ((trunc_ln131_fu_1246_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln136_5_fu_1584_p2 = ((trunc_ln131_fu_1246_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln136_6_fu_1716_p2 = ((add_ln136_fu_1710_p2 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln136_7_fu_1734_p2 = ((add_ln136_fu_1710_p2 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_1410_p2 = ((or_ln136_fu_1404_p2 == 4'd9) ? 1'b1 : 1'b0);

assign or_ln131_1_fu_1498_p2 = (shl_ln131_1_fu_1490_p3 | 7'd2);

assign or_ln131_2_fu_1648_p2 = (shl_ln131_2_fu_1640_p3 | 6'd3);

assign or_ln131_fu_1340_p2 = (7'd1 | add_ln131_fu_1328_p2);

assign or_ln136_fu_1404_p2 = (4'd1 | add_ln131_1_fu_1334_p2);

assign pe_array_pe_a_pass_1_0_fu_1944_p3 = ((and_ln136_2_reg_3070[0:0] == 1'b1) ? M1_15_24_fu_1917_p3 : select_ln136_1_fu_1937_p3);

assign pe_array_pe_a_pass_2_0_fu_2034_p3 = ((and_ln136_5_reg_3096[0:0] == 1'b1) ? M1_15_25_fu_2006_p3 : select_ln136_7_fu_2027_p3);

assign pe_array_pe_a_pass_3_0_fu_2098_p3 = ((and_ln136_8_reg_3122[0:0] == 1'b1) ? M1_15_26_fu_2070_p3 : select_ln136_13_fu_2091_p3);

assign pe_array_pe_val_0_0_fu_2360_p2 = (mul_ln21_reg_3268 + this_pe_val_0_0_read_assign_fu_346);

assign pe_array_pe_val_0_1_fu_2365_p2 = (mul_ln21_1_reg_3273 + this_pe_val_0_1_read_assign_fu_350);

assign pe_array_pe_val_0_2_fu_2370_p2 = (mul_ln21_2_reg_3278 + this_pe_val_0_2_read_assign_fu_354);

assign pe_array_pe_val_0_3_fu_2375_p2 = (mul_ln21_3_reg_3283 + this_pe_val_0_3_read_assign_fu_358);

assign pe_array_pe_val_1_0_fu_2499_p2 = (mul_ln21_4_reg_3333 + this_pe_val_1_0_read_assign_fu_362);

assign pe_array_pe_val_1_1_fu_2380_p2 = (mul_ln21_5_reg_3288 + this_pe_val_1_1_read_assign_fu_366);

assign pe_array_pe_val_1_2_fu_2385_p2 = (mul_ln21_6_reg_3293 + this_pe_val_1_2_read_assign_fu_370);

assign pe_array_pe_val_1_3_fu_2390_p2 = (mul_ln21_7_reg_3298 + this_pe_val_1_3_read_assign_fu_374);

assign pe_array_pe_val_2_0_fu_2504_p2 = (mul_ln21_8_reg_3338 + this_pe_val_2_0_read_assign_fu_378);

assign pe_array_pe_val_2_1_fu_2395_p2 = (mul_ln21_9_reg_3303 + this_pe_val_2_1_read_assign_fu_382);

assign pe_array_pe_val_2_2_fu_2400_p2 = (mul_ln21_10_reg_3308 + this_pe_val_2_2_read_assign_fu_386);

assign pe_array_pe_val_2_3_fu_2405_p2 = (mul_ln21_11_reg_3313 + this_pe_val_2_3_read_assign_fu_390);

assign pe_array_pe_val_3_0_fu_2509_p2 = (mul_ln21_12_reg_3343 + this_pe_val_3_0_read_assign_fu_394);

assign pe_array_pe_val_3_1_fu_2410_p2 = (mul_ln21_13_reg_3318 + this_pe_val_3_1_read_assign_fu_398);

assign pe_array_pe_val_3_2_fu_2415_p2 = (mul_ln21_14_reg_3323 + this_pe_val_3_2_read_assign_fu_402);

assign pe_array_pe_val_3_3_fu_2420_p2 = (mul_ln21_15_reg_3328 + this_pe_val_3_3_read_assign_fu_406);

assign select_ln135_11_fu_2013_p3 = ((and_ln135_1_reg_3081[0:0] == 1'b1) ? M1_15_25_fu_2006_p3 : 32'd0);

assign select_ln135_12_fu_1596_p3 = ((and_ln135_1_fu_1554_p2[0:0] == 1'b1) ? M2_14_1_reload : 32'd0);

assign select_ln135_19_fu_2077_p3 = ((and_ln135_2_reg_3107[0:0] == 1'b1) ? M1_15_26_fu_2070_p3 : 32'd0);

assign select_ln135_1_fu_1446_p3 = ((and_ln135_fu_1368_p2[0:0] == 1'b1) ? M2_13_1_reload : 32'd0);

assign select_ln135_20_fu_1746_p3 = ((and_ln135_2_fu_1704_p2[0:0] == 1'b1) ? M2_15_1_reload : 32'd0);

assign select_ln135_fu_1923_p3 = ((and_ln135_reg_3020[0:0] == 1'b1) ? M1_15_24_fu_1917_p3 : 32'd0);

assign select_ln136_10_fu_1612_p3 = ((and_ln136_4_fu_1578_p2[0:0] == 1'b1) ? M2_6_1_reload : select_ln136_9_fu_1604_p3);

assign select_ln136_12_fu_2084_p3 = ((and_ln136_6_reg_3112[0:0] == 1'b1) ? M1_15_26_fu_2070_p3 : select_ln135_19_fu_2077_p3);

assign select_ln136_13_fu_2091_p3 = ((and_ln136_7_reg_3117[0:0] == 1'b1) ? M1_15_26_fu_2070_p3 : select_ln136_12_fu_2084_p3);

assign select_ln136_15_fu_1754_p3 = ((and_ln136_6_fu_1722_p2[0:0] == 1'b1) ? M2_11_1_reload : select_ln135_20_fu_1746_p3);

assign select_ln136_16_fu_1762_p3 = ((and_ln136_7_fu_1728_p2[0:0] == 1'b1) ? M2_7_1_reload : select_ln136_15_fu_1754_p3);

assign select_ln136_1_fu_1937_p3 = ((and_ln136_1_reg_3065[0:0] == 1'b1) ? M1_15_24_fu_1917_p3 : select_ln136_fu_1930_p3);

assign select_ln136_3_fu_1454_p3 = ((and_ln136_fu_1416_p2[0:0] == 1'b1) ? M2_9_1_reload : select_ln135_1_fu_1446_p3);

assign select_ln136_4_fu_1462_p3 = ((and_ln136_1_fu_1428_p2[0:0] == 1'b1) ? M2_5_1_reload : select_ln136_3_fu_1454_p3);

assign select_ln136_6_fu_2020_p3 = ((and_ln136_3_reg_3086[0:0] == 1'b1) ? M1_15_25_fu_2006_p3 : select_ln135_11_fu_2013_p3);

assign select_ln136_7_fu_2027_p3 = ((and_ln136_4_reg_3091[0:0] == 1'b1) ? M1_15_25_fu_2006_p3 : select_ln136_6_fu_2020_p3);

assign select_ln136_9_fu_1604_p3 = ((and_ln136_3_fu_1566_p2[0:0] == 1'b1) ? M2_10_1_reload : select_ln135_12_fu_1596_p3);

assign select_ln136_fu_1930_p3 = ((and_ln136_reg_3060[0:0] == 1'b1) ? M1_15_24_fu_1917_p3 : select_ln135_fu_1923_p3);

assign shl_ln131_1_fu_1490_p3 = {{add_ln130_fu_1478_p2}, {2'd0}};

assign shl_ln131_2_fu_1640_p3 = {{add_ln130_2_fu_1628_p2}, {2'd0}};

assign shl_ln_fu_1250_p3 = {{ap_sig_allocacmp_i_1}, {2'd0}};

assign this_pe_val_0_0_read_assign_out = this_pe_val_0_0_read_assign_fu_346;

assign this_pe_val_0_1_read_assign_out = this_pe_val_0_1_read_assign_fu_350;

assign this_pe_val_0_2_read_assign_out = this_pe_val_0_2_read_assign_fu_354;

assign this_pe_val_0_3_read_assign_out = this_pe_val_0_3_read_assign_fu_358;

assign this_pe_val_1_0_read_assign_out = this_pe_val_1_0_read_assign_fu_362;

assign this_pe_val_1_1_read_assign_out = this_pe_val_1_1_read_assign_fu_366;

assign this_pe_val_1_2_read_assign_out = this_pe_val_1_2_read_assign_fu_370;

assign this_pe_val_1_3_read_assign_out = this_pe_val_1_3_read_assign_fu_374;

assign this_pe_val_2_0_read_assign_out = this_pe_val_2_0_read_assign_fu_378;

assign this_pe_val_2_1_read_assign_out = this_pe_val_2_1_read_assign_fu_382;

assign this_pe_val_2_2_read_assign_out = this_pe_val_2_2_read_assign_fu_386;

assign this_pe_val_2_3_read_assign_out = this_pe_val_2_3_read_assign_fu_390;

assign this_pe_val_3_0_read_assign_out = this_pe_val_3_0_read_assign_fu_394;

assign this_pe_val_3_1_read_assign_out = this_pe_val_3_1_read_assign_fu_398;

assign this_pe_val_3_2_read_assign_out = this_pe_val_3_2_read_assign_fu_402;

assign this_pe_val_3_3_read_assign_out = this_pe_val_3_3_read_assign_fu_406;

assign tmp_1_fu_1346_p4 = {{or_ln131_fu_1340_p2[6:4]}};

assign tmp_2_fu_1504_p3 = add_ln130_1_fu_1484_p2[32'd4];

assign tmp_3_fu_1518_p4 = {{or_ln131_1_fu_1498_p2[6:4]}};

assign tmp_4_fu_1534_p3 = add_ln130_fu_1478_p2[32'd4];

assign tmp_5_fu_1654_p3 = add_ln130_3_fu_1634_p2[32'd4];

assign tmp_6_fu_1668_p4 = {{or_ln131_2_fu_1648_p2[5:4]}};

assign tmp_7_fu_1684_p3 = add_ln130_2_fu_1628_p2[32'd3];

assign tmp_fu_1262_p4 = {{ap_sig_allocacmp_i_1[3:2]}};

assign trunc_ln131_1_fu_1320_p3 = {{trunc_ln131_fu_1246_p1}, {2'd0}};

assign trunc_ln131_fu_1246_p1 = ap_sig_allocacmp_i_1[1:0];

assign trunc_ln136_fu_1316_p1 = ap_sig_allocacmp_i_1[1:0];

assign xor_ln134_1_fu_1662_p2 = (tmp_5_fu_1654_p3 ^ 1'd1);

assign xor_ln134_fu_1512_p2 = (tmp_2_fu_1504_p3 ^ 1'd1);

assign xor_ln135_1_fu_1692_p2 = (tmp_7_fu_1684_p3 ^ 1'd1);

assign xor_ln135_fu_1542_p2 = (tmp_4_fu_1534_p3 ^ 1'd1);

assign zext_ln124_fu_1242_p1 = ap_sig_allocacmp_i_1;

assign zext_ln134_fu_1258_p1 = shl_ln_fu_1250_p3;

endmodule //systolic_array_systolic_array_Pipeline_top_outer_loop1
