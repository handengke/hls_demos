-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity systolic_array_systolic_array_Pipeline_top_inner_loop1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    b_vec_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_vec_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_vec_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_vec_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_vec_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_vec_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_vec_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_vec_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    din_a : IN STD_LOGIC_VECTOR (63 downto 0);
    din_b : IN STD_LOGIC_VECTOR (63 downto 0);
    zext_ln107 : IN STD_LOGIC_VECTOR (3 downto 0);
    b_vec_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_vec_3_1_out_ap_vld : OUT STD_LOGIC;
    b_vec_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_vec_2_1_out_ap_vld : OUT STD_LOGIC;
    b_vec_3_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_vec_3_3_out_ap_vld : OUT STD_LOGIC;
    b_vec_3_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_vec_3_7_out_ap_vld : OUT STD_LOGIC;
    a_vec_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_vec_3_1_out_ap_vld : OUT STD_LOGIC;
    a_vec_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_vec_2_1_out_ap_vld : OUT STD_LOGIC;
    a_vec_3_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_vec_3_3_out_ap_vld : OUT STD_LOGIC;
    a_vec_3_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_vec_3_8_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of systolic_array_systolic_array_Pipeline_top_inner_loop1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal icmp_ln109_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op78_readreq_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal icmp_ln109_reg_1080_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_reg_1096_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1100_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op146_read_state10 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln109_reg_1080_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_reg_1096_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1100_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op86_readreq_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_predicate_op97_read_state9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln109_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1080_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1080_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln112_fu_418_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln112_reg_1084 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln112_reg_1084_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln112_reg_1084_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln112_reg_1084_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln112_reg_1084_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln113_fu_458_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln113_reg_1091 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln116_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_reg_1096_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_reg_1096_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1100_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1100_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_reg_1104 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1110 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal a_vec_3_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln117_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_1124 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_1_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_1_reg_1130 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_2_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_2_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln121_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln121_reg_1141 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_1_read_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_b_vec_3_10_phi_fu_308_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_b_vec_3_10_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_b_vec_3_10_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_b_vec_3_10_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_b_vec_3_10_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_b_vec_3_10_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_b_vec_3_10_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln117_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln118_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_122 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln109_fu_404_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_vec_3_2_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_339_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_9_fu_796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_3_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_12_fu_703_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_8_fu_788_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_7_fu_863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_4_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_10_fu_687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_6_fu_773_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_5_fu_847_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_8_fu_671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_fu_758_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_3_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_2_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_9_fu_933_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_6_fu_655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_3_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_8_fu_926_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_5_fu_647_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_4_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_6_fu_912_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_3_fu_631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_1_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_fu_898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_1_fu_615_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln_fu_422_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln107_cast_fu_346_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_cast200_fu_414_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln112_fu_434_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln112_fu_430_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln112_fu_440_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1_fu_450_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_cast202_fu_410_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln112_fu_444_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_464_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_480_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln116_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_1_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln117_fu_510_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln117_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln117_fu_520_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_526_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln118_fu_551_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln118_fu_556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln118_fu_560_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln4_fu_565_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln121_fu_607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_2_fu_623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_4_fu_639_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_7_fu_663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_9_fu_679_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln121_11_fu_695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_fu_751_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_2_fu_766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_3_7_fu_781_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_1_fu_823_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_4_fu_839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln117_6_fu_855_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_fu_891_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_2_fu_905_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_7_fu_919_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter4_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to5 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_375 : BOOLEAN;
    signal ap_condition_373 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component systolic_array_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component systolic_array_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    a_vec_3_1_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                a_vec_3_1_fu_138 <= a_vec_3_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_1_fu_138 <= select_ln117_3_fu_831_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_1_fu_138 <= a_vec_3_fu_758_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_1_fu_138 <= select_ln121_8_fu_671_p3;
            end if; 
        end if;
    end process;

    a_vec_3_2_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                a_vec_3_2_fu_126 <= a_vec_0_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_2_fu_126 <= a_vec_3_9_fu_796_p3;
            elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg)))) then 
                a_vec_3_2_fu_126 <= grp_fu_339_p3;
            end if; 
        end if;
    end process;

    a_vec_3_3_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                a_vec_3_3_fu_130 <= a_vec_1_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_3_fu_130 <= select_ln117_7_fu_863_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_3_fu_130 <= a_vec_3_8_fu_788_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_3_fu_130 <= select_ln121_12_fu_703_p3;
            end if; 
        end if;
    end process;

    a_vec_3_4_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                a_vec_3_4_fu_134 <= a_vec_2_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_4_fu_134 <= select_ln117_5_fu_847_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_4_fu_134 <= a_vec_3_6_fu_773_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                a_vec_3_4_fu_134 <= select_ln121_10_fu_687_p3;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter5_b_vec_3_10_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_373)) then
                if ((ap_const_boolean_1 = ap_condition_375)) then 
                    ap_phi_reg_pp0_iter5_b_vec_3_10_reg_304 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_b_vec_3_10_reg_304 <= ap_phi_reg_pp0_iter4_b_vec_3_10_reg_304;
                end if;
            end if; 
        end if;
    end process;

    b_vec_3_1_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                b_vec_3_1_fu_154 <= b_vec_3_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_1_fu_154 <= select_ln121_1_fu_615_p3;
            elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_1_fu_154 <= b_vec_3_fu_898_p3;
            end if; 
        end if;
    end process;

    b_vec_3_2_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                b_vec_3_2_fu_142 <= b_vec_0_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_2_fu_142 <= select_ln121_6_fu_655_p3;
            elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_2_fu_142 <= b_vec_3_9_fu_933_p3;
            end if; 
        end if;
    end process;

    b_vec_3_3_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                b_vec_3_3_fu_146 <= b_vec_1_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_3_fu_146 <= select_ln121_5_fu_647_p3;
            elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_3_fu_146 <= b_vec_3_8_fu_926_p3;
            end if; 
        end if;
    end process;

    b_vec_3_4_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                b_vec_3_4_fu_150 <= b_vec_2_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_0 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_4_fu_150 <= select_ln121_3_fu_631_p3;
            elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
                b_vec_3_4_fu_150 <= b_vec_3_6_fu_912_p3;
            end if; 
        end if;
    end process;

    j_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln109_fu_398_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_122 <= add_ln109_fu_404_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_122 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op97_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                a_vec_3_10_reg_1116 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln113_reg_1091 <= add_ln113_fu_458_p2;
                and_ln116_reg_1096 <= and_ln116_fu_496_p2;
                trunc_ln112_reg_1084 <= trunc_ln112_fu_418_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln116_reg_1096_pp0_iter1_reg <= and_ln116_reg_1096;
                and_ln116_reg_1096_pp0_iter2_reg <= and_ln116_reg_1096_pp0_iter1_reg;
                and_ln116_reg_1096_pp0_iter3_reg <= and_ln116_reg_1096_pp0_iter2_reg;
                and_ln116_reg_1096_pp0_iter4_reg <= and_ln116_reg_1096_pp0_iter3_reg;
                icmp_ln109_reg_1080 <= icmp_ln109_fu_398_p2;
                icmp_ln109_reg_1080_pp0_iter1_reg <= icmp_ln109_reg_1080;
                icmp_ln109_reg_1080_pp0_iter2_reg <= icmp_ln109_reg_1080_pp0_iter1_reg;
                icmp_ln109_reg_1080_pp0_iter3_reg <= icmp_ln109_reg_1080_pp0_iter2_reg;
                icmp_ln109_reg_1080_pp0_iter4_reg <= icmp_ln109_reg_1080_pp0_iter3_reg;
                tmp_2_reg_1100_pp0_iter1_reg <= tmp_2_reg_1100;
                tmp_2_reg_1100_pp0_iter2_reg <= tmp_2_reg_1100_pp0_iter1_reg;
                tmp_2_reg_1100_pp0_iter3_reg <= tmp_2_reg_1100_pp0_iter2_reg;
                tmp_2_reg_1100_pp0_iter4_reg <= tmp_2_reg_1100_pp0_iter3_reg;
                trunc_ln112_reg_1084_pp0_iter1_reg <= trunc_ln112_reg_1084;
                trunc_ln112_reg_1084_pp0_iter2_reg <= trunc_ln112_reg_1084_pp0_iter1_reg;
                trunc_ln112_reg_1084_pp0_iter3_reg <= trunc_ln112_reg_1084_pp0_iter2_reg;
                trunc_ln112_reg_1084_pp0_iter4_reg <= trunc_ln112_reg_1084_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter1_b_vec_3_10_reg_304 <= ap_phi_reg_pp0_iter0_b_vec_3_10_reg_304;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter2_b_vec_3_10_reg_304 <= ap_phi_reg_pp0_iter1_b_vec_3_10_reg_304;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter3_b_vec_3_10_reg_304 <= ap_phi_reg_pp0_iter2_b_vec_3_10_reg_304;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter4_b_vec_3_10_reg_304 <= ap_phi_reg_pp0_iter3_b_vec_3_10_reg_304;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op146_read_state10 = ap_const_boolean_1))) then
                gmem_addr_1_read_reg_1147 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_2_reg_1100 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096) and (icmp_ln109_reg_1080 = ap_const_lv1_0))) then
                gmem_addr_1_reg_1110 <= sext_ln118_fu_575_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_502_p3 = ap_const_lv1_0) and (icmp_ln109_fu_398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln116_fu_496_p2))) then
                gmem_addr_reg_1104 <= sext_ln117_fu_536_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0))) then
                icmp_ln117_1_reg_1130 <= icmp_ln117_1_fu_590_p2;
                icmp_ln117_2_reg_1135 <= icmp_ln117_2_fu_595_p2;
                icmp_ln117_reg_1124 <= icmp_ln117_fu_585_p2;
                or_ln121_reg_1141 <= or_ln121_fu_601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln116_fu_496_p2))) then
                tmp_2_reg_1100 <= sub_ln112_fu_434_p2(4 downto 4);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter4_stage0, ap_idle_pp0_0to3, ap_idle_pp0_1to5, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to5 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    a_vec_2_1_out <= a_vec_3_4_fu_134;

    a_vec_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            a_vec_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            a_vec_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    a_vec_3_1_out <= a_vec_3_1_fu_138;

    a_vec_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            a_vec_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            a_vec_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    a_vec_3_3_out <= a_vec_3_3_fu_130;

    a_vec_3_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            a_vec_3_3_out_ap_vld <= ap_const_logic_1;
        else 
            a_vec_3_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    a_vec_3_6_fu_773_p3 <= 
        a_vec_3_4_fu_134 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln117_2_fu_766_p3;
    a_vec_3_7_fu_781_p3 <= 
        a_vec_3_10_reg_1116 when (icmp_ln117_1_fu_590_p2(0) = '1') else 
        a_vec_3_3_fu_130;
    a_vec_3_8_fu_788_p3 <= 
        a_vec_3_3_fu_130 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        a_vec_3_7_fu_781_p3;
    a_vec_3_8_out <= a_vec_3_2_fu_126;

    a_vec_3_8_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            a_vec_3_8_out_ap_vld <= ap_const_logic_1;
        else 
            a_vec_3_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    a_vec_3_9_fu_796_p3 <= 
        a_vec_3_10_reg_1116 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        a_vec_3_2_fu_126;
    a_vec_3_fu_758_p3 <= 
        a_vec_3_1_fu_138 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln117_fu_751_p3;
    add_ln109_fu_404_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv3_1));
    add_ln112_fu_444_p2 <= std_logic_vector(unsigned(zext_ln112_fu_430_p1) + unsigned(sext_ln112_fu_440_p1));
    add_ln113_fu_458_p2 <= std_logic_vector(unsigned(shl_ln1_fu_450_p3) + unsigned(j_cast202_fu_410_p1));
    add_ln117_fu_520_p2 <= std_logic_vector(unsigned(zext_ln117_fu_516_p1) + unsigned(din_a));
    add_ln118_fu_560_p2 <= std_logic_vector(unsigned(zext_ln118_fu_556_p1) + unsigned(din_b));
    and_ln116_fu_496_p2 <= (icmp_ln116_fu_474_p2 and icmp_ln116_1_fu_490_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem_RVALID, ap_predicate_op97_read_state9)
    begin
                ap_block_pp0_stage0_01001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op97_read_state9 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, m_axi_gmem_RVALID, ap_block_state3_io, ap_predicate_op97_read_state9)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op97_read_state9 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, m_axi_gmem_RVALID, ap_block_state3_io, ap_predicate_op97_read_state9)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op97_read_state9 = ap_const_boolean_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, m_axi_gmem_RVALID, ap_block_state2_io, ap_predicate_op146_read_state10)
    begin
                ap_block_pp0_stage1_11001 <= (((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op146_read_state10 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, m_axi_gmem_RVALID, ap_block_state2_io, ap_predicate_op146_read_state10)
    begin
                ap_block_pp0_stage1_subdone <= (((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op146_read_state10 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_state10_pp0_stage1_iter4_assign_proc : process(m_axi_gmem_RVALID, ap_predicate_op146_read_state10)
    begin
                ap_block_state10_pp0_stage1_iter4 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_predicate_op146_read_state10 = ap_const_boolean_1));
    end process;

        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_gmem_ARREADY, ap_predicate_op78_readreq_state2)
    begin
                ap_block_state2_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (ap_predicate_op78_readreq_state2 = ap_const_boolean_1));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, ap_predicate_op86_readreq_state3)
    begin
                ap_block_state3_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (ap_predicate_op86_readreq_state3 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter4_assign_proc : process(m_axi_gmem_RVALID, ap_predicate_op97_read_state9)
    begin
                ap_block_state9_pp0_stage0_iter4 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_predicate_op97_read_state9 = ap_const_boolean_1));
    end process;


    ap_condition_373_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_373 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_375_assign_proc : process(icmp_ln109_reg_1080_pp0_iter4_reg, and_ln116_reg_1096_pp0_iter4_reg, tmp_2_reg_1100_pp0_iter4_reg)
    begin
                ap_condition_375 <= ((tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln109_reg_1080, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln109_reg_1080 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter4_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter4_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to5_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to5 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_phi_mux_b_vec_3_10_phi_fu_308_p4_assign_proc : process(icmp_ln109_reg_1080_pp0_iter4_reg, and_ln116_reg_1096_pp0_iter4_reg, tmp_2_reg_1100_pp0_iter4_reg, gmem_addr_1_read_reg_1147, ap_phi_reg_pp0_iter5_b_vec_3_10_reg_304)
    begin
        if (((tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg))) then 
            ap_phi_mux_b_vec_3_10_phi_fu_308_p4 <= gmem_addr_1_read_reg_1147;
        else 
            ap_phi_mux_b_vec_3_10_phi_fu_308_p4 <= ap_phi_reg_pp0_iter5_b_vec_3_10_reg_304;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_b_vec_3_10_reg_304 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op146_read_state10_assign_proc : process(icmp_ln109_reg_1080_pp0_iter4_reg, and_ln116_reg_1096_pp0_iter4_reg, tmp_2_reg_1100_pp0_iter4_reg)
    begin
                ap_predicate_op146_read_state10 <= ((tmp_2_reg_1100_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter4_reg));
    end process;


    ap_predicate_op78_readreq_state2_assign_proc : process(icmp_ln109_reg_1080, and_ln116_reg_1096, tmp_2_reg_1100)
    begin
                ap_predicate_op78_readreq_state2 <= ((tmp_2_reg_1100 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096) and (icmp_ln109_reg_1080 = ap_const_lv1_0));
    end process;


    ap_predicate_op86_readreq_state3_assign_proc : process(icmp_ln109_reg_1080, and_ln116_reg_1096, tmp_2_reg_1100)
    begin
                ap_predicate_op86_readreq_state3 <= ((tmp_2_reg_1100 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096) and (icmp_ln109_reg_1080 = ap_const_lv1_0));
    end process;


    ap_predicate_op97_read_state9_assign_proc : process(icmp_ln109_reg_1080_pp0_iter3_reg, and_ln116_reg_1096_pp0_iter3_reg, tmp_2_reg_1100_pp0_iter3_reg)
    begin
                ap_predicate_op97_read_state9 <= ((tmp_2_reg_1100_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter3_reg));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_122, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_122;
        end if; 
    end process;

    b_vec_2_1_out <= b_vec_3_4_fu_150;

    b_vec_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_vec_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            b_vec_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    b_vec_3_1_out <= b_vec_3_1_fu_154;

    b_vec_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_vec_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            b_vec_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    b_vec_3_3_out <= b_vec_3_3_fu_146;

    b_vec_3_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_vec_3_3_out_ap_vld <= ap_const_logic_1;
        else 
            b_vec_3_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    b_vec_3_6_fu_912_p3 <= 
        b_vec_3_4_fu_150 when (or_ln121_reg_1141(0) = '1') else 
        select_ln118_2_fu_905_p3;
    b_vec_3_7_fu_919_p3 <= 
        ap_phi_mux_b_vec_3_10_phi_fu_308_p4 when (icmp_ln117_1_reg_1130(0) = '1') else 
        b_vec_3_3_fu_146;
    b_vec_3_7_out <= b_vec_3_2_fu_142;

    b_vec_3_7_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            b_vec_3_7_out_ap_vld <= ap_const_logic_1;
        else 
            b_vec_3_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    b_vec_3_8_fu_926_p3 <= 
        b_vec_3_3_fu_146 when (icmp_ln117_2_reg_1135(0) = '1') else 
        b_vec_3_7_fu_919_p3;
    b_vec_3_9_fu_933_p3 <= 
        ap_phi_mux_b_vec_3_10_phi_fu_308_p4 when (icmp_ln117_2_reg_1135(0) = '1') else 
        b_vec_3_2_fu_142;
    b_vec_3_fu_898_p3 <= 
        b_vec_3_1_fu_154 when (or_ln121_reg_1141(0) = '1') else 
        select_ln118_fu_891_p3;

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, m_axi_gmem_ARREADY, icmp_ln109_reg_1080, and_ln116_reg_1096, tmp_2_reg_1100, ap_predicate_op78_readreq_state2, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_2_reg_1100 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln116_reg_1096) and (icmp_ln109_reg_1080 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_predicate_op78_readreq_state2 = ap_const_boolean_1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, m_axi_gmem_RVALID, ap_predicate_op146_read_state10, ap_block_pp0_stage1, ap_block_pp0_stage0, icmp_ln109_reg_1080_pp0_iter3_reg, and_ln116_reg_1096_pp0_iter3_reg, tmp_2_reg_1100_pp0_iter3_reg)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_predicate_op146_read_state10 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_2_reg_1100_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln109_reg_1080_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln116_reg_1096_pp0_iter3_reg)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_339_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        a_vec_3_2_fu_126;
    icmp_ln109_fu_398_p2 <= "1" when (ap_sig_allocacmp_j_1 = ap_const_lv3_4) else "0";
    icmp_ln116_1_fu_490_p2 <= "1" when (signed(tmp_1_fu_480_p4) < signed(ap_const_lv3_1)) else "0";
    icmp_ln116_fu_474_p2 <= "0" when (tmp_fu_464_p4 = ap_const_lv2_1) else "1";
    icmp_ln117_1_fu_590_p2 <= "1" when (trunc_ln112_reg_1084_pp0_iter4_reg = ap_const_lv2_1) else "0";
    icmp_ln117_2_fu_595_p2 <= "1" when (trunc_ln112_reg_1084_pp0_iter4_reg = ap_const_lv2_0) else "0";
    icmp_ln117_fu_585_p2 <= "1" when (trunc_ln112_reg_1084_pp0_iter4_reg = ap_const_lv2_2) else "0";
    j_cast200_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),5));
    j_cast202_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),7));

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_predicate_op78_readreq_state2, ap_predicate_op86_readreq_state3, ap_block_pp0_stage0_11001, gmem_addr_reg_1104, gmem_addr_1_reg_1110, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op86_readreq_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_ARADDR <= gmem_addr_1_reg_1110;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op78_readreq_state2 = ap_const_boolean_1))) then 
            m_axi_gmem_ARADDR <= gmem_addr_reg_1104;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_predicate_op78_readreq_state2, ap_predicate_op86_readreq_state3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op86_readreq_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op78_readreq_state2 = ap_const_boolean_1)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_predicate_op146_read_state10, ap_predicate_op97_read_state9, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op146_read_state10 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_predicate_op97_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    or_ln121_fu_601_p2 <= (icmp_ln117_2_fu_595_p2 or icmp_ln117_1_fu_590_p2);
    select_ln117_1_fu_823_p3 <= 
        a_vec_3_1_fu_138 when (icmp_ln117_fu_585_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln117_2_fu_766_p3 <= 
        a_vec_3_10_reg_1116 when (icmp_ln117_fu_585_p2(0) = '1') else 
        a_vec_3_4_fu_134;
    select_ln117_3_fu_831_p3 <= 
        a_vec_3_1_fu_138 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln117_1_fu_823_p3;
    select_ln117_4_fu_839_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_fu_585_p2(0) = '1') else 
        a_vec_3_4_fu_134;
    select_ln117_5_fu_847_p3 <= 
        a_vec_3_4_fu_134 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln117_4_fu_839_p3;
    select_ln117_6_fu_855_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_1_fu_590_p2(0) = '1') else 
        a_vec_3_3_fu_130;
    select_ln117_7_fu_863_p3 <= 
        a_vec_3_3_fu_130 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        select_ln117_6_fu_855_p3;
    select_ln117_fu_751_p3 <= 
        a_vec_3_1_fu_138 when (icmp_ln117_fu_585_p2(0) = '1') else 
        a_vec_3_10_reg_1116;
    select_ln118_2_fu_905_p3 <= 
        ap_phi_mux_b_vec_3_10_phi_fu_308_p4 when (icmp_ln117_reg_1124(0) = '1') else 
        b_vec_3_4_fu_150;
    select_ln118_fu_891_p3 <= 
        b_vec_3_1_fu_154 when (icmp_ln117_reg_1124(0) = '1') else 
        ap_phi_mux_b_vec_3_10_phi_fu_308_p4;
    select_ln121_10_fu_687_p3 <= 
        a_vec_3_4_fu_134 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln121_9_fu_679_p3;
    select_ln121_11_fu_695_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_1_fu_590_p2(0) = '1') else 
        a_vec_3_3_fu_130;
    select_ln121_12_fu_703_p3 <= 
        a_vec_3_3_fu_130 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        select_ln121_11_fu_695_p3;
    select_ln121_1_fu_615_p3 <= 
        b_vec_3_1_fu_154 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln121_fu_607_p3;
    select_ln121_2_fu_623_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_fu_585_p2(0) = '1') else 
        b_vec_3_4_fu_150;
    select_ln121_3_fu_631_p3 <= 
        b_vec_3_4_fu_150 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln121_2_fu_623_p3;
    select_ln121_4_fu_639_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_1_fu_590_p2(0) = '1') else 
        b_vec_3_3_fu_146;
    select_ln121_5_fu_647_p3 <= 
        b_vec_3_3_fu_146 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        select_ln121_4_fu_639_p3;
    select_ln121_6_fu_655_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_2_fu_595_p2(0) = '1') else 
        b_vec_3_2_fu_142;
    select_ln121_7_fu_663_p3 <= 
        a_vec_3_1_fu_138 when (icmp_ln117_fu_585_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln121_8_fu_671_p3 <= 
        a_vec_3_1_fu_138 when (or_ln121_fu_601_p2(0) = '1') else 
        select_ln121_7_fu_663_p3;
    select_ln121_9_fu_679_p3 <= 
        ap_const_lv32_0 when (icmp_ln117_fu_585_p2(0) = '1') else 
        a_vec_3_4_fu_134;
    select_ln121_fu_607_p3 <= 
        b_vec_3_1_fu_154 when (icmp_ln117_fu_585_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln112_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln112_fu_434_p2),6));

        sext_ln117_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_526_p4),64));

        sext_ln118_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_565_p4),64));

    shl_ln117_fu_510_p2 <= std_logic_vector(shift_left(unsigned(add_ln112_fu_444_p2),to_integer(unsigned('0' & ap_const_lv6_2(6-1 downto 0)))));
    shl_ln118_fu_551_p2 <= std_logic_vector(shift_left(unsigned(add_ln113_reg_1091),to_integer(unsigned('0' & ap_const_lv7_2(7-1 downto 0)))));
    shl_ln1_fu_450_p3 <= (sub_ln112_fu_434_p2 & ap_const_lv2_0);
    shl_ln_fu_422_p3 <= (trunc_ln112_fu_418_p1 & ap_const_lv2_0);
    sub_ln112_fu_434_p2 <= std_logic_vector(unsigned(zext_ln107_cast_fu_346_p1) - unsigned(j_cast200_fu_414_p1));
    tmp_1_fu_480_p4 <= add_ln113_fu_458_p2(6 downto 4);
    tmp_2_fu_502_p3 <= sub_ln112_fu_434_p2(4 downto 4);
    tmp_fu_464_p4 <= add_ln112_fu_444_p2(5 downto 4);
    trunc_ln112_fu_418_p1 <= ap_sig_allocacmp_j_1(2 - 1 downto 0);
    trunc_ln3_fu_526_p4 <= add_ln117_fu_520_p2(63 downto 2);
    trunc_ln4_fu_565_p4 <= add_ln118_fu_560_p2(63 downto 2);
    zext_ln107_cast_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln107),5));
    zext_ln112_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_422_p3),6));
    zext_ln117_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln117_fu_510_p2),64));
    zext_ln118_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln118_fu_551_p2),64));
end behav;
