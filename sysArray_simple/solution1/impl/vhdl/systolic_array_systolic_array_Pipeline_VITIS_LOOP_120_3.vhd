-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity systolic_array_systolic_array_Pipeline_VITIS_LOOP_120_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pe_array_pe_val_3_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_3_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_3_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_3_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_2_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_2_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_2_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_2_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_1_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_1_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_1_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_1_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_0_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_0_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_0_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_0_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_2_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_2_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_2_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_2_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_1_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_1_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_1_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_1_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_0_3_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_0_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_0_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_0_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_3_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_3_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_3_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_2_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_2_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_2_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_1_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_1_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_1_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_0_2_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_0_1_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_0_0_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_12_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_8_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_4_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_0_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_5_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_13_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_6_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_7_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_8_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_9_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_10_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_11_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_12_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_4_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_13_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_9_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_5_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_1_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_15_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_14_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_14_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_10_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_6_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_2_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_15_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_11_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_7_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M2_3_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_1_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_2_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_3_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    M1_0_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_3_3_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_3_3_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_3_2_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_3_2_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_3_1_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_3_1_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_3_0_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_3_0_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_2_3_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_2_3_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_2_2_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_2_2_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_2_1_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_2_1_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_2_0_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_2_0_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_1_3_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_1_3_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_1_2_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_1_2_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_1_1_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_1_1_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_1_0_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_1_0_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_0_3_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_0_3_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_0_2_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_0_2_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_0_1_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_0_1_read_assign_out_ap_vld : OUT STD_LOGIC;
    this_pe_val_0_0_read_assign_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_pe_val_0_0_read_assign_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of systolic_array_systolic_array_Pipeline_VITIS_LOOP_120_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln120_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_phi_mux_opa_phi_fu_989_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_vec_0_fu_1298_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_opa_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln130_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln132_fu_1324_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_b_vec_0_phi_fu_1005_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_b_vec_0_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_278 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln120_fu_1256_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal pe_array_pe_a_pass_0_1_fu_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_a_pass_0_2_read_assign_fu_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_1_1_fu_290 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_1_0_fu_1660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_a_pass_1_2_read_assign_fu_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_2_1_fu_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_2_0_fu_1906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_a_pass_2_2_read_assign_fu_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_3_1_fu_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_3_0_fu_2125_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_a_pass_3_2_read_assign_fu_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_1_0_fu_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_1_1_fu_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_1_fu_1689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_1_2_fu_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_2_fu_1935_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_1_3_fu_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_vec_3_fu_2154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_b_pass_2_0_read_assign_fu_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_b_pass_2_1_read_assign_fu_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_b_pass_2_2_read_assign_fu_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_b_pass_2_3_read_assign_fu_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_0_0_read_assign_fu_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_0_0_fu_2167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_0_1_read_assign_fu_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_0_1_fu_2179_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_0_2_read_assign_fu_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_0_2_fu_2191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_0_3_read_assign_fu_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_0_3_fu_2203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_1_0_read_assign_fu_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_1_0_fu_2215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_1_1_read_assign_fu_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_1_1_fu_2227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_1_2_read_assign_fu_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_1_2_fu_2239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_1_3_read_assign_fu_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_1_3_fu_2251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_2_0_read_assign_fu_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_2_0_fu_2263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_2_1_read_assign_fu_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_2_1_fu_2275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_2_2_read_assign_fu_386 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_2_2_fu_2287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_2_3_read_assign_fu_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_2_3_fu_2299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_3_0_read_assign_fu_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_3_0_fu_2311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_3_1_read_assign_fu_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_3_1_fu_2323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_3_2_read_assign_fu_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_3_2_fu_2335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_pe_val_3_3_read_assign_fu_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_val_3_3_fu_2347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_0_2_fu_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_1_2_fu_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_2_2_fu_418 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_a_pass_3_2_fu_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_2_0_fu_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_2_1_fu_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_2_2_fu_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_array_pe_b_pass_2_3_fu_438 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln_fu_1270_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1282_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln127_fu_1266_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln130_fu_1278_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln127_1_fu_1424_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln127_fu_1432_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln127_fu_1444_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_1450_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln130_1_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_fu_1466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_1_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_2_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_fu_1484_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_3_fu_1503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_1_fu_1496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_4_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_2_fu_1509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_5_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_3_fu_1522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_6_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_4_fu_1535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_7_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_5_fu_1548_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_8_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_6_fu_1561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_9_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_7_fu_1574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln127_1_fu_1438_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln131_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_24_fu_1587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln132_fu_1594_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln132_fu_1608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_fu_1600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln132_1_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_1_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln132_fu_1620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln132_2_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_2_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln132_1_fu_1640_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln131_1_fu_1668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln132_3_fu_1675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln132_4_fu_1682_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln126_cast_fu_1262_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln126_fu_1696_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln127_1_fu_1708_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln126_1_fu_1702_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_1722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln127_1_fu_1716_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_1736_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_2_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln131_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln131_3_fu_1766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln130_fu_1730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_9_fu_1778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_10_fu_1784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_11_fu_1791_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_12_fu_1798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_13_fu_1805_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_14_fu_1812_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_15_fu_1819_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln131_10_fu_1833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_16_fu_1826_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln131_1_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_25_fu_1839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln132_3_fu_1854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_3_fu_1860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_11_fu_1846_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln132_4_fu_1874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_4_fu_1880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln132_6_fu_1866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln132_5_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_5_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln132_7_fu_1886_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln131_12_fu_1914_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln132_9_fu_1921_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln132_10_fu_1928_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln126_2_fu_1942_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln127_2_fu_1954_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln126_3_fu_1948_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_1968_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln127_2_fu_1962_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_1982_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_1998_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln131_1_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln131_4_fu_2012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln130_1_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_18_fu_2024_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_19_fu_2030_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_20_fu_2037_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_21_fu_2044_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal M1_15_22_fu_2051_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln131_2_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M1_15_26_fu_2058_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln132_fu_2065_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln132_6_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_6_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_19_fu_2071_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln132_7_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln132_12_fu_2091_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln132_7_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_8_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln132_13_fu_2105_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln131_20_fu_2133_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln132_15_fu_2140_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln132_16_fu_2147_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_fu_2161_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_1_fu_2173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_1_fu_2173_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_2_fu_2185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_2_fu_2185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_3_fu_2197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_3_fu_2197_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_4_fu_2209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_4_fu_2209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_5_fu_2221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_6_fu_2233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_7_fu_2245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_8_fu_2257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_8_fu_2257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_9_fu_2269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_10_fu_2281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_11_fu_2293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_12_fu_2305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_12_fu_2305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_13_fu_2317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_14_fu_2329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln21_15_fu_2341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component systolic_array_mux_164_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component systolic_array_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component systolic_array_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_32_1_1_U221 : component systolic_array_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => M1_0_1_reload,
        din1 => M1_1_1_reload,
        din2 => M1_2_1_reload,
        din3 => M1_3_1_reload,
        din4 => M1_4_1_reload,
        din5 => M1_5_1_reload,
        din6 => M1_6_1_reload,
        din7 => M1_7_1_reload,
        din8 => M1_8_1_reload,
        din9 => M1_9_1_reload,
        din10 => M1_10_1_reload,
        din11 => M1_10_1_reload,
        din12 => M1_10_1_reload,
        din13 => M1_10_1_reload,
        din14 => M1_10_1_reload,
        din15 => M1_10_1_reload,
        din16 => i_fu_278,
        dout => a_vec_0_fu_1298_p18);

    mul_32s_32s_32_1_1_U222 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => ap_phi_mux_b_vec_0_phi_fu_1005_p10,
        din1 => ap_phi_mux_opa_phi_fu_989_p10,
        dout => mul_ln21_fu_2161_p2);

    mul_32s_32s_32_1_1_U223 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_a_pass_0_1_fu_282,
        din1 => mul_ln21_1_fu_2173_p1,
        dout => mul_ln21_1_fu_2173_p2);

    mul_32s_32s_32_1_1_U224 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_a_pass_0_2_fu_410,
        din1 => mul_ln21_2_fu_2185_p1,
        dout => mul_ln21_2_fu_2185_p2);

    mul_32s_32s_32_1_1_U225 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => this_pe_a_pass_0_2_read_assign_fu_286,
        din1 => mul_ln21_3_fu_2197_p1,
        dout => mul_ln21_3_fu_2197_p2);

    mul_32s_32s_32_1_1_U226 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_1_0_fu_314,
        din1 => mul_ln21_4_fu_2209_p1,
        dout => mul_ln21_4_fu_2209_p2);

    mul_32s_32s_32_1_1_U227 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_1_1_fu_318,
        din1 => pe_array_pe_a_pass_1_1_fu_290,
        dout => mul_ln21_5_fu_2221_p2);

    mul_32s_32s_32_1_1_U228 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_1_2_fu_322,
        din1 => pe_array_pe_a_pass_1_2_fu_414,
        dout => mul_ln21_6_fu_2233_p2);

    mul_32s_32s_32_1_1_U229 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_1_3_fu_326,
        din1 => this_pe_a_pass_1_2_read_assign_fu_294,
        dout => mul_ln21_7_fu_2245_p2);

    mul_32s_32s_32_1_1_U230 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_2_0_fu_426,
        din1 => mul_ln21_8_fu_2257_p1,
        dout => mul_ln21_8_fu_2257_p2);

    mul_32s_32s_32_1_1_U231 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_2_1_fu_430,
        din1 => pe_array_pe_a_pass_2_1_fu_298,
        dout => mul_ln21_9_fu_2269_p2);

    mul_32s_32s_32_1_1_U232 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_2_2_fu_434,
        din1 => pe_array_pe_a_pass_2_2_fu_418,
        dout => mul_ln21_10_fu_2281_p2);

    mul_32s_32s_32_1_1_U233 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => pe_array_pe_b_pass_2_3_fu_438,
        din1 => this_pe_a_pass_2_2_read_assign_fu_302,
        dout => mul_ln21_11_fu_2293_p2);

    mul_32s_32s_32_1_1_U234 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => this_pe_b_pass_2_0_read_assign_fu_330,
        din1 => mul_ln21_12_fu_2305_p1,
        dout => mul_ln21_12_fu_2305_p2);

    mul_32s_32s_32_1_1_U235 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => this_pe_b_pass_2_1_read_assign_fu_334,
        din1 => pe_array_pe_a_pass_3_1_fu_306,
        dout => mul_ln21_13_fu_2317_p2);

    mul_32s_32s_32_1_1_U236 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => this_pe_b_pass_2_2_read_assign_fu_338,
        din1 => pe_array_pe_a_pass_3_2_fu_422,
        dout => mul_ln21_14_fu_2329_p2);

    mul_32s_32s_32_1_1_U237 : component systolic_array_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => this_pe_b_pass_2_3_read_assign_fu_342,
        din1 => this_pe_a_pass_3_2_read_assign_fu_310,
        dout => mul_ln21_15_fu_2341_p2);

    flow_control_loop_pipe_sequential_init_U : component systolic_array_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_278 <= ap_const_lv4_0;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_278 <= add_ln120_fu_1256_p2;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_0_1_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_0_1_fu_282 <= pe_array_pe_a_pass_0_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_0_1_fu_282 <= ap_phi_mux_opa_phi_fu_989_p10;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_0_2_fu_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_0_2_fu_410 <= pe_array_pe_a_pass_0_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_0_2_fu_410 <= pe_array_pe_a_pass_0_1_fu_282;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_1_1_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_1_1_fu_290 <= pe_array_pe_a_pass_1_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_1_1_fu_290 <= pe_array_pe_a_pass_1_0_fu_1660_p3;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_1_2_fu_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_1_2_fu_414 <= pe_array_pe_a_pass_1_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_1_2_fu_414 <= pe_array_pe_a_pass_1_1_fu_290;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_2_1_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_2_1_fu_298 <= pe_array_pe_a_pass_2_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_2_1_fu_298 <= pe_array_pe_a_pass_2_0_fu_1906_p3;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_2_2_fu_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_2_2_fu_418 <= pe_array_pe_a_pass_2_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_2_2_fu_418 <= pe_array_pe_a_pass_2_1_fu_298;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_3_1_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_3_1_fu_306 <= pe_array_pe_a_pass_3_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_3_1_fu_306 <= pe_array_pe_a_pass_3_0_fu_2125_p3;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_a_pass_3_2_fu_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_a_pass_3_2_fu_422 <= pe_array_pe_a_pass_3_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_a_pass_3_2_fu_422 <= pe_array_pe_a_pass_3_1_fu_306;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_1_0_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_1_0_fu_314 <= pe_array_pe_b_pass_0_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_1_0_fu_314 <= ap_phi_mux_b_vec_0_phi_fu_1005_p10;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_1_1_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_1_1_fu_318 <= pe_array_pe_b_pass_0_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_1_1_fu_318 <= b_vec_1_fu_1689_p3;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_1_2_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_1_2_fu_322 <= pe_array_pe_b_pass_0_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_1_2_fu_322 <= b_vec_2_fu_1935_p3;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_1_3_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_1_3_fu_326 <= pe_array_pe_b_pass_0_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_1_3_fu_326 <= b_vec_3_fu_2154_p3;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_2_0_fu_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_2_0_fu_426 <= pe_array_pe_b_pass_1_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_2_0_fu_426 <= pe_array_pe_b_pass_1_0_fu_314;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_2_1_fu_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_2_1_fu_430 <= pe_array_pe_b_pass_1_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_2_1_fu_430 <= pe_array_pe_b_pass_1_1_fu_318;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_2_2_fu_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_2_2_fu_434 <= pe_array_pe_b_pass_1_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_2_2_fu_434 <= pe_array_pe_b_pass_1_2_fu_322;
                end if;
            end if; 
        end if;
    end process;

    pe_array_pe_b_pass_2_3_fu_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pe_array_pe_b_pass_2_3_fu_438 <= pe_array_pe_b_pass_1_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pe_array_pe_b_pass_2_3_fu_438 <= pe_array_pe_b_pass_1_3_fu_326;
                end if;
            end if; 
        end if;
    end process;

    this_pe_a_pass_0_2_read_assign_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_a_pass_0_2_read_assign_fu_286 <= pe_array_pe_a_pass_0_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_a_pass_0_2_read_assign_fu_286 <= pe_array_pe_a_pass_0_2_fu_410;
                end if;
            end if; 
        end if;
    end process;

    this_pe_a_pass_1_2_read_assign_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_a_pass_1_2_read_assign_fu_294 <= pe_array_pe_a_pass_1_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_a_pass_1_2_read_assign_fu_294 <= pe_array_pe_a_pass_1_2_fu_414;
                end if;
            end if; 
        end if;
    end process;

    this_pe_a_pass_2_2_read_assign_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_a_pass_2_2_read_assign_fu_302 <= pe_array_pe_a_pass_2_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_a_pass_2_2_read_assign_fu_302 <= pe_array_pe_a_pass_2_2_fu_418;
                end if;
            end if; 
        end if;
    end process;

    this_pe_a_pass_3_2_read_assign_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_a_pass_3_2_read_assign_fu_310 <= pe_array_pe_a_pass_3_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_a_pass_3_2_read_assign_fu_310 <= pe_array_pe_a_pass_3_2_fu_422;
                end if;
            end if; 
        end if;
    end process;

    this_pe_b_pass_2_0_read_assign_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_b_pass_2_0_read_assign_fu_330 <= pe_array_pe_b_pass_2_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_b_pass_2_0_read_assign_fu_330 <= pe_array_pe_b_pass_2_0_fu_426;
                end if;
            end if; 
        end if;
    end process;

    this_pe_b_pass_2_1_read_assign_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_b_pass_2_1_read_assign_fu_334 <= pe_array_pe_b_pass_2_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_b_pass_2_1_read_assign_fu_334 <= pe_array_pe_b_pass_2_1_fu_430;
                end if;
            end if; 
        end if;
    end process;

    this_pe_b_pass_2_2_read_assign_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_b_pass_2_2_read_assign_fu_338 <= pe_array_pe_b_pass_2_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_b_pass_2_2_read_assign_fu_338 <= pe_array_pe_b_pass_2_2_fu_434;
                end if;
            end if; 
        end if;
    end process;

    this_pe_b_pass_2_3_read_assign_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_b_pass_2_3_read_assign_fu_342 <= pe_array_pe_b_pass_2_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_b_pass_2_3_read_assign_fu_342 <= pe_array_pe_b_pass_2_3_fu_438;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_0_0_read_assign_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_0_0_read_assign_fu_346 <= pe_array_pe_val_0_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_0_0_read_assign_fu_346 <= pe_array_pe_val_0_0_fu_2167_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_0_1_read_assign_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_0_1_read_assign_fu_350 <= pe_array_pe_val_0_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_0_1_read_assign_fu_350 <= pe_array_pe_val_0_1_fu_2179_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_0_2_read_assign_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_0_2_read_assign_fu_354 <= pe_array_pe_val_0_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_0_2_read_assign_fu_354 <= pe_array_pe_val_0_2_fu_2191_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_0_3_read_assign_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_0_3_read_assign_fu_358 <= pe_array_pe_val_0_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_0_3_read_assign_fu_358 <= pe_array_pe_val_0_3_fu_2203_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_1_0_read_assign_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_1_0_read_assign_fu_362 <= pe_array_pe_val_1_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_1_0_read_assign_fu_362 <= pe_array_pe_val_1_0_fu_2215_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_1_1_read_assign_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_1_1_read_assign_fu_366 <= pe_array_pe_val_1_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_1_1_read_assign_fu_366 <= pe_array_pe_val_1_1_fu_2227_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_1_2_read_assign_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_1_2_read_assign_fu_370 <= pe_array_pe_val_1_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_1_2_read_assign_fu_370 <= pe_array_pe_val_1_2_fu_2239_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_1_3_read_assign_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_1_3_read_assign_fu_374 <= pe_array_pe_val_1_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_1_3_read_assign_fu_374 <= pe_array_pe_val_1_3_fu_2251_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_2_0_read_assign_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_2_0_read_assign_fu_378 <= pe_array_pe_val_2_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_2_0_read_assign_fu_378 <= pe_array_pe_val_2_0_fu_2263_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_2_1_read_assign_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_2_1_read_assign_fu_382 <= pe_array_pe_val_2_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_2_1_read_assign_fu_382 <= pe_array_pe_val_2_1_fu_2275_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_2_2_read_assign_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_2_2_read_assign_fu_386 <= pe_array_pe_val_2_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_2_2_read_assign_fu_386 <= pe_array_pe_val_2_2_fu_2287_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_2_3_read_assign_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_2_3_read_assign_fu_390 <= pe_array_pe_val_2_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_2_3_read_assign_fu_390 <= pe_array_pe_val_2_3_fu_2299_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_3_0_read_assign_fu_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_3_0_read_assign_fu_394 <= pe_array_pe_val_3_0_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_3_0_read_assign_fu_394 <= pe_array_pe_val_3_0_fu_2311_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_3_1_read_assign_fu_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_3_1_read_assign_fu_398 <= pe_array_pe_val_3_1_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_3_1_read_assign_fu_398 <= pe_array_pe_val_3_1_fu_2323_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_3_2_read_assign_fu_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_3_2_read_assign_fu_402 <= pe_array_pe_val_3_2_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_3_2_read_assign_fu_402 <= pe_array_pe_val_3_2_fu_2335_p2;
                end if;
            end if; 
        end if;
    end process;

    this_pe_val_3_3_read_assign_fu_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_pe_val_3_3_read_assign_fu_406 <= pe_array_pe_val_3_3_3_reload;
                elsif (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    this_pe_val_3_3_read_assign_fu_406 <= pe_array_pe_val_3_3_fu_2347_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    M1_15_10_fu_1784_p3 <= 
        M1_8_1_reload when (icmp_ln131_1_fu_1478_p2(0) = '1') else 
        M1_15_9_fu_1778_p3;
    M1_15_11_fu_1791_p3 <= 
        M1_9_1_reload when (icmp_ln131_2_fu_1490_p2(0) = '1') else 
        M1_15_10_fu_1784_p3;
    M1_15_12_fu_1798_p3 <= 
        M1_10_1_reload when (icmp_ln131_3_fu_1503_p2(0) = '1') else 
        M1_15_11_fu_1791_p3;
    M1_15_13_fu_1805_p3 <= 
        M1_11_1_reload when (icmp_ln131_4_fu_1516_p2(0) = '1') else 
        M1_15_12_fu_1798_p3;
    M1_15_14_fu_1812_p3 <= 
        M1_12_1_reload when (icmp_ln131_5_fu_1529_p2(0) = '1') else 
        M1_15_13_fu_1805_p3;
    M1_15_15_fu_1819_p3 <= 
        M1_13_1_reload when (icmp_ln131_6_fu_1542_p2(0) = '1') else 
        M1_15_14_fu_1812_p3;
    M1_15_16_fu_1826_p3 <= 
        M1_14_1_reload when (icmp_ln131_7_fu_1555_p2(0) = '1') else 
        M1_15_15_fu_1819_p3;
    M1_15_18_fu_2024_p3 <= 
        M1_10_1_reload when (icmp_ln131_9_fu_1581_p2(0) = '1') else 
        M1_15_1_reload;
    M1_15_19_fu_2030_p3 <= 
        M1_11_1_reload when (icmp_ln131_1_fu_1478_p2(0) = '1') else 
        M1_15_18_fu_2024_p3;
    M1_15_1_fu_1496_p3 <= 
        M1_6_1_reload when (icmp_ln131_2_fu_1490_p2(0) = '1') else 
        M1_15_fu_1484_p3;
    M1_15_20_fu_2037_p3 <= 
        M1_12_1_reload when (icmp_ln131_2_fu_1490_p2(0) = '1') else 
        M1_15_19_fu_2030_p3;
    M1_15_21_fu_2044_p3 <= 
        M1_13_1_reload when (icmp_ln131_3_fu_1503_p2(0) = '1') else 
        M1_15_20_fu_2037_p3;
    M1_15_22_fu_2051_p3 <= 
        M1_14_1_reload when (icmp_ln131_4_fu_1516_p2(0) = '1') else 
        M1_15_21_fu_2044_p3;
    M1_15_24_fu_1587_p3 <= 
        M1_4_1_reload when (icmp_ln131_9_fu_1581_p2(0) = '1') else 
        M1_15_7_fu_1574_p3;
    M1_15_25_fu_1839_p3 <= 
        M1_6_1_reload when (icmp_ln131_10_fu_1833_p2(0) = '1') else 
        M1_15_16_fu_1826_p3;
    M1_15_26_fu_2058_p3 <= 
        M1_9_1_reload when (icmp_ln131_10_fu_1833_p2(0) = '1') else 
        M1_15_22_fu_2051_p3;
    M1_15_2_fu_1509_p3 <= 
        M1_7_1_reload when (icmp_ln131_3_fu_1503_p2(0) = '1') else 
        M1_15_1_fu_1496_p3;
    M1_15_3_fu_1522_p3 <= 
        M1_8_1_reload when (icmp_ln131_4_fu_1516_p2(0) = '1') else 
        M1_15_2_fu_1509_p3;
    M1_15_4_fu_1535_p3 <= 
        M1_9_1_reload when (icmp_ln131_5_fu_1529_p2(0) = '1') else 
        M1_15_3_fu_1522_p3;
    M1_15_5_fu_1548_p3 <= 
        M1_10_1_reload when (icmp_ln131_6_fu_1542_p2(0) = '1') else 
        M1_15_4_fu_1535_p3;
    M1_15_6_fu_1561_p3 <= 
        M1_11_1_reload when (icmp_ln131_7_fu_1555_p2(0) = '1') else 
        M1_15_5_fu_1548_p3;
    M1_15_7_fu_1574_p3 <= 
        M1_12_1_reload when (icmp_ln131_8_fu_1568_p2(0) = '1') else 
        M1_15_6_fu_1561_p3;
    M1_15_9_fu_1778_p3 <= 
        M1_7_1_reload when (icmp_ln131_9_fu_1581_p2(0) = '1') else 
        M1_15_1_reload;
    M1_15_fu_1484_p3 <= 
        M1_5_1_reload when (icmp_ln131_1_fu_1478_p2(0) = '1') else 
        M1_13_1_reload;
    add_ln120_fu_1256_p2 <= std_logic_vector(unsigned(i_fu_278) + unsigned(ap_const_lv4_1));
    add_ln126_1_fu_1702_p2 <= std_logic_vector(unsigned(trunc_ln126_cast_fu_1262_p1) + unsigned(ap_const_lv5_6));
    add_ln126_2_fu_1942_p2 <= std_logic_vector(unsigned(i_fu_278) + unsigned(ap_const_lv4_D));
    add_ln126_3_fu_1948_p2 <= std_logic_vector(unsigned(trunc_ln126_cast_fu_1262_p1) + unsigned(ap_const_lv5_9));
    add_ln126_fu_1696_p2 <= std_logic_vector(unsigned(trunc_ln126_cast_fu_1262_p1) + unsigned(ap_const_lv5_1E));
    add_ln127_1_fu_1438_p2 <= std_logic_vector(unsigned(trunc_ln127_1_fu_1424_p3) + unsigned(ap_const_lv4_C));
    add_ln127_fu_1432_p2 <= std_logic_vector(unsigned(zext_ln130_fu_1278_p1) + unsigned(ap_const_lv7_7C));
    add_ln132_fu_2065_p2 <= std_logic_vector(unsigned(trunc_ln127_fu_1266_p1) + unsigned(ap_const_lv2_1));
    and_ln131_1_fu_1772_p2 <= (xor_ln130_fu_1730_p2 and and_ln131_3_fu_1766_p2);
    and_ln131_2_fu_2018_p2 <= (xor_ln130_1_fu_1976_p2 and and_ln131_4_fu_2012_p2);
    and_ln131_3_fu_1766_p2 <= (xor_ln131_fu_1760_p2 and icmp_ln130_2_fu_1746_p2);
    and_ln131_4_fu_2012_p2 <= (xor_ln131_1_fu_2006_p2 and icmp_ln130_3_fu_1992_p2);
    and_ln131_fu_1472_p2 <= (icmp_ln131_fu_1466_p2 and icmp_ln130_1_fu_1460_p2);
    and_ln132_1_fu_1634_p2 <= (icmp_ln132_1_fu_1628_p2 and and_ln131_fu_1472_p2);
    and_ln132_2_fu_1654_p2 <= (icmp_ln132_2_fu_1648_p2 and and_ln131_fu_1472_p2);
    and_ln132_3_fu_1860_p2 <= (icmp_ln132_3_fu_1854_p2 and and_ln131_1_fu_1772_p2);
    and_ln132_4_fu_1880_p2 <= (icmp_ln132_4_fu_1874_p2 and and_ln131_1_fu_1772_p2);
    and_ln132_5_fu_1900_p2 <= (icmp_ln132_5_fu_1894_p2 and and_ln131_1_fu_1772_p2);
    and_ln132_6_fu_2085_p2 <= (icmp_ln132_6_fu_2079_p2 and and_ln131_2_fu_2018_p2);
    and_ln132_7_fu_2099_p2 <= (icmp_ln132_3_fu_1854_p2 and and_ln131_2_fu_2018_p2);
    and_ln132_8_fu_2119_p2 <= (icmp_ln132_7_fu_2113_p2 and and_ln131_2_fu_2018_p2);
    and_ln132_fu_1614_p2 <= (icmp_ln132_fu_1608_p2 and and_ln131_fu_1472_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln120_fu_1250_p2)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_phi_mux_b_vec_0_phi_fu_1005_p10_assign_proc : process(icmp_ln120_fu_1250_p2, M2_12_1_reload, M2_8_1_reload, M2_4_1_reload, M2_0_1_reload, icmp_ln130_fu_1292_p2, trunc_ln132_fu_1324_p1, ap_phi_reg_pp0_iter1_b_vec_0_reg_1002)
    begin
        if ((icmp_ln120_fu_1250_p2 = ap_const_lv1_0)) then
            if ((icmp_ln130_fu_1292_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= ap_const_lv32_0;
            elsif (((trunc_ln132_fu_1324_p1 = ap_const_lv2_1) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1))) then 
                ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= M2_4_1_reload;
            elsif (((trunc_ln132_fu_1324_p1 = ap_const_lv2_0) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1))) then 
                ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= M2_0_1_reload;
            elsif (((trunc_ln132_fu_1324_p1 = ap_const_lv2_2) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1))) then 
                ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= M2_8_1_reload;
            elsif (((trunc_ln132_fu_1324_p1 = ap_const_lv2_3) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1))) then 
                ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= M2_12_1_reload;
            else 
                ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= ap_phi_reg_pp0_iter1_b_vec_0_reg_1002;
            end if;
        else 
            ap_phi_mux_b_vec_0_phi_fu_1005_p10 <= ap_phi_reg_pp0_iter1_b_vec_0_reg_1002;
        end if; 
    end process;


    ap_phi_mux_opa_phi_fu_989_p10_assign_proc : process(icmp_ln120_fu_1250_p2, a_vec_0_fu_1298_p18, ap_phi_reg_pp0_iter1_opa_reg_986, icmp_ln130_fu_1292_p2, trunc_ln132_fu_1324_p1)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_opa_phi_fu_989_p10 <= ap_const_lv32_0;
        elsif ((((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (trunc_ln132_fu_1324_p1 = ap_const_lv2_1) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1)) or ((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (trunc_ln132_fu_1324_p1 = ap_const_lv2_0) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1)) or ((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (trunc_ln132_fu_1324_p1 = ap_const_lv2_2) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1)) or ((icmp_ln120_fu_1250_p2 = ap_const_lv1_0) and (trunc_ln132_fu_1324_p1 = ap_const_lv2_3) and (icmp_ln130_fu_1292_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_opa_phi_fu_989_p10 <= a_vec_0_fu_1298_p18;
        else 
            ap_phi_mux_opa_phi_fu_989_p10 <= ap_phi_reg_pp0_iter1_opa_reg_986;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_b_vec_0_reg_1002 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_opa_reg_986 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    b_vec_1_fu_1689_p3 <= 
        M2_1_1_reload when (and_ln132_2_fu_1654_p2(0) = '1') else 
        select_ln132_4_fu_1682_p3;
    b_vec_2_fu_1935_p3 <= 
        M2_2_1_reload when (and_ln132_5_fu_1900_p2(0) = '1') else 
        select_ln132_10_fu_1928_p3;
    b_vec_3_fu_2154_p3 <= 
        M2_3_1_reload when (and_ln132_8_fu_2119_p2(0) = '1') else 
        select_ln132_16_fu_2147_p3;
    icmp_ln120_fu_1250_p2 <= "1" when (i_fu_278 = ap_const_lv4_B) else "0";
    icmp_ln130_1_fu_1460_p2 <= "1" when (signed(tmp_1_fu_1450_p4) < signed(ap_const_lv3_1)) else "0";
    icmp_ln130_2_fu_1746_p2 <= "1" when (signed(tmp_3_fu_1736_p4) < signed(ap_const_lv3_1)) else "0";
    icmp_ln130_3_fu_1992_p2 <= "0" when (tmp_6_fu_1982_p4 = ap_const_lv2_1) else "1";
    icmp_ln130_fu_1292_p2 <= "1" when (tmp_fu_1282_p4 = ap_const_lv2_0) else "0";
    icmp_ln131_10_fu_1833_p2 <= "1" when (i_fu_278 = ap_const_lv4_0) else "0";
    icmp_ln131_1_fu_1478_p2 <= "1" when (i_fu_278 = ap_const_lv4_2) else "0";
    icmp_ln131_2_fu_1490_p2 <= "1" when (i_fu_278 = ap_const_lv4_3) else "0";
    icmp_ln131_3_fu_1503_p2 <= "1" when (i_fu_278 = ap_const_lv4_4) else "0";
    icmp_ln131_4_fu_1516_p2 <= "1" when (i_fu_278 = ap_const_lv4_5) else "0";
    icmp_ln131_5_fu_1529_p2 <= "1" when (i_fu_278 = ap_const_lv4_6) else "0";
    icmp_ln131_6_fu_1542_p2 <= "1" when (i_fu_278 = ap_const_lv4_7) else "0";
    icmp_ln131_7_fu_1555_p2 <= "1" when (i_fu_278 = ap_const_lv4_8) else "0";
    icmp_ln131_8_fu_1568_p2 <= "1" when (i_fu_278 = ap_const_lv4_9) else "0";
    icmp_ln131_9_fu_1581_p2 <= "1" when (i_fu_278 = ap_const_lv4_1) else "0";
    icmp_ln131_fu_1466_p2 <= "0" when (i_fu_278 = ap_const_lv4_0) else "1";
    icmp_ln132_1_fu_1628_p2 <= "1" when (or_ln132_fu_1594_p2 = ap_const_lv4_5) else "0";
    icmp_ln132_2_fu_1648_p2 <= "1" when (or_ln132_fu_1594_p2 = ap_const_lv4_1) else "0";
    icmp_ln132_3_fu_1854_p2 <= "1" when (trunc_ln127_fu_1266_p1 = ap_const_lv2_0) else "0";
    icmp_ln132_4_fu_1874_p2 <= "1" when (trunc_ln127_fu_1266_p1 = ap_const_lv2_3) else "0";
    icmp_ln132_5_fu_1894_p2 <= "1" when (trunc_ln127_fu_1266_p1 = ap_const_lv2_2) else "0";
    icmp_ln132_6_fu_2079_p2 <= "1" when (add_ln132_fu_2065_p2 = ap_const_lv2_2) else "0";
    icmp_ln132_7_fu_2113_p2 <= "1" when (add_ln132_fu_2065_p2 = ap_const_lv2_0) else "0";
    icmp_ln132_fu_1608_p2 <= "1" when (or_ln132_fu_1594_p2 = ap_const_lv4_9) else "0";
    mul_ln21_12_fu_2305_p1 <= 
        M1_15_26_fu_2058_p3 when (and_ln132_8_fu_2119_p2(0) = '1') else 
        select_ln132_13_fu_2105_p3;
    mul_ln21_1_fu_2173_p1 <= 
        M2_1_1_reload when (and_ln132_2_fu_1654_p2(0) = '1') else 
        select_ln132_4_fu_1682_p3;
    mul_ln21_2_fu_2185_p1 <= 
        M2_2_1_reload when (and_ln132_5_fu_1900_p2(0) = '1') else 
        select_ln132_10_fu_1928_p3;
    mul_ln21_3_fu_2197_p1 <= 
        M2_3_1_reload when (and_ln132_8_fu_2119_p2(0) = '1') else 
        select_ln132_16_fu_2147_p3;
    mul_ln21_4_fu_2209_p1 <= 
        M1_15_24_fu_1587_p3 when (and_ln132_2_fu_1654_p2(0) = '1') else 
        select_ln132_1_fu_1640_p3;
    mul_ln21_8_fu_2257_p1 <= 
        M1_15_25_fu_1839_p3 when (and_ln132_5_fu_1900_p2(0) = '1') else 
        select_ln132_7_fu_1886_p3;
    or_ln127_1_fu_1716_p2 <= (shl_ln127_1_fu_1708_p3 or ap_const_lv7_2);
    or_ln127_2_fu_1962_p2 <= (shl_ln127_2_fu_1954_p3 or ap_const_lv6_3);
    or_ln127_fu_1444_p2 <= (ap_const_lv7_1 or add_ln127_fu_1432_p2);
    or_ln132_fu_1594_p2 <= (ap_const_lv4_1 or add_ln127_1_fu_1438_p2);
    pe_array_pe_a_pass_1_0_fu_1660_p3 <= 
        M1_15_24_fu_1587_p3 when (and_ln132_2_fu_1654_p2(0) = '1') else 
        select_ln132_1_fu_1640_p3;
    pe_array_pe_a_pass_2_0_fu_1906_p3 <= 
        M1_15_25_fu_1839_p3 when (and_ln132_5_fu_1900_p2(0) = '1') else 
        select_ln132_7_fu_1886_p3;
    pe_array_pe_a_pass_3_0_fu_2125_p3 <= 
        M1_15_26_fu_2058_p3 when (and_ln132_8_fu_2119_p2(0) = '1') else 
        select_ln132_13_fu_2105_p3;
    pe_array_pe_val_0_0_fu_2167_p2 <= std_logic_vector(unsigned(mul_ln21_fu_2161_p2) + unsigned(this_pe_val_0_0_read_assign_fu_346));
    pe_array_pe_val_0_1_fu_2179_p2 <= std_logic_vector(unsigned(mul_ln21_1_fu_2173_p2) + unsigned(this_pe_val_0_1_read_assign_fu_350));
    pe_array_pe_val_0_2_fu_2191_p2 <= std_logic_vector(unsigned(mul_ln21_2_fu_2185_p2) + unsigned(this_pe_val_0_2_read_assign_fu_354));
    pe_array_pe_val_0_3_fu_2203_p2 <= std_logic_vector(unsigned(mul_ln21_3_fu_2197_p2) + unsigned(this_pe_val_0_3_read_assign_fu_358));
    pe_array_pe_val_1_0_fu_2215_p2 <= std_logic_vector(unsigned(mul_ln21_4_fu_2209_p2) + unsigned(this_pe_val_1_0_read_assign_fu_362));
    pe_array_pe_val_1_1_fu_2227_p2 <= std_logic_vector(unsigned(mul_ln21_5_fu_2221_p2) + unsigned(this_pe_val_1_1_read_assign_fu_366));
    pe_array_pe_val_1_2_fu_2239_p2 <= std_logic_vector(unsigned(mul_ln21_6_fu_2233_p2) + unsigned(this_pe_val_1_2_read_assign_fu_370));
    pe_array_pe_val_1_3_fu_2251_p2 <= std_logic_vector(unsigned(mul_ln21_7_fu_2245_p2) + unsigned(this_pe_val_1_3_read_assign_fu_374));
    pe_array_pe_val_2_0_fu_2263_p2 <= std_logic_vector(unsigned(mul_ln21_8_fu_2257_p2) + unsigned(this_pe_val_2_0_read_assign_fu_378));
    pe_array_pe_val_2_1_fu_2275_p2 <= std_logic_vector(unsigned(mul_ln21_9_fu_2269_p2) + unsigned(this_pe_val_2_1_read_assign_fu_382));
    pe_array_pe_val_2_2_fu_2287_p2 <= std_logic_vector(unsigned(mul_ln21_10_fu_2281_p2) + unsigned(this_pe_val_2_2_read_assign_fu_386));
    pe_array_pe_val_2_3_fu_2299_p2 <= std_logic_vector(unsigned(mul_ln21_11_fu_2293_p2) + unsigned(this_pe_val_2_3_read_assign_fu_390));
    pe_array_pe_val_3_0_fu_2311_p2 <= std_logic_vector(unsigned(mul_ln21_12_fu_2305_p2) + unsigned(this_pe_val_3_0_read_assign_fu_394));
    pe_array_pe_val_3_1_fu_2323_p2 <= std_logic_vector(unsigned(mul_ln21_13_fu_2317_p2) + unsigned(this_pe_val_3_1_read_assign_fu_398));
    pe_array_pe_val_3_2_fu_2335_p2 <= std_logic_vector(unsigned(mul_ln21_14_fu_2329_p2) + unsigned(this_pe_val_3_2_read_assign_fu_402));
    pe_array_pe_val_3_3_fu_2347_p2 <= std_logic_vector(unsigned(mul_ln21_15_fu_2341_p2) + unsigned(this_pe_val_3_3_read_assign_fu_406));
    select_ln131_11_fu_1846_p3 <= 
        M1_15_25_fu_1839_p3 when (and_ln131_1_fu_1772_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln131_12_fu_1914_p3 <= 
        M2_14_1_reload when (and_ln131_1_fu_1772_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln131_19_fu_2071_p3 <= 
        M1_15_26_fu_2058_p3 when (and_ln131_2_fu_2018_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln131_1_fu_1668_p3 <= 
        M2_13_1_reload when (and_ln131_fu_1472_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln131_20_fu_2133_p3 <= 
        M2_15_1_reload when (and_ln131_2_fu_2018_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln131_fu_1600_p3 <= 
        M1_15_24_fu_1587_p3 when (and_ln131_fu_1472_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln132_10_fu_1928_p3 <= 
        M2_6_1_reload when (and_ln132_4_fu_1880_p2(0) = '1') else 
        select_ln132_9_fu_1921_p3;
    select_ln132_12_fu_2091_p3 <= 
        M1_15_26_fu_2058_p3 when (and_ln132_6_fu_2085_p2(0) = '1') else 
        select_ln131_19_fu_2071_p3;
    select_ln132_13_fu_2105_p3 <= 
        M1_15_26_fu_2058_p3 when (and_ln132_7_fu_2099_p2(0) = '1') else 
        select_ln132_12_fu_2091_p3;
    select_ln132_15_fu_2140_p3 <= 
        M2_11_1_reload when (and_ln132_6_fu_2085_p2(0) = '1') else 
        select_ln131_20_fu_2133_p3;
    select_ln132_16_fu_2147_p3 <= 
        M2_7_1_reload when (and_ln132_7_fu_2099_p2(0) = '1') else 
        select_ln132_15_fu_2140_p3;
    select_ln132_1_fu_1640_p3 <= 
        M1_15_24_fu_1587_p3 when (and_ln132_1_fu_1634_p2(0) = '1') else 
        select_ln132_fu_1620_p3;
    select_ln132_3_fu_1675_p3 <= 
        M2_9_1_reload when (and_ln132_fu_1614_p2(0) = '1') else 
        select_ln131_1_fu_1668_p3;
    select_ln132_4_fu_1682_p3 <= 
        M2_5_1_reload when (and_ln132_1_fu_1634_p2(0) = '1') else 
        select_ln132_3_fu_1675_p3;
    select_ln132_6_fu_1866_p3 <= 
        M1_15_25_fu_1839_p3 when (and_ln132_3_fu_1860_p2(0) = '1') else 
        select_ln131_11_fu_1846_p3;
    select_ln132_7_fu_1886_p3 <= 
        M1_15_25_fu_1839_p3 when (and_ln132_4_fu_1880_p2(0) = '1') else 
        select_ln132_6_fu_1866_p3;
    select_ln132_9_fu_1921_p3 <= 
        M2_10_1_reload when (and_ln132_3_fu_1860_p2(0) = '1') else 
        select_ln131_12_fu_1914_p3;
    select_ln132_fu_1620_p3 <= 
        M1_15_24_fu_1587_p3 when (and_ln132_fu_1614_p2(0) = '1') else 
        select_ln131_fu_1600_p3;
    shl_ln127_1_fu_1708_p3 <= (add_ln126_fu_1696_p2 & ap_const_lv2_0);
    shl_ln127_2_fu_1954_p3 <= (add_ln126_2_fu_1942_p2 & ap_const_lv2_0);
    shl_ln_fu_1270_p3 <= (i_fu_278 & ap_const_lv2_0);
    this_pe_val_0_0_read_assign_out <= this_pe_val_0_0_read_assign_fu_346;

    this_pe_val_0_0_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_0_0_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_0_0_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_0_1_read_assign_out <= this_pe_val_0_1_read_assign_fu_350;

    this_pe_val_0_1_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_0_1_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_0_1_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_0_2_read_assign_out <= this_pe_val_0_2_read_assign_fu_354;

    this_pe_val_0_2_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_0_2_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_0_2_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_0_3_read_assign_out <= this_pe_val_0_3_read_assign_fu_358;

    this_pe_val_0_3_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_0_3_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_0_3_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_1_0_read_assign_out <= this_pe_val_1_0_read_assign_fu_362;

    this_pe_val_1_0_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_1_0_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_1_0_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_1_1_read_assign_out <= this_pe_val_1_1_read_assign_fu_366;

    this_pe_val_1_1_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_1_1_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_1_1_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_1_2_read_assign_out <= this_pe_val_1_2_read_assign_fu_370;

    this_pe_val_1_2_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_1_2_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_1_2_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_1_3_read_assign_out <= this_pe_val_1_3_read_assign_fu_374;

    this_pe_val_1_3_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_1_3_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_1_3_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_2_0_read_assign_out <= this_pe_val_2_0_read_assign_fu_378;

    this_pe_val_2_0_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_2_0_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_2_0_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_2_1_read_assign_out <= this_pe_val_2_1_read_assign_fu_382;

    this_pe_val_2_1_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_2_1_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_2_1_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_2_2_read_assign_out <= this_pe_val_2_2_read_assign_fu_386;

    this_pe_val_2_2_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_2_2_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_2_2_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_2_3_read_assign_out <= this_pe_val_2_3_read_assign_fu_390;

    this_pe_val_2_3_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_2_3_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_2_3_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_3_0_read_assign_out <= this_pe_val_3_0_read_assign_fu_394;

    this_pe_val_3_0_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_3_0_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_3_0_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_3_1_read_assign_out <= this_pe_val_3_1_read_assign_fu_398;

    this_pe_val_3_1_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_3_1_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_3_1_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_3_2_read_assign_out <= this_pe_val_3_2_read_assign_fu_402;

    this_pe_val_3_2_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_3_2_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_3_2_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_pe_val_3_3_read_assign_out <= this_pe_val_3_3_read_assign_fu_406;

    this_pe_val_3_3_read_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln120_fu_1250_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln120_fu_1250_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            this_pe_val_3_3_read_assign_out_ap_vld <= ap_const_logic_1;
        else 
            this_pe_val_3_3_read_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_1450_p4 <= or_ln127_fu_1444_p2(6 downto 4);
    tmp_2_fu_1722_p3 <= add_ln126_1_fu_1702_p2(4 downto 4);
    tmp_3_fu_1736_p4 <= or_ln127_1_fu_1716_p2(6 downto 4);
    tmp_4_fu_1752_p3 <= add_ln126_fu_1696_p2(4 downto 4);
    tmp_5_fu_1968_p3 <= add_ln126_3_fu_1948_p2(4 downto 4);
    tmp_6_fu_1982_p4 <= or_ln127_2_fu_1962_p2(5 downto 4);
    tmp_7_fu_1998_p3 <= add_ln126_2_fu_1942_p2(3 downto 3);
    tmp_fu_1282_p4 <= i_fu_278(3 downto 2);
    trunc_ln126_cast_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_278),5));
    trunc_ln127_1_fu_1424_p3 <= (trunc_ln127_fu_1266_p1 & ap_const_lv2_0);
    trunc_ln127_fu_1266_p1 <= i_fu_278(2 - 1 downto 0);
    trunc_ln132_fu_1324_p1 <= i_fu_278(2 - 1 downto 0);
    xor_ln130_1_fu_1976_p2 <= (tmp_5_fu_1968_p3 xor ap_const_lv1_1);
    xor_ln130_fu_1730_p2 <= (tmp_2_fu_1722_p3 xor ap_const_lv1_1);
    xor_ln131_1_fu_2006_p2 <= (tmp_7_fu_1998_p3 xor ap_const_lv1_1);
    xor_ln131_fu_1760_p2 <= (tmp_4_fu_1752_p3 xor ap_const_lv1_1);
    zext_ln130_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1270_p3),7));
end behav;
