-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity systolic_array_Loop_1_proc1_Pipeline_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pe_array_pe_val_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_3_ce0 : OUT STD_LOGIC;
    pe_array_pe_val_3_we0 : OUT STD_LOGIC;
    pe_array_pe_val_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_3_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_3_ce1 : OUT STD_LOGIC;
    pe_array_pe_val_3_we1 : OUT STD_LOGIC;
    pe_array_pe_val_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_2_ce0 : OUT STD_LOGIC;
    pe_array_pe_val_2_we0 : OUT STD_LOGIC;
    pe_array_pe_val_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_2_ce1 : OUT STD_LOGIC;
    pe_array_pe_val_2_we1 : OUT STD_LOGIC;
    pe_array_pe_val_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_1_ce0 : OUT STD_LOGIC;
    pe_array_pe_val_1_we0 : OUT STD_LOGIC;
    pe_array_pe_val_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_1_ce1 : OUT STD_LOGIC;
    pe_array_pe_val_1_we1 : OUT STD_LOGIC;
    pe_array_pe_val_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_b_pass_0_ce0 : OUT STD_LOGIC;
    pe_array_pe_b_pass_0_we0 : OUT STD_LOGIC;
    pe_array_pe_b_pass_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_b_pass_0_ce1 : OUT STD_LOGIC;
    pe_array_pe_b_pass_0_we1 : OUT STD_LOGIC;
    pe_array_pe_b_pass_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_b_pass_1_ce0 : OUT STD_LOGIC;
    pe_array_pe_b_pass_1_we0 : OUT STD_LOGIC;
    pe_array_pe_b_pass_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_b_pass_1_ce1 : OUT STD_LOGIC;
    pe_array_pe_b_pass_1_we1 : OUT STD_LOGIC;
    pe_array_pe_b_pass_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_b_pass_2_ce0 : OUT STD_LOGIC;
    pe_array_pe_b_pass_2_we0 : OUT STD_LOGIC;
    pe_array_pe_b_pass_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_b_pass_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_b_pass_2_ce1 : OUT STD_LOGIC;
    pe_array_pe_b_pass_2_we1 : OUT STD_LOGIC;
    pe_array_pe_b_pass_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_3_ce0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_3_we0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_3_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_3_ce1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_3_we1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_2_ce0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_2_we0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_2_ce1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_2_we1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_1_ce0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_1_we0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_1_ce1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_1_we1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_0_ce0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_0_we0 : OUT STD_LOGIC;
    pe_array_pe_a_pass_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_a_pass_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_a_pass_0_ce1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_0_we1 : OUT STD_LOGIC;
    pe_array_pe_a_pass_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_0_ce0 : OUT STD_LOGIC;
    pe_array_pe_val_0_we0 : OUT STD_LOGIC;
    pe_array_pe_val_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pe_array_pe_val_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    pe_array_pe_val_0_ce1 : OUT STD_LOGIC;
    pe_array_pe_val_0_we1 : OUT STD_LOGIC;
    pe_array_pe_val_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of systolic_array_Loop_1_proc1_Pipeline_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal icmp_ln35_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal phi_ln35_load_load_fu_556_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln35_load_reg_581 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal add_ln35_fu_559_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln35_reg_696 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln35_fu_52 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_phi_ln35_load : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component systolic_array_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component systolic_array_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    phi_ln35_fu_52_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln35_fu_52 <= ap_const_lv2_0;
            elsif (((icmp_ln35_fu_565_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_ln35_fu_52 <= add_ln35_reg_696;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln35_reg_696 <= add_ln35_fu_559_p2;
                phi_ln35_load_reg_581 <= ap_sig_allocacmp_phi_ln35_load;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln35_fu_559_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_phi_ln35_load) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_CS_fsm_state2, icmp_ln35_fu_565_p2)
    begin
        if (((icmp_ln35_fu_565_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state2, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_phi_ln35_load_assign_proc : process(ap_CS_fsm_state1, phi_ln35_fu_52, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_phi_ln35_load <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_phi_ln35_load <= phi_ln35_fu_52;
        end if; 
    end process;

    icmp_ln35_fu_565_p2 <= "1" when (phi_ln35_load_reg_581 = ap_const_lv2_3) else "0";

    pe_array_pe_a_pass_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0))) then 
            pe_array_pe_a_pass_0_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0))) then 
            pe_array_pe_a_pass_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_0_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0))) then 
            pe_array_pe_a_pass_0_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0))) then 
            pe_array_pe_a_pass_0_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_0_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_0_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_a_pass_0_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_0_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_a_pass_0_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_a_pass_0_d0 <= ap_const_lv32_0;
    pe_array_pe_a_pass_0_d1 <= ap_const_lv32_0;

    pe_array_pe_a_pass_0_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_a_pass_0_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_0_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_a_pass_0_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1))) then 
            pe_array_pe_a_pass_1_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1))) then 
            pe_array_pe_a_pass_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_1_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1))) then 
            pe_array_pe_a_pass_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1))) then 
            pe_array_pe_a_pass_1_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_1_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_1_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_a_pass_1_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_1_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_a_pass_1_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_a_pass_1_d0 <= ap_const_lv32_0;
    pe_array_pe_a_pass_1_d1 <= ap_const_lv32_0;

    pe_array_pe_a_pass_1_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_a_pass_1_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_1_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_a_pass_1_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2))) then 
            pe_array_pe_a_pass_2_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2))) then 
            pe_array_pe_a_pass_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_2_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_2_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2))) then 
            pe_array_pe_a_pass_2_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2))) then 
            pe_array_pe_a_pass_2_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_2_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_a_pass_2_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_2_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_a_pass_2_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_a_pass_2_d0 <= ap_const_lv32_0;
    pe_array_pe_a_pass_2_d1 <= ap_const_lv32_0;

    pe_array_pe_a_pass_2_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_a_pass_2_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_2_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_a_pass_2_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_3_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3))) then 
            pe_array_pe_a_pass_3_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3))) then 
            pe_array_pe_a_pass_3_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_3_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_3_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3))) then 
            pe_array_pe_a_pass_3_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3))) then 
            pe_array_pe_a_pass_3_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_a_pass_3_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_a_pass_3_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_a_pass_3_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_3_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_a_pass_3_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_a_pass_3_d0 <= ap_const_lv32_0;
    pe_array_pe_a_pass_3_d1 <= ap_const_lv32_0;

    pe_array_pe_a_pass_3_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_a_pass_3_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_a_pass_3_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_a_pass_3_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_a_pass_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0))) then 
            pe_array_pe_b_pass_0_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0))) then 
            pe_array_pe_b_pass_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_b_pass_0_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_b_pass_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0))) then 
            pe_array_pe_b_pass_0_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0))) then 
            pe_array_pe_b_pass_0_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_b_pass_0_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_b_pass_0_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_b_pass_0_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_0_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_b_pass_0_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_b_pass_0_d0 <= ap_const_lv32_0;
    pe_array_pe_b_pass_0_d1 <= ap_const_lv32_0;

    pe_array_pe_b_pass_0_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_b_pass_0_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_0_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_b_pass_0_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1))) then 
            pe_array_pe_b_pass_1_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1))) then 
            pe_array_pe_b_pass_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_b_pass_1_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_b_pass_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1))) then 
            pe_array_pe_b_pass_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1))) then 
            pe_array_pe_b_pass_1_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_b_pass_1_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_b_pass_1_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_b_pass_1_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_1_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_b_pass_1_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_b_pass_1_d0 <= ap_const_lv32_0;
    pe_array_pe_b_pass_1_d1 <= ap_const_lv32_0;

    pe_array_pe_b_pass_1_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_b_pass_1_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_1_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_b_pass_1_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2))) then 
            pe_array_pe_b_pass_2_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2))) then 
            pe_array_pe_b_pass_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_b_pass_2_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_b_pass_2_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2))) then 
            pe_array_pe_b_pass_2_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2))) then 
            pe_array_pe_b_pass_2_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_b_pass_2_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_b_pass_2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_b_pass_2_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_2_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_b_pass_2_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_b_pass_2_d0 <= ap_const_lv32_0;
    pe_array_pe_b_pass_2_d1 <= ap_const_lv32_0;

    pe_array_pe_b_pass_2_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_b_pass_2_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_b_pass_2_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_b_pass_2_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_b_pass_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0))) then 
            pe_array_pe_val_0_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0))) then 
            pe_array_pe_val_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_val_0_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0))) then 
            pe_array_pe_val_0_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0))) then 
            pe_array_pe_val_0_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_val_0_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_0_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_val_0_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_0_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_val_0_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_val_0_d0 <= ap_const_lv32_0;
    pe_array_pe_val_0_d1 <= ap_const_lv32_0;

    pe_array_pe_val_0_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_val_0_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_0_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_0)))) then 
            pe_array_pe_val_0_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1))) then 
            pe_array_pe_val_1_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1))) then 
            pe_array_pe_val_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_val_1_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1))) then 
            pe_array_pe_val_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1))) then 
            pe_array_pe_val_1_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_val_1_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_1_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_val_1_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_1_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_val_1_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_val_1_d0 <= ap_const_lv32_0;
    pe_array_pe_val_1_d1 <= ap_const_lv32_0;

    pe_array_pe_val_1_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_val_1_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_1_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_1)))) then 
            pe_array_pe_val_1_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2))) then 
            pe_array_pe_val_2_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2))) then 
            pe_array_pe_val_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_val_2_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_2_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2))) then 
            pe_array_pe_val_2_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2))) then 
            pe_array_pe_val_2_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_val_2_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_val_2_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_2_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_val_2_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_val_2_d0 <= ap_const_lv32_0;
    pe_array_pe_val_2_d1 <= ap_const_lv32_0;

    pe_array_pe_val_2_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_val_2_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_2_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_2)))) then 
            pe_array_pe_val_2_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_3_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3))) then 
            pe_array_pe_val_3_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3))) then 
            pe_array_pe_val_3_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            pe_array_pe_val_3_address0 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_3_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3))) then 
            pe_array_pe_val_3_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3))) then 
            pe_array_pe_val_3_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            pe_array_pe_val_3_address1 <= "XX";
        end if; 
    end process;


    pe_array_pe_val_3_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_val_3_ce0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_3_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_val_3_ce1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pe_array_pe_val_3_d0 <= ap_const_lv32_0;
    pe_array_pe_val_3_d1 <= ap_const_lv32_0;

    pe_array_pe_val_3_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_val_3_we0 <= ap_const_logic_1;
        else 
            pe_array_pe_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pe_array_pe_val_3_we1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, phi_ln35_load_load_fu_556_p1, phi_ln35_load_reg_581, ap_start_int)
    begin
        if ((((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (phi_ln35_load_load_fu_556_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (phi_ln35_load_reg_581 = ap_const_lv2_3)))) then 
            pe_array_pe_val_3_we1 <= ap_const_logic_1;
        else 
            pe_array_pe_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    phi_ln35_load_load_fu_556_p1 <= ap_sig_allocacmp_phi_ln35_load;
end behav;
