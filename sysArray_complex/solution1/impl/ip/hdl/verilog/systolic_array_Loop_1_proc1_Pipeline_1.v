// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module systolic_array_Loop_1_proc1_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pe_array_pe_val_3_address0,
        pe_array_pe_val_3_ce0,
        pe_array_pe_val_3_we0,
        pe_array_pe_val_3_d0,
        pe_array_pe_val_3_address1,
        pe_array_pe_val_3_ce1,
        pe_array_pe_val_3_we1,
        pe_array_pe_val_3_d1,
        pe_array_pe_val_2_address0,
        pe_array_pe_val_2_ce0,
        pe_array_pe_val_2_we0,
        pe_array_pe_val_2_d0,
        pe_array_pe_val_2_address1,
        pe_array_pe_val_2_ce1,
        pe_array_pe_val_2_we1,
        pe_array_pe_val_2_d1,
        pe_array_pe_val_1_address0,
        pe_array_pe_val_1_ce0,
        pe_array_pe_val_1_we0,
        pe_array_pe_val_1_d0,
        pe_array_pe_val_1_address1,
        pe_array_pe_val_1_ce1,
        pe_array_pe_val_1_we1,
        pe_array_pe_val_1_d1,
        pe_array_pe_b_pass_0_address0,
        pe_array_pe_b_pass_0_ce0,
        pe_array_pe_b_pass_0_we0,
        pe_array_pe_b_pass_0_d0,
        pe_array_pe_b_pass_0_address1,
        pe_array_pe_b_pass_0_ce1,
        pe_array_pe_b_pass_0_we1,
        pe_array_pe_b_pass_0_d1,
        pe_array_pe_b_pass_1_address0,
        pe_array_pe_b_pass_1_ce0,
        pe_array_pe_b_pass_1_we0,
        pe_array_pe_b_pass_1_d0,
        pe_array_pe_b_pass_1_address1,
        pe_array_pe_b_pass_1_ce1,
        pe_array_pe_b_pass_1_we1,
        pe_array_pe_b_pass_1_d1,
        pe_array_pe_b_pass_2_address0,
        pe_array_pe_b_pass_2_ce0,
        pe_array_pe_b_pass_2_we0,
        pe_array_pe_b_pass_2_d0,
        pe_array_pe_b_pass_2_address1,
        pe_array_pe_b_pass_2_ce1,
        pe_array_pe_b_pass_2_we1,
        pe_array_pe_b_pass_2_d1,
        pe_array_pe_a_pass_3_address0,
        pe_array_pe_a_pass_3_ce0,
        pe_array_pe_a_pass_3_we0,
        pe_array_pe_a_pass_3_d0,
        pe_array_pe_a_pass_3_address1,
        pe_array_pe_a_pass_3_ce1,
        pe_array_pe_a_pass_3_we1,
        pe_array_pe_a_pass_3_d1,
        pe_array_pe_a_pass_2_address0,
        pe_array_pe_a_pass_2_ce0,
        pe_array_pe_a_pass_2_we0,
        pe_array_pe_a_pass_2_d0,
        pe_array_pe_a_pass_2_address1,
        pe_array_pe_a_pass_2_ce1,
        pe_array_pe_a_pass_2_we1,
        pe_array_pe_a_pass_2_d1,
        pe_array_pe_a_pass_1_address0,
        pe_array_pe_a_pass_1_ce0,
        pe_array_pe_a_pass_1_we0,
        pe_array_pe_a_pass_1_d0,
        pe_array_pe_a_pass_1_address1,
        pe_array_pe_a_pass_1_ce1,
        pe_array_pe_a_pass_1_we1,
        pe_array_pe_a_pass_1_d1,
        pe_array_pe_a_pass_0_address0,
        pe_array_pe_a_pass_0_ce0,
        pe_array_pe_a_pass_0_we0,
        pe_array_pe_a_pass_0_d0,
        pe_array_pe_a_pass_0_address1,
        pe_array_pe_a_pass_0_ce1,
        pe_array_pe_a_pass_0_we1,
        pe_array_pe_a_pass_0_d1,
        pe_array_pe_val_0_address0,
        pe_array_pe_val_0_ce0,
        pe_array_pe_val_0_we0,
        pe_array_pe_val_0_d0,
        pe_array_pe_val_0_address1,
        pe_array_pe_val_0_ce1,
        pe_array_pe_val_0_we1,
        pe_array_pe_val_0_d1
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] pe_array_pe_val_3_address0;
output   pe_array_pe_val_3_ce0;
output   pe_array_pe_val_3_we0;
output  [31:0] pe_array_pe_val_3_d0;
output  [1:0] pe_array_pe_val_3_address1;
output   pe_array_pe_val_3_ce1;
output   pe_array_pe_val_3_we1;
output  [31:0] pe_array_pe_val_3_d1;
output  [1:0] pe_array_pe_val_2_address0;
output   pe_array_pe_val_2_ce0;
output   pe_array_pe_val_2_we0;
output  [31:0] pe_array_pe_val_2_d0;
output  [1:0] pe_array_pe_val_2_address1;
output   pe_array_pe_val_2_ce1;
output   pe_array_pe_val_2_we1;
output  [31:0] pe_array_pe_val_2_d1;
output  [1:0] pe_array_pe_val_1_address0;
output   pe_array_pe_val_1_ce0;
output   pe_array_pe_val_1_we0;
output  [31:0] pe_array_pe_val_1_d0;
output  [1:0] pe_array_pe_val_1_address1;
output   pe_array_pe_val_1_ce1;
output   pe_array_pe_val_1_we1;
output  [31:0] pe_array_pe_val_1_d1;
output  [1:0] pe_array_pe_b_pass_0_address0;
output   pe_array_pe_b_pass_0_ce0;
output   pe_array_pe_b_pass_0_we0;
output  [31:0] pe_array_pe_b_pass_0_d0;
output  [1:0] pe_array_pe_b_pass_0_address1;
output   pe_array_pe_b_pass_0_ce1;
output   pe_array_pe_b_pass_0_we1;
output  [31:0] pe_array_pe_b_pass_0_d1;
output  [1:0] pe_array_pe_b_pass_1_address0;
output   pe_array_pe_b_pass_1_ce0;
output   pe_array_pe_b_pass_1_we0;
output  [31:0] pe_array_pe_b_pass_1_d0;
output  [1:0] pe_array_pe_b_pass_1_address1;
output   pe_array_pe_b_pass_1_ce1;
output   pe_array_pe_b_pass_1_we1;
output  [31:0] pe_array_pe_b_pass_1_d1;
output  [1:0] pe_array_pe_b_pass_2_address0;
output   pe_array_pe_b_pass_2_ce0;
output   pe_array_pe_b_pass_2_we0;
output  [31:0] pe_array_pe_b_pass_2_d0;
output  [1:0] pe_array_pe_b_pass_2_address1;
output   pe_array_pe_b_pass_2_ce1;
output   pe_array_pe_b_pass_2_we1;
output  [31:0] pe_array_pe_b_pass_2_d1;
output  [1:0] pe_array_pe_a_pass_3_address0;
output   pe_array_pe_a_pass_3_ce0;
output   pe_array_pe_a_pass_3_we0;
output  [31:0] pe_array_pe_a_pass_3_d0;
output  [1:0] pe_array_pe_a_pass_3_address1;
output   pe_array_pe_a_pass_3_ce1;
output   pe_array_pe_a_pass_3_we1;
output  [31:0] pe_array_pe_a_pass_3_d1;
output  [1:0] pe_array_pe_a_pass_2_address0;
output   pe_array_pe_a_pass_2_ce0;
output   pe_array_pe_a_pass_2_we0;
output  [31:0] pe_array_pe_a_pass_2_d0;
output  [1:0] pe_array_pe_a_pass_2_address1;
output   pe_array_pe_a_pass_2_ce1;
output   pe_array_pe_a_pass_2_we1;
output  [31:0] pe_array_pe_a_pass_2_d1;
output  [1:0] pe_array_pe_a_pass_1_address0;
output   pe_array_pe_a_pass_1_ce0;
output   pe_array_pe_a_pass_1_we0;
output  [31:0] pe_array_pe_a_pass_1_d0;
output  [1:0] pe_array_pe_a_pass_1_address1;
output   pe_array_pe_a_pass_1_ce1;
output   pe_array_pe_a_pass_1_we1;
output  [31:0] pe_array_pe_a_pass_1_d1;
output  [1:0] pe_array_pe_a_pass_0_address0;
output   pe_array_pe_a_pass_0_ce0;
output   pe_array_pe_a_pass_0_we0;
output  [31:0] pe_array_pe_a_pass_0_d0;
output  [1:0] pe_array_pe_a_pass_0_address1;
output   pe_array_pe_a_pass_0_ce1;
output   pe_array_pe_a_pass_0_we1;
output  [31:0] pe_array_pe_a_pass_0_d1;
output  [1:0] pe_array_pe_val_0_address0;
output   pe_array_pe_val_0_ce0;
output   pe_array_pe_val_0_we0;
output  [31:0] pe_array_pe_val_0_d0;
output  [1:0] pe_array_pe_val_0_address1;
output   pe_array_pe_val_0_ce1;
output   pe_array_pe_val_0_we1;
output  [31:0] pe_array_pe_val_0_d1;

reg ap_idle;
reg[1:0] pe_array_pe_val_3_address0;
reg pe_array_pe_val_3_ce0;
reg pe_array_pe_val_3_we0;
reg[1:0] pe_array_pe_val_3_address1;
reg pe_array_pe_val_3_ce1;
reg pe_array_pe_val_3_we1;
reg[1:0] pe_array_pe_val_2_address0;
reg pe_array_pe_val_2_ce0;
reg pe_array_pe_val_2_we0;
reg[1:0] pe_array_pe_val_2_address1;
reg pe_array_pe_val_2_ce1;
reg pe_array_pe_val_2_we1;
reg[1:0] pe_array_pe_val_1_address0;
reg pe_array_pe_val_1_ce0;
reg pe_array_pe_val_1_we0;
reg[1:0] pe_array_pe_val_1_address1;
reg pe_array_pe_val_1_ce1;
reg pe_array_pe_val_1_we1;
reg[1:0] pe_array_pe_b_pass_0_address0;
reg pe_array_pe_b_pass_0_ce0;
reg pe_array_pe_b_pass_0_we0;
reg[1:0] pe_array_pe_b_pass_0_address1;
reg pe_array_pe_b_pass_0_ce1;
reg pe_array_pe_b_pass_0_we1;
reg[1:0] pe_array_pe_b_pass_1_address0;
reg pe_array_pe_b_pass_1_ce0;
reg pe_array_pe_b_pass_1_we0;
reg[1:0] pe_array_pe_b_pass_1_address1;
reg pe_array_pe_b_pass_1_ce1;
reg pe_array_pe_b_pass_1_we1;
reg[1:0] pe_array_pe_b_pass_2_address0;
reg pe_array_pe_b_pass_2_ce0;
reg pe_array_pe_b_pass_2_we0;
reg[1:0] pe_array_pe_b_pass_2_address1;
reg pe_array_pe_b_pass_2_ce1;
reg pe_array_pe_b_pass_2_we1;
reg[1:0] pe_array_pe_a_pass_3_address0;
reg pe_array_pe_a_pass_3_ce0;
reg pe_array_pe_a_pass_3_we0;
reg[1:0] pe_array_pe_a_pass_3_address1;
reg pe_array_pe_a_pass_3_ce1;
reg pe_array_pe_a_pass_3_we1;
reg[1:0] pe_array_pe_a_pass_2_address0;
reg pe_array_pe_a_pass_2_ce0;
reg pe_array_pe_a_pass_2_we0;
reg[1:0] pe_array_pe_a_pass_2_address1;
reg pe_array_pe_a_pass_2_ce1;
reg pe_array_pe_a_pass_2_we1;
reg[1:0] pe_array_pe_a_pass_1_address0;
reg pe_array_pe_a_pass_1_ce0;
reg pe_array_pe_a_pass_1_we0;
reg[1:0] pe_array_pe_a_pass_1_address1;
reg pe_array_pe_a_pass_1_ce1;
reg pe_array_pe_a_pass_1_we1;
reg[1:0] pe_array_pe_a_pass_0_address0;
reg pe_array_pe_a_pass_0_ce0;
reg pe_array_pe_a_pass_0_we0;
reg[1:0] pe_array_pe_a_pass_0_address1;
reg pe_array_pe_a_pass_0_ce1;
reg pe_array_pe_a_pass_0_we1;
reg[1:0] pe_array_pe_val_0_address0;
reg pe_array_pe_val_0_ce0;
reg pe_array_pe_val_0_we0;
reg[1:0] pe_array_pe_val_0_address1;
reg pe_array_pe_val_0_ce1;
reg pe_array_pe_val_0_we1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [0:0] icmp_ln35_fu_565_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [1:0] phi_ln35_load_load_fu_556_p1;
reg   [1:0] phi_ln35_load_reg_581;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [1:0] add_ln35_fu_559_p2;
reg   [1:0] add_ln35_reg_696;
reg   [1:0] phi_ln35_fu_52;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_phi_ln35_load;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

systolic_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln35_fu_52 <= 2'd0;
    end else if (((icmp_ln35_fu_565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln35_fu_52 <= add_ln35_reg_696;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln35_reg_696 <= add_ln35_fu_559_p2;
        phi_ln35_load_reg_581 <= ap_sig_allocacmp_phi_ln35_load;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln35_fu_565_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_phi_ln35_load = 2'd0;
    end else begin
        ap_sig_allocacmp_phi_ln35_load = phi_ln35_fu_52;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0))) begin
        pe_array_pe_a_pass_0_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0))) begin
        pe_array_pe_a_pass_0_address0 = 64'd1;
    end else begin
        pe_array_pe_a_pass_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0))) begin
        pe_array_pe_a_pass_0_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0))) begin
        pe_array_pe_a_pass_0_address1 = 64'd0;
    end else begin
        pe_array_pe_a_pass_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_a_pass_0_ce0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_a_pass_0_ce1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_a_pass_0_we0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_a_pass_0_we1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1))) begin
        pe_array_pe_a_pass_1_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1))) begin
        pe_array_pe_a_pass_1_address0 = 64'd1;
    end else begin
        pe_array_pe_a_pass_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1))) begin
        pe_array_pe_a_pass_1_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1))) begin
        pe_array_pe_a_pass_1_address1 = 64'd0;
    end else begin
        pe_array_pe_a_pass_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_a_pass_1_ce0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_a_pass_1_ce1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_a_pass_1_we0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_a_pass_1_we1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2))) begin
        pe_array_pe_a_pass_2_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2))) begin
        pe_array_pe_a_pass_2_address0 = 64'd1;
    end else begin
        pe_array_pe_a_pass_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2))) begin
        pe_array_pe_a_pass_2_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2))) begin
        pe_array_pe_a_pass_2_address1 = 64'd0;
    end else begin
        pe_array_pe_a_pass_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_a_pass_2_ce0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_a_pass_2_ce1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_a_pass_2_we0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_a_pass_2_we1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3))) begin
        pe_array_pe_a_pass_3_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3))) begin
        pe_array_pe_a_pass_3_address0 = 64'd1;
    end else begin
        pe_array_pe_a_pass_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3))) begin
        pe_array_pe_a_pass_3_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3))) begin
        pe_array_pe_a_pass_3_address1 = 64'd0;
    end else begin
        pe_array_pe_a_pass_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_a_pass_3_ce0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_a_pass_3_ce1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_a_pass_3_we0 = 1'b1;
    end else begin
        pe_array_pe_a_pass_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_a_pass_3_we1 = 1'b1;
    end else begin
        pe_array_pe_a_pass_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0))) begin
        pe_array_pe_b_pass_0_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0))) begin
        pe_array_pe_b_pass_0_address0 = 64'd1;
    end else begin
        pe_array_pe_b_pass_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0))) begin
        pe_array_pe_b_pass_0_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0))) begin
        pe_array_pe_b_pass_0_address1 = 64'd0;
    end else begin
        pe_array_pe_b_pass_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_b_pass_0_ce0 = 1'b1;
    end else begin
        pe_array_pe_b_pass_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_b_pass_0_ce1 = 1'b1;
    end else begin
        pe_array_pe_b_pass_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_b_pass_0_we0 = 1'b1;
    end else begin
        pe_array_pe_b_pass_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_b_pass_0_we1 = 1'b1;
    end else begin
        pe_array_pe_b_pass_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1))) begin
        pe_array_pe_b_pass_1_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1))) begin
        pe_array_pe_b_pass_1_address0 = 64'd1;
    end else begin
        pe_array_pe_b_pass_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1))) begin
        pe_array_pe_b_pass_1_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1))) begin
        pe_array_pe_b_pass_1_address1 = 64'd0;
    end else begin
        pe_array_pe_b_pass_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_b_pass_1_ce0 = 1'b1;
    end else begin
        pe_array_pe_b_pass_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_b_pass_1_ce1 = 1'b1;
    end else begin
        pe_array_pe_b_pass_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_b_pass_1_we0 = 1'b1;
    end else begin
        pe_array_pe_b_pass_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_b_pass_1_we1 = 1'b1;
    end else begin
        pe_array_pe_b_pass_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2))) begin
        pe_array_pe_b_pass_2_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2))) begin
        pe_array_pe_b_pass_2_address0 = 64'd1;
    end else begin
        pe_array_pe_b_pass_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2))) begin
        pe_array_pe_b_pass_2_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2))) begin
        pe_array_pe_b_pass_2_address1 = 64'd0;
    end else begin
        pe_array_pe_b_pass_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_b_pass_2_ce0 = 1'b1;
    end else begin
        pe_array_pe_b_pass_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_b_pass_2_ce1 = 1'b1;
    end else begin
        pe_array_pe_b_pass_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_b_pass_2_we0 = 1'b1;
    end else begin
        pe_array_pe_b_pass_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_b_pass_2_we1 = 1'b1;
    end else begin
        pe_array_pe_b_pass_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0))) begin
        pe_array_pe_val_0_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0))) begin
        pe_array_pe_val_0_address0 = 64'd1;
    end else begin
        pe_array_pe_val_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0))) begin
        pe_array_pe_val_0_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0))) begin
        pe_array_pe_val_0_address1 = 64'd0;
    end else begin
        pe_array_pe_val_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_val_0_ce0 = 1'b1;
    end else begin
        pe_array_pe_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_val_0_ce1 = 1'b1;
    end else begin
        pe_array_pe_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_val_0_we0 = 1'b1;
    end else begin
        pe_array_pe_val_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd0)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd0)))) begin
        pe_array_pe_val_0_we1 = 1'b1;
    end else begin
        pe_array_pe_val_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1))) begin
        pe_array_pe_val_1_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1))) begin
        pe_array_pe_val_1_address0 = 64'd1;
    end else begin
        pe_array_pe_val_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1))) begin
        pe_array_pe_val_1_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1))) begin
        pe_array_pe_val_1_address1 = 64'd0;
    end else begin
        pe_array_pe_val_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_val_1_ce0 = 1'b1;
    end else begin
        pe_array_pe_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_val_1_ce1 = 1'b1;
    end else begin
        pe_array_pe_val_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_val_1_we0 = 1'b1;
    end else begin
        pe_array_pe_val_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd1)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd1)))) begin
        pe_array_pe_val_1_we1 = 1'b1;
    end else begin
        pe_array_pe_val_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2))) begin
        pe_array_pe_val_2_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2))) begin
        pe_array_pe_val_2_address0 = 64'd1;
    end else begin
        pe_array_pe_val_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2))) begin
        pe_array_pe_val_2_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2))) begin
        pe_array_pe_val_2_address1 = 64'd0;
    end else begin
        pe_array_pe_val_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_val_2_ce0 = 1'b1;
    end else begin
        pe_array_pe_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_val_2_ce1 = 1'b1;
    end else begin
        pe_array_pe_val_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_val_2_we0 = 1'b1;
    end else begin
        pe_array_pe_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd2)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd2)))) begin
        pe_array_pe_val_2_we1 = 1'b1;
    end else begin
        pe_array_pe_val_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3))) begin
        pe_array_pe_val_3_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3))) begin
        pe_array_pe_val_3_address0 = 64'd1;
    end else begin
        pe_array_pe_val_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3))) begin
        pe_array_pe_val_3_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3))) begin
        pe_array_pe_val_3_address1 = 64'd0;
    end else begin
        pe_array_pe_val_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_val_3_ce0 = 1'b1;
    end else begin
        pe_array_pe_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_val_3_ce1 = 1'b1;
    end else begin
        pe_array_pe_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_val_3_we0 = 1'b1;
    end else begin
        pe_array_pe_val_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (phi_ln35_load_load_fu_556_p1 == 2'd3)) | ((1'b1 == ap_CS_fsm_state2) & (phi_ln35_load_reg_581 == 2'd3)))) begin
        pe_array_pe_val_3_we1 = 1'b1;
    end else begin
        pe_array_pe_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln35_fu_559_p2 = (ap_sig_allocacmp_phi_ln35_load + 2'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign icmp_ln35_fu_565_p2 = ((phi_ln35_load_reg_581 == 2'd3) ? 1'b1 : 1'b0);

assign pe_array_pe_a_pass_0_d0 = 32'd0;

assign pe_array_pe_a_pass_0_d1 = 32'd0;

assign pe_array_pe_a_pass_1_d0 = 32'd0;

assign pe_array_pe_a_pass_1_d1 = 32'd0;

assign pe_array_pe_a_pass_2_d0 = 32'd0;

assign pe_array_pe_a_pass_2_d1 = 32'd0;

assign pe_array_pe_a_pass_3_d0 = 32'd0;

assign pe_array_pe_a_pass_3_d1 = 32'd0;

assign pe_array_pe_b_pass_0_d0 = 32'd0;

assign pe_array_pe_b_pass_0_d1 = 32'd0;

assign pe_array_pe_b_pass_1_d0 = 32'd0;

assign pe_array_pe_b_pass_1_d1 = 32'd0;

assign pe_array_pe_b_pass_2_d0 = 32'd0;

assign pe_array_pe_b_pass_2_d1 = 32'd0;

assign pe_array_pe_val_0_d0 = 32'd0;

assign pe_array_pe_val_0_d1 = 32'd0;

assign pe_array_pe_val_1_d0 = 32'd0;

assign pe_array_pe_val_1_d1 = 32'd0;

assign pe_array_pe_val_2_d0 = 32'd0;

assign pe_array_pe_val_2_d1 = 32'd0;

assign pe_array_pe_val_3_d0 = 32'd0;

assign pe_array_pe_val_3_d1 = 32'd0;

assign phi_ln35_load_load_fu_556_p1 = ap_sig_allocacmp_phi_ln35_load;

endmodule //systolic_array_Loop_1_proc1_Pipeline_1
