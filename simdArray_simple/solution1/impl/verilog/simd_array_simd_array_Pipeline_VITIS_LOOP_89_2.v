// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module simd_array_simd_array_Pipeline_VITIS_LOOP_89_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln89,
        V2_31_067_out,
        V2_31_067_out_ap_vld,
        V2_30_066_out,
        V2_30_066_out_ap_vld,
        V2_29_065_out,
        V2_29_065_out_ap_vld,
        V2_28_064_out,
        V2_28_064_out_ap_vld,
        V2_27_063_out,
        V2_27_063_out_ap_vld,
        V2_26_062_out,
        V2_26_062_out_ap_vld,
        V2_25_061_out,
        V2_25_061_out_ap_vld,
        V2_24_060_out,
        V2_24_060_out_ap_vld,
        V2_23_059_out,
        V2_23_059_out_ap_vld,
        V2_22_058_out,
        V2_22_058_out_ap_vld,
        V2_21_057_out,
        V2_21_057_out_ap_vld,
        V2_20_056_out,
        V2_20_056_out_ap_vld,
        V2_19_055_out,
        V2_19_055_out_ap_vld,
        V2_18_054_out,
        V2_18_054_out_ap_vld,
        V2_17_053_out,
        V2_17_053_out_ap_vld,
        V2_16_052_out,
        V2_16_052_out_ap_vld,
        V2_15_051_out,
        V2_15_051_out_ap_vld,
        V2_14_050_out,
        V2_14_050_out_ap_vld,
        V2_13_049_out,
        V2_13_049_out_ap_vld,
        V2_12_048_out,
        V2_12_048_out_ap_vld,
        V2_11_047_out,
        V2_11_047_out_ap_vld,
        V2_10_046_out,
        V2_10_046_out_ap_vld,
        V2_9_045_out,
        V2_9_045_out_ap_vld,
        V2_8_044_out,
        V2_8_044_out_ap_vld,
        V2_7_043_out,
        V2_7_043_out_ap_vld,
        V2_6_042_out,
        V2_6_042_out_ap_vld,
        V2_5_041_out,
        V2_5_041_out_ap_vld,
        V2_4_040_out,
        V2_4_040_out_ap_vld,
        V2_3_039_out,
        V2_3_039_out_ap_vld,
        V2_2_038_out,
        V2_2_038_out_ap_vld,
        V2_1_037_out,
        V2_1_037_out_ap_vld,
        V2_0_036_out,
        V2_0_036_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [61:0] sext_ln89;
output  [31:0] V2_31_067_out;
output   V2_31_067_out_ap_vld;
output  [31:0] V2_30_066_out;
output   V2_30_066_out_ap_vld;
output  [31:0] V2_29_065_out;
output   V2_29_065_out_ap_vld;
output  [31:0] V2_28_064_out;
output   V2_28_064_out_ap_vld;
output  [31:0] V2_27_063_out;
output   V2_27_063_out_ap_vld;
output  [31:0] V2_26_062_out;
output   V2_26_062_out_ap_vld;
output  [31:0] V2_25_061_out;
output   V2_25_061_out_ap_vld;
output  [31:0] V2_24_060_out;
output   V2_24_060_out_ap_vld;
output  [31:0] V2_23_059_out;
output   V2_23_059_out_ap_vld;
output  [31:0] V2_22_058_out;
output   V2_22_058_out_ap_vld;
output  [31:0] V2_21_057_out;
output   V2_21_057_out_ap_vld;
output  [31:0] V2_20_056_out;
output   V2_20_056_out_ap_vld;
output  [31:0] V2_19_055_out;
output   V2_19_055_out_ap_vld;
output  [31:0] V2_18_054_out;
output   V2_18_054_out_ap_vld;
output  [31:0] V2_17_053_out;
output   V2_17_053_out_ap_vld;
output  [31:0] V2_16_052_out;
output   V2_16_052_out_ap_vld;
output  [31:0] V2_15_051_out;
output   V2_15_051_out_ap_vld;
output  [31:0] V2_14_050_out;
output   V2_14_050_out_ap_vld;
output  [31:0] V2_13_049_out;
output   V2_13_049_out_ap_vld;
output  [31:0] V2_12_048_out;
output   V2_12_048_out_ap_vld;
output  [31:0] V2_11_047_out;
output   V2_11_047_out_ap_vld;
output  [31:0] V2_10_046_out;
output   V2_10_046_out_ap_vld;
output  [31:0] V2_9_045_out;
output   V2_9_045_out_ap_vld;
output  [31:0] V2_8_044_out;
output   V2_8_044_out_ap_vld;
output  [31:0] V2_7_043_out;
output   V2_7_043_out_ap_vld;
output  [31:0] V2_6_042_out;
output   V2_6_042_out_ap_vld;
output  [31:0] V2_5_041_out;
output   V2_5_041_out_ap_vld;
output  [31:0] V2_4_040_out;
output   V2_4_040_out_ap_vld;
output  [31:0] V2_3_039_out;
output   V2_3_039_out_ap_vld;
output  [31:0] V2_2_038_out;
output   V2_2_038_out_ap_vld;
output  [31:0] V2_1_037_out;
output   V2_1_037_out_ap_vld;
output  [31:0] V2_0_036_out;
output   V2_0_036_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_RREADY;
reg V2_31_067_out_ap_vld;
reg V2_30_066_out_ap_vld;
reg V2_29_065_out_ap_vld;
reg V2_28_064_out_ap_vld;
reg V2_27_063_out_ap_vld;
reg V2_26_062_out_ap_vld;
reg V2_25_061_out_ap_vld;
reg V2_24_060_out_ap_vld;
reg V2_23_059_out_ap_vld;
reg V2_22_058_out_ap_vld;
reg V2_21_057_out_ap_vld;
reg V2_20_056_out_ap_vld;
reg V2_19_055_out_ap_vld;
reg V2_18_054_out_ap_vld;
reg V2_17_053_out_ap_vld;
reg V2_16_052_out_ap_vld;
reg V2_15_051_out_ap_vld;
reg V2_14_050_out_ap_vld;
reg V2_13_049_out_ap_vld;
reg V2_12_048_out_ap_vld;
reg V2_11_047_out_ap_vld;
reg V2_10_046_out_ap_vld;
reg V2_9_045_out_ap_vld;
reg V2_8_044_out_ap_vld;
reg V2_7_043_out_ap_vld;
reg V2_6_042_out_ap_vld;
reg V2_5_041_out_ap_vld;
reg V2_4_040_out_ap_vld;
reg V2_3_039_out_ap_vld;
reg V2_2_038_out_ap_vld;
reg V2_1_037_out_ap_vld;
reg V2_0_036_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln89_fu_559_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] trunc_ln90_fu_571_p1;
reg   [4:0] trunc_ln90_reg_1079;
reg   [5:0] i_1_fu_174;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i;
wire   [5:0] add_ln89_fu_565_p2;
reg   [31:0] V2_1_fu_178;
wire   [31:0] V2_1_33_fu_580_p1;
reg   [31:0] V2_1_1_fu_182;
reg   [31:0] V2_1_2_fu_186;
reg   [31:0] V2_1_3_fu_190;
reg   [31:0] V2_1_4_fu_194;
reg   [31:0] V2_1_5_fu_198;
reg   [31:0] V2_1_6_fu_202;
reg   [31:0] V2_1_7_fu_206;
reg   [31:0] V2_1_8_fu_210;
reg   [31:0] V2_1_9_fu_214;
reg   [31:0] V2_1_10_fu_218;
reg   [31:0] V2_1_11_fu_222;
reg   [31:0] V2_1_12_fu_226;
reg   [31:0] V2_1_13_fu_230;
reg   [31:0] V2_1_14_fu_234;
reg   [31:0] V2_1_15_fu_238;
reg   [31:0] V2_1_16_fu_242;
reg   [31:0] V2_1_17_fu_246;
reg   [31:0] V2_1_18_fu_250;
reg   [31:0] V2_1_19_fu_254;
reg   [31:0] V2_1_20_fu_258;
reg   [31:0] V2_1_21_fu_262;
reg   [31:0] V2_1_22_fu_266;
reg   [31:0] V2_1_23_fu_270;
reg   [31:0] V2_1_24_fu_274;
reg   [31:0] V2_1_25_fu_278;
reg   [31:0] V2_1_26_fu_282;
reg   [31:0] V2_1_27_fu_286;
reg   [31:0] V2_1_28_fu_290;
reg   [31:0] V2_1_29_fu_294;
reg   [31:0] V2_1_30_fu_298;
reg   [31:0] V2_1_31_fu_302;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

simd_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln89_fu_559_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_174 <= add_ln89_fu_565_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_174 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd10))) begin
        V2_1_10_fu_218 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd11))) begin
        V2_1_11_fu_222 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd12))) begin
        V2_1_12_fu_226 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd13))) begin
        V2_1_13_fu_230 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd14))) begin
        V2_1_14_fu_234 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd15))) begin
        V2_1_15_fu_238 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd16))) begin
        V2_1_16_fu_242 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd17))) begin
        V2_1_17_fu_246 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd18))) begin
        V2_1_18_fu_250 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd19))) begin
        V2_1_19_fu_254 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd1))) begin
        V2_1_1_fu_182 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd20))) begin
        V2_1_20_fu_258 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd21))) begin
        V2_1_21_fu_262 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd22))) begin
        V2_1_22_fu_266 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd23))) begin
        V2_1_23_fu_270 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd24))) begin
        V2_1_24_fu_274 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd25))) begin
        V2_1_25_fu_278 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd26))) begin
        V2_1_26_fu_282 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd27))) begin
        V2_1_27_fu_286 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd28))) begin
        V2_1_28_fu_290 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd29))) begin
        V2_1_29_fu_294 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd2))) begin
        V2_1_2_fu_186 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd30))) begin
        V2_1_30_fu_298 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd31))) begin
        V2_1_31_fu_302 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd3))) begin
        V2_1_3_fu_190 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd4))) begin
        V2_1_4_fu_194 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd5))) begin
        V2_1_5_fu_198 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd6))) begin
        V2_1_6_fu_202 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd7))) begin
        V2_1_7_fu_206 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd8))) begin
        V2_1_8_fu_210 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd9))) begin
        V2_1_9_fu_214 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1079 == 5'd0))) begin
        V2_1_fu_178 <= V2_1_33_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_559_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln90_reg_1079 <= trunc_ln90_fu_571_p1;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_0_036_out_ap_vld = 1'b1;
    end else begin
        V2_0_036_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_10_046_out_ap_vld = 1'b1;
    end else begin
        V2_10_046_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_11_047_out_ap_vld = 1'b1;
    end else begin
        V2_11_047_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_12_048_out_ap_vld = 1'b1;
    end else begin
        V2_12_048_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_13_049_out_ap_vld = 1'b1;
    end else begin
        V2_13_049_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_14_050_out_ap_vld = 1'b1;
    end else begin
        V2_14_050_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_15_051_out_ap_vld = 1'b1;
    end else begin
        V2_15_051_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_16_052_out_ap_vld = 1'b1;
    end else begin
        V2_16_052_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_17_053_out_ap_vld = 1'b1;
    end else begin
        V2_17_053_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_18_054_out_ap_vld = 1'b1;
    end else begin
        V2_18_054_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_19_055_out_ap_vld = 1'b1;
    end else begin
        V2_19_055_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_1_037_out_ap_vld = 1'b1;
    end else begin
        V2_1_037_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_20_056_out_ap_vld = 1'b1;
    end else begin
        V2_20_056_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_21_057_out_ap_vld = 1'b1;
    end else begin
        V2_21_057_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_22_058_out_ap_vld = 1'b1;
    end else begin
        V2_22_058_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_23_059_out_ap_vld = 1'b1;
    end else begin
        V2_23_059_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_24_060_out_ap_vld = 1'b1;
    end else begin
        V2_24_060_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_25_061_out_ap_vld = 1'b1;
    end else begin
        V2_25_061_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_26_062_out_ap_vld = 1'b1;
    end else begin
        V2_26_062_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_27_063_out_ap_vld = 1'b1;
    end else begin
        V2_27_063_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_28_064_out_ap_vld = 1'b1;
    end else begin
        V2_28_064_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_29_065_out_ap_vld = 1'b1;
    end else begin
        V2_29_065_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_2_038_out_ap_vld = 1'b1;
    end else begin
        V2_2_038_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_30_066_out_ap_vld = 1'b1;
    end else begin
        V2_30_066_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_31_067_out_ap_vld = 1'b1;
    end else begin
        V2_31_067_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_3_039_out_ap_vld = 1'b1;
    end else begin
        V2_3_039_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_4_040_out_ap_vld = 1'b1;
    end else begin
        V2_4_040_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_5_041_out_ap_vld = 1'b1;
    end else begin
        V2_5_041_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_6_042_out_ap_vld = 1'b1;
    end else begin
        V2_6_042_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_7_043_out_ap_vld = 1'b1;
    end else begin
        V2_7_043_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_8_044_out_ap_vld = 1'b1;
    end else begin
        V2_8_044_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V2_9_045_out_ap_vld = 1'b1;
    end else begin
        V2_9_045_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_559_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 6'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_174;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign V2_0_036_out = V2_1_fu_178;

assign V2_10_046_out = V2_1_10_fu_218;

assign V2_11_047_out = V2_1_11_fu_222;

assign V2_12_048_out = V2_1_12_fu_226;

assign V2_13_049_out = V2_1_13_fu_230;

assign V2_14_050_out = V2_1_14_fu_234;

assign V2_15_051_out = V2_1_15_fu_238;

assign V2_16_052_out = V2_1_16_fu_242;

assign V2_17_053_out = V2_1_17_fu_246;

assign V2_18_054_out = V2_1_18_fu_250;

assign V2_19_055_out = V2_1_19_fu_254;

assign V2_1_037_out = V2_1_1_fu_182;

assign V2_1_33_fu_580_p1 = m_axi_gmem_RDATA;

assign V2_20_056_out = V2_1_20_fu_258;

assign V2_21_057_out = V2_1_21_fu_262;

assign V2_22_058_out = V2_1_22_fu_266;

assign V2_23_059_out = V2_1_23_fu_270;

assign V2_24_060_out = V2_1_24_fu_274;

assign V2_25_061_out = V2_1_25_fu_278;

assign V2_26_062_out = V2_1_26_fu_282;

assign V2_27_063_out = V2_1_27_fu_286;

assign V2_28_064_out = V2_1_28_fu_290;

assign V2_29_065_out = V2_1_29_fu_294;

assign V2_2_038_out = V2_1_2_fu_186;

assign V2_30_066_out = V2_1_30_fu_298;

assign V2_31_067_out = V2_1_31_fu_302;

assign V2_3_039_out = V2_1_3_fu_190;

assign V2_4_040_out = V2_1_4_fu_194;

assign V2_5_041_out = V2_1_5_fu_198;

assign V2_6_042_out = V2_1_6_fu_202;

assign V2_7_043_out = V2_1_7_fu_206;

assign V2_8_044_out = V2_1_8_fu_210;

assign V2_9_045_out = V2_1_9_fu_214;

assign add_ln89_fu_565_p2 = (ap_sig_allocacmp_i + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln89_fu_559_p2 = ((ap_sig_allocacmp_i == 6'd32) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign trunc_ln90_fu_571_p1 = ap_sig_allocacmp_i[4:0];

endmodule //simd_array_simd_array_Pipeline_VITIS_LOOP_89_2
