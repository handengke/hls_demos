// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module simd_array_simd_array_Pipeline_VITIS_LOOP_89_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        sext_ln89,
        V1_31_035_out,
        V1_31_035_out_ap_vld,
        V1_30_034_out,
        V1_30_034_out_ap_vld,
        V1_29_033_out,
        V1_29_033_out_ap_vld,
        V1_28_032_out,
        V1_28_032_out_ap_vld,
        V1_27_031_out,
        V1_27_031_out_ap_vld,
        V1_26_030_out,
        V1_26_030_out_ap_vld,
        V1_25_029_out,
        V1_25_029_out_ap_vld,
        V1_24_028_out,
        V1_24_028_out_ap_vld,
        V1_23_027_out,
        V1_23_027_out_ap_vld,
        V1_22_026_out,
        V1_22_026_out_ap_vld,
        V1_21_025_out,
        V1_21_025_out_ap_vld,
        V1_20_024_out,
        V1_20_024_out_ap_vld,
        V1_19_023_out,
        V1_19_023_out_ap_vld,
        V1_18_022_out,
        V1_18_022_out_ap_vld,
        V1_17_021_out,
        V1_17_021_out_ap_vld,
        V1_16_020_out,
        V1_16_020_out_ap_vld,
        V1_15_019_out,
        V1_15_019_out_ap_vld,
        V1_14_018_out,
        V1_14_018_out_ap_vld,
        V1_13_017_out,
        V1_13_017_out_ap_vld,
        V1_12_016_out,
        V1_12_016_out_ap_vld,
        V1_11_015_out,
        V1_11_015_out_ap_vld,
        V1_10_014_out,
        V1_10_014_out_ap_vld,
        V1_9_013_out,
        V1_9_013_out_ap_vld,
        V1_8_012_out,
        V1_8_012_out_ap_vld,
        V1_7_011_out,
        V1_7_011_out_ap_vld,
        V1_6_010_out,
        V1_6_010_out_ap_vld,
        V1_5_09_out,
        V1_5_09_out_ap_vld,
        V1_4_08_out,
        V1_4_08_out_ap_vld,
        V1_3_07_out,
        V1_3_07_out_ap_vld,
        V1_2_06_out,
        V1_2_06_out_ap_vld,
        V1_1_05_out,
        V1_1_05_out_ap_vld,
        V1_0_04_out,
        V1_0_04_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [61:0] sext_ln89;
output  [31:0] V1_31_035_out;
output   V1_31_035_out_ap_vld;
output  [31:0] V1_30_034_out;
output   V1_30_034_out_ap_vld;
output  [31:0] V1_29_033_out;
output   V1_29_033_out_ap_vld;
output  [31:0] V1_28_032_out;
output   V1_28_032_out_ap_vld;
output  [31:0] V1_27_031_out;
output   V1_27_031_out_ap_vld;
output  [31:0] V1_26_030_out;
output   V1_26_030_out_ap_vld;
output  [31:0] V1_25_029_out;
output   V1_25_029_out_ap_vld;
output  [31:0] V1_24_028_out;
output   V1_24_028_out_ap_vld;
output  [31:0] V1_23_027_out;
output   V1_23_027_out_ap_vld;
output  [31:0] V1_22_026_out;
output   V1_22_026_out_ap_vld;
output  [31:0] V1_21_025_out;
output   V1_21_025_out_ap_vld;
output  [31:0] V1_20_024_out;
output   V1_20_024_out_ap_vld;
output  [31:0] V1_19_023_out;
output   V1_19_023_out_ap_vld;
output  [31:0] V1_18_022_out;
output   V1_18_022_out_ap_vld;
output  [31:0] V1_17_021_out;
output   V1_17_021_out_ap_vld;
output  [31:0] V1_16_020_out;
output   V1_16_020_out_ap_vld;
output  [31:0] V1_15_019_out;
output   V1_15_019_out_ap_vld;
output  [31:0] V1_14_018_out;
output   V1_14_018_out_ap_vld;
output  [31:0] V1_13_017_out;
output   V1_13_017_out_ap_vld;
output  [31:0] V1_12_016_out;
output   V1_12_016_out_ap_vld;
output  [31:0] V1_11_015_out;
output   V1_11_015_out_ap_vld;
output  [31:0] V1_10_014_out;
output   V1_10_014_out_ap_vld;
output  [31:0] V1_9_013_out;
output   V1_9_013_out_ap_vld;
output  [31:0] V1_8_012_out;
output   V1_8_012_out_ap_vld;
output  [31:0] V1_7_011_out;
output   V1_7_011_out_ap_vld;
output  [31:0] V1_6_010_out;
output   V1_6_010_out_ap_vld;
output  [31:0] V1_5_09_out;
output   V1_5_09_out_ap_vld;
output  [31:0] V1_4_08_out;
output   V1_4_08_out_ap_vld;
output  [31:0] V1_3_07_out;
output   V1_3_07_out_ap_vld;
output  [31:0] V1_2_06_out;
output   V1_2_06_out_ap_vld;
output  [31:0] V1_1_05_out;
output   V1_1_05_out_ap_vld;
output  [31:0] V1_0_04_out;
output   V1_0_04_out_ap_vld;

reg ap_idle;
reg m_axi_gmem0_RREADY;
reg V1_31_035_out_ap_vld;
reg V1_30_034_out_ap_vld;
reg V1_29_033_out_ap_vld;
reg V1_28_032_out_ap_vld;
reg V1_27_031_out_ap_vld;
reg V1_26_030_out_ap_vld;
reg V1_25_029_out_ap_vld;
reg V1_24_028_out_ap_vld;
reg V1_23_027_out_ap_vld;
reg V1_22_026_out_ap_vld;
reg V1_21_025_out_ap_vld;
reg V1_20_024_out_ap_vld;
reg V1_19_023_out_ap_vld;
reg V1_18_022_out_ap_vld;
reg V1_17_021_out_ap_vld;
reg V1_16_020_out_ap_vld;
reg V1_15_019_out_ap_vld;
reg V1_14_018_out_ap_vld;
reg V1_13_017_out_ap_vld;
reg V1_12_016_out_ap_vld;
reg V1_11_015_out_ap_vld;
reg V1_10_014_out_ap_vld;
reg V1_9_013_out_ap_vld;
reg V1_8_012_out_ap_vld;
reg V1_7_011_out_ap_vld;
reg V1_6_010_out_ap_vld;
reg V1_5_09_out_ap_vld;
reg V1_4_08_out_ap_vld;
reg V1_3_07_out_ap_vld;
reg V1_2_06_out_ap_vld;
reg V1_1_05_out_ap_vld;
reg V1_0_04_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln89_fu_557_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] trunc_ln90_fu_569_p1;
reg   [4:0] trunc_ln90_reg_1077;
reg   [5:0] i_fu_172;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_2;
wire   [5:0] add_ln89_fu_563_p2;
reg   [31:0] V1_1_fu_176;
wire   [31:0] V1_1_33_fu_578_p1;
reg   [31:0] V1_1_1_fu_180;
reg   [31:0] V1_1_2_fu_184;
reg   [31:0] V1_1_3_fu_188;
reg   [31:0] V1_1_4_fu_192;
reg   [31:0] V1_1_5_fu_196;
reg   [31:0] V1_1_6_fu_200;
reg   [31:0] V1_1_7_fu_204;
reg   [31:0] V1_1_8_fu_208;
reg   [31:0] V1_1_9_fu_212;
reg   [31:0] V1_1_10_fu_216;
reg   [31:0] V1_1_11_fu_220;
reg   [31:0] V1_1_12_fu_224;
reg   [31:0] V1_1_13_fu_228;
reg   [31:0] V1_1_14_fu_232;
reg   [31:0] V1_1_15_fu_236;
reg   [31:0] V1_1_16_fu_240;
reg   [31:0] V1_1_17_fu_244;
reg   [31:0] V1_1_18_fu_248;
reg   [31:0] V1_1_19_fu_252;
reg   [31:0] V1_1_20_fu_256;
reg   [31:0] V1_1_21_fu_260;
reg   [31:0] V1_1_22_fu_264;
reg   [31:0] V1_1_23_fu_268;
reg   [31:0] V1_1_24_fu_272;
reg   [31:0] V1_1_25_fu_276;
reg   [31:0] V1_1_26_fu_280;
reg   [31:0] V1_1_27_fu_284;
reg   [31:0] V1_1_28_fu_288;
reg   [31:0] V1_1_29_fu_292;
reg   [31:0] V1_1_30_fu_296;
reg   [31:0] V1_1_31_fu_300;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

simd_array_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln89_fu_557_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_172 <= add_ln89_fu_563_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_172 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd10))) begin
        V1_1_10_fu_216 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd11))) begin
        V1_1_11_fu_220 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd12))) begin
        V1_1_12_fu_224 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd13))) begin
        V1_1_13_fu_228 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd14))) begin
        V1_1_14_fu_232 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd15))) begin
        V1_1_15_fu_236 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd16))) begin
        V1_1_16_fu_240 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd17))) begin
        V1_1_17_fu_244 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd18))) begin
        V1_1_18_fu_248 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd19))) begin
        V1_1_19_fu_252 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd1))) begin
        V1_1_1_fu_180 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd20))) begin
        V1_1_20_fu_256 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd21))) begin
        V1_1_21_fu_260 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd22))) begin
        V1_1_22_fu_264 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd23))) begin
        V1_1_23_fu_268 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd24))) begin
        V1_1_24_fu_272 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd25))) begin
        V1_1_25_fu_276 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd26))) begin
        V1_1_26_fu_280 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd27))) begin
        V1_1_27_fu_284 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd28))) begin
        V1_1_28_fu_288 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd29))) begin
        V1_1_29_fu_292 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd2))) begin
        V1_1_2_fu_184 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd30))) begin
        V1_1_30_fu_296 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd31))) begin
        V1_1_31_fu_300 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd3))) begin
        V1_1_3_fu_188 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd4))) begin
        V1_1_4_fu_192 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd5))) begin
        V1_1_5_fu_196 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd6))) begin
        V1_1_6_fu_200 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd7))) begin
        V1_1_7_fu_204 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd8))) begin
        V1_1_8_fu_208 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd9))) begin
        V1_1_9_fu_212 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln90_reg_1077 == 5'd0))) begin
        V1_1_fu_176 <= V1_1_33_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_557_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln90_reg_1077 <= trunc_ln90_fu_569_p1;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_0_04_out_ap_vld = 1'b1;
    end else begin
        V1_0_04_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_10_014_out_ap_vld = 1'b1;
    end else begin
        V1_10_014_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_11_015_out_ap_vld = 1'b1;
    end else begin
        V1_11_015_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_12_016_out_ap_vld = 1'b1;
    end else begin
        V1_12_016_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_13_017_out_ap_vld = 1'b1;
    end else begin
        V1_13_017_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_14_018_out_ap_vld = 1'b1;
    end else begin
        V1_14_018_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_15_019_out_ap_vld = 1'b1;
    end else begin
        V1_15_019_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_16_020_out_ap_vld = 1'b1;
    end else begin
        V1_16_020_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_17_021_out_ap_vld = 1'b1;
    end else begin
        V1_17_021_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_18_022_out_ap_vld = 1'b1;
    end else begin
        V1_18_022_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_19_023_out_ap_vld = 1'b1;
    end else begin
        V1_19_023_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_1_05_out_ap_vld = 1'b1;
    end else begin
        V1_1_05_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_20_024_out_ap_vld = 1'b1;
    end else begin
        V1_20_024_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_21_025_out_ap_vld = 1'b1;
    end else begin
        V1_21_025_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_22_026_out_ap_vld = 1'b1;
    end else begin
        V1_22_026_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_23_027_out_ap_vld = 1'b1;
    end else begin
        V1_23_027_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_24_028_out_ap_vld = 1'b1;
    end else begin
        V1_24_028_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_25_029_out_ap_vld = 1'b1;
    end else begin
        V1_25_029_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_26_030_out_ap_vld = 1'b1;
    end else begin
        V1_26_030_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_27_031_out_ap_vld = 1'b1;
    end else begin
        V1_27_031_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_28_032_out_ap_vld = 1'b1;
    end else begin
        V1_28_032_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_29_033_out_ap_vld = 1'b1;
    end else begin
        V1_29_033_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_2_06_out_ap_vld = 1'b1;
    end else begin
        V1_2_06_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_30_034_out_ap_vld = 1'b1;
    end else begin
        V1_30_034_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_31_035_out_ap_vld = 1'b1;
    end else begin
        V1_31_035_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_3_07_out_ap_vld = 1'b1;
    end else begin
        V1_3_07_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_4_08_out_ap_vld = 1'b1;
    end else begin
        V1_4_08_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_5_09_out_ap_vld = 1'b1;
    end else begin
        V1_5_09_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_6_010_out_ap_vld = 1'b1;
    end else begin
        V1_6_010_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_7_011_out_ap_vld = 1'b1;
    end else begin
        V1_7_011_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_8_012_out_ap_vld = 1'b1;
    end else begin
        V1_8_012_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V1_9_013_out_ap_vld = 1'b1;
    end else begin
        V1_9_013_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_fu_557_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign V1_0_04_out = V1_1_fu_176;

assign V1_10_014_out = V1_1_10_fu_216;

assign V1_11_015_out = V1_1_11_fu_220;

assign V1_12_016_out = V1_1_12_fu_224;

assign V1_13_017_out = V1_1_13_fu_228;

assign V1_14_018_out = V1_1_14_fu_232;

assign V1_15_019_out = V1_1_15_fu_236;

assign V1_16_020_out = V1_1_16_fu_240;

assign V1_17_021_out = V1_1_17_fu_244;

assign V1_18_022_out = V1_1_18_fu_248;

assign V1_19_023_out = V1_1_19_fu_252;

assign V1_1_05_out = V1_1_1_fu_180;

assign V1_1_33_fu_578_p1 = m_axi_gmem0_RDATA;

assign V1_20_024_out = V1_1_20_fu_256;

assign V1_21_025_out = V1_1_21_fu_260;

assign V1_22_026_out = V1_1_22_fu_264;

assign V1_23_027_out = V1_1_23_fu_268;

assign V1_24_028_out = V1_1_24_fu_272;

assign V1_25_029_out = V1_1_25_fu_276;

assign V1_26_030_out = V1_1_26_fu_280;

assign V1_27_031_out = V1_1_27_fu_284;

assign V1_28_032_out = V1_1_28_fu_288;

assign V1_29_033_out = V1_1_29_fu_292;

assign V1_2_06_out = V1_1_2_fu_184;

assign V1_30_034_out = V1_1_30_fu_296;

assign V1_31_035_out = V1_1_31_fu_300;

assign V1_3_07_out = V1_1_3_fu_188;

assign V1_4_08_out = V1_1_4_fu_192;

assign V1_5_09_out = V1_1_5_fu_196;

assign V1_6_010_out = V1_1_6_fu_200;

assign V1_7_011_out = V1_1_7_fu_204;

assign V1_8_012_out = V1_1_8_fu_208;

assign V1_9_013_out = V1_1_9_fu_212;

assign add_ln89_fu_563_p2 = (ap_sig_allocacmp_i_2 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln89_fu_557_p2 = ((ap_sig_allocacmp_i_2 == 6'd32) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 32'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign trunc_ln90_fu_569_p1 = ap_sig_allocacmp_i_2[4:0];

endmodule //simd_array_simd_array_Pipeline_VITIS_LOOP_89_1
